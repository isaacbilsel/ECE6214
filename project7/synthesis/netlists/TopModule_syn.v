/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : O-2018.06-SP1
// Date      : Fri Apr  4 18:58:13 2025
/////////////////////////////////////////////////////////////


module reset_synchronization ( clk, rst_n, rst_n_sync );
  input clk, rst_n;
  output rst_n_sync;
  wire   upsample_data_mid, upsample_data_in;

  DFFR_E upsample_data_in_reg ( .D(1'b1), .CLK(clk), .RN(rst_n), .Q(
        upsample_data_in) );
  DFFR_E upsample_data_mid_reg ( .D(upsample_data_in), .CLK(clk), .RN(rst_n), 
        .Q(upsample_data_mid) );
  DFFR_E rst_n_sync_reg ( .D(upsample_data_mid), .CLK(clk), .RN(rst_n), .Q(
        rst_n_sync) );
endmodule


module upsampler ( clk, rst_n, new_symbol, input_data, sample_rate, 
        output_data );
  input [3:0] input_data;
  input [3:0] sample_rate;
  output [3:0] output_data;
  input clk, rst_n, new_symbol;
  wire   N9, N10, N11, N12, n5, n7, n8, n9, n11, n12, n15, n19, n20, n22, n23,
         n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n1, n2, n3, n4,
         n6, n10, n13, n14, n16, n17, n18, n21, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68,
         n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82,
         n83, n84, n85, n86;
  wire   [3:0] sample_count_current;
  wire   [3:0] sample_rate_q;

  DFFR_E \sample_count_current_reg[0]  ( .D(n25), .CLK(clk), .RN(rst_n), .Q(
        sample_count_current[0]), .QBAR(n72) );
  DFFR_E \sample_count_current_reg[2]  ( .D(n24), .CLK(clk), .RN(rst_n), .Q(
        sample_count_current[2]), .QBAR(n70) );
  DFF_E \sample_rate_q_reg[0]  ( .D(n26), .CLK(clk), .Q(sample_rate_q[0]), 
        .QBAR(n68) );
  DFF_E \sample_rate_q_reg[1]  ( .D(n27), .CLK(clk), .Q(sample_rate_q[1]), 
        .QBAR(n66) );
  DFF_E \sample_rate_q_reg[3]  ( .D(n29), .CLK(clk), .Q(sample_rate_q[3]), 
        .QBAR(n64) );
  DFF_E \sample_rate_q_reg[2]  ( .D(n28), .CLK(clk), .Q(sample_rate_q[2]), 
        .QBAR(n62) );
  DFFR_E \sample_count_current_reg[3]  ( .D(n23), .CLK(clk), .RN(rst_n), .Q(
        sample_count_current[3]), .QBAR(n61) );
  DFFR_E state_current_reg ( .D(n34), .CLK(clk), .RN(rst_n), .Q(n52) );
  DFFR_E \sample_count_current_reg[1]  ( .D(n22), .CLK(clk), .RN(rst_n), 
        .QBAR(n51) );
  DFFR_E \output_data_reg[3]  ( .D(n30), .CLK(clk), .RN(rst_n), .Q(
        output_data[3]) );
  DFFR_E \output_data_reg[2]  ( .D(n31), .CLK(clk), .RN(rst_n), .Q(
        output_data[2]) );
  DFFR_E \output_data_reg[1]  ( .D(n32), .CLK(clk), .RN(rst_n), .Q(
        output_data[1]) );
  DFFR_E \output_data_reg[0]  ( .D(n33), .CLK(clk), .RN(rst_n), .Q(
        output_data[0]) );
  NAND4_C U3 ( .A(n18), .B(n84), .C(n20), .D(n85), .Z(n19) );
  INVERT_H U4 ( .A(n69), .Z(n1) );
  INVERT_I U5 ( .A(n68), .Z(n69) );
  NOR2_D U6 ( .A(n47), .B(n48), .Z(n43) );
  XOR2_B U7 ( .A(N10), .B(n41), .Z(n2) );
  INVERT_E U8 ( .A(n70), .Z(n71) );
  INVERT_D U9 ( .A(n86), .Z(n3) );
  INVERT_J U10 ( .A(rst_n), .Z(n86) );
  INVERT_H U11 ( .A(n4), .Z(n9) );
  NOR2_C U12 ( .A(n40), .B(n36), .Z(n6) );
  NOR2_D U13 ( .A(n82), .B(n36), .Z(n10) );
  NOR2_D U14 ( .A(n6), .B(n10), .Z(n4) );
  INVERT_I U15 ( .A(n14), .Z(n36) );
  INVERT_E U16 ( .A(n35), .Z(n13) );
  INVERT_H U17 ( .A(n13), .Z(n14) );
  CLKI_I U18 ( .A(n15), .Z(n35) );
  INVERT_I U19 ( .A(n19), .Z(n37) );
  INVERT_H U20 ( .A(n21), .Z(n16) );
  INVERT_H U21 ( .A(n16), .Z(n17) );
  INVERT_E U22 ( .A(n12), .Z(n21) );
  INVERT_K U23 ( .A(n60), .Z(n83) );
  AO22_F U24 ( .A1(output_data[0]), .A2(n83), .B1(input_data[0]), .B2(n37), 
        .Z(n33) );
  AO22_F U25 ( .A1(output_data[1]), .A2(n83), .B1(input_data[1]), .B2(n37), 
        .Z(n32) );
  AO22_F U26 ( .A1(output_data[2]), .A2(n83), .B1(input_data[2]), .B2(n37), 
        .Z(n31) );
  AO22_F U27 ( .A1(output_data[3]), .A2(n83), .B1(input_data[3]), .B2(n37), 
        .Z(n30) );
  INVERT_F U28 ( .A(n83), .Z(n18) );
  AO21_D U29 ( .A1(new_symbol), .A2(n58), .B(n60), .Z(n34) );
  NAND3_C U30 ( .A(n60), .B(n85), .C(n73), .Z(n7) );
  AO22_F U31 ( .A1(n58), .A2(n73), .B1(n60), .B2(n55), .Z(n25) );
  NAND3_C U32 ( .A(n73), .B(n60), .C(n57), .Z(n12) );
  NAND3_C U33 ( .A(n17), .B(n61), .C(n71), .Z(n11) );
  AO22_F U34 ( .A1(n36), .A2(n71), .B1(n70), .B2(n17), .Z(n24) );
  INVERT_H U35 ( .A(sample_count_current[3]), .Z(n38) );
  INVERT_H U36 ( .A(n38), .Z(n39) );
  INVERT_H U37 ( .A(sample_count_current[2]), .Z(n40) );
  INVERT_H U38 ( .A(n40), .Z(n41) );
  AO21_E U39 ( .A1(n76), .A2(n63), .B(n75), .Z(N10) );
  INVERT_H U40 ( .A(n75), .Z(n77) );
  NOR2_F U41 ( .A(n76), .B(sample_rate_q[2]), .Z(n75) );
  INVERT_H U42 ( .A(n43), .Z(n42) );
  CLKI_I U43 ( .A(n79), .Z(n44) );
  INVERT_E U44 ( .A(n80), .Z(n45) );
  CLKI_I U45 ( .A(n81), .Z(n46) );
  NOR2_C U46 ( .A(n44), .B(n45), .Z(n49) );
  INVERT_E U47 ( .A(n49), .Z(n47) );
  NOR2_C U48 ( .A(n46), .B(n2), .Z(n50) );
  INVERT_E U49 ( .A(n50), .Z(n48) );
  XNOR2_B U50 ( .A(N11), .B(n39), .Z(n81) );
  NOR2_C U51 ( .A(N12), .B(n78), .Z(n80) );
  XNOR2_B U52 ( .A(N9), .B(n57), .Z(n79) );
  NOR2_D U53 ( .A(n39), .B(n41), .Z(n20) );
  INVERT_E U54 ( .A(n59), .Z(n53) );
  INVERT_H U55 ( .A(n53), .Z(n54) );
  AOI21_D U56 ( .A1(n55), .A2(n82), .B(n58), .Z(n5) );
  INVERT_H U57 ( .A(n56), .Z(n82) );
  INVERT_I U58 ( .A(n57), .Z(n85) );
  INVERT_H U59 ( .A(n73), .Z(n55) );
  INVERT_I U60 ( .A(n42), .Z(n56) );
  INVERT_I U61 ( .A(n51), .Z(n57) );
  INVERT_I U62 ( .A(n52), .Z(n58) );
  INVERT_D U63 ( .A(n8), .Z(n59) );
  INVERT_K U64 ( .A(n54), .Z(n60) );
  NOR2_C U65 ( .A(n58), .B(n56), .Z(n8) );
  INVERT_H U66 ( .A(n74), .Z(n76) );
  NOR2_F U67 ( .A(sample_rate_q[1]), .B(sample_rate_q[0]), .Z(n74) );
  INVERT_H U68 ( .A(n62), .Z(n63) );
  AO22_F U69 ( .A1(sample_rate[2]), .A2(n3), .B1(n63), .B2(n86), .Z(n28) );
  INVERT_H U70 ( .A(n64), .Z(n65) );
  AO22_F U71 ( .A1(sample_rate[3]), .A2(rst_n), .B1(n65), .B2(n86), .Z(n29) );
  NOR2_E U72 ( .A(n77), .B(sample_rate_q[3]), .Z(N12) );
  AO21_D U73 ( .A1(n77), .A2(n65), .B(N12), .Z(N11) );
  INVERT_H U74 ( .A(n66), .Z(n67) );
  AO22_F U75 ( .A1(sample_rate[1]), .A2(rst_n), .B1(n67), .B2(n86), .Z(n27) );
  AO22_F U76 ( .A1(sample_rate[0]), .A2(rst_n), .B1(n69), .B2(n86), .Z(n26) );
  AO21_D U77 ( .A1(n69), .A2(n67), .B(n74), .Z(N9) );
  INVERT_I U78 ( .A(n72), .Z(n73) );
  XOR2_B U79 ( .A(n1), .B(sample_count_current[0]), .Z(n78) );
  OAI21_B U80 ( .A1(n57), .A2(n56), .B(n5), .Z(n15) );
  OAI21_B U81 ( .A1(n5), .A2(n85), .B(n7), .Z(n22) );
  OAI21_B U82 ( .A1(n9), .A2(n61), .B(n11), .Z(n23) );
  INVERT_D U83 ( .A(sample_count_current[0]), .Z(n84) );
endmodule


module dsp_slice_70_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_70_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n22), .Z(n20) );
  INVERT_D U3 ( .A(B[2]), .Z(n29) );
  INVERT_E U4 ( .A(n3), .Z(n19) );
  AO21_F U5 ( .A1(n24), .A2(n11), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n27), .A2(n49), .B(n18), .Z(n2) );
  XOR2_B U7 ( .A(n30), .B(n31), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n21), .B(B[8]), .Z(n33) );
  XOR2_B U9 ( .A(n34), .B(n21), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n50) );
  INVERT_D U11 ( .A(n50), .Z(n3) );
  INVERT_H U12 ( .A(n39), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n39) );
  INVERT_E U15 ( .A(n12), .Z(n10) );
  INVERT_E U16 ( .A(n13), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n19), .Z(n17) );
  NAND2BAL_E U19 ( .A(n23), .B(n36), .Z(n37) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n36) );
  NAND2BAL_E U21 ( .A(n25), .B(n44), .Z(n45) );
  NAND2_F U22 ( .A(B[5]), .B(A[5]), .Z(n44) );
  INVERT_E U23 ( .A(n40), .Z(n24) );
  INVERT_E U24 ( .A(n51), .Z(n27) );
  INVERT_F U25 ( .A(n47), .Z(n26) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n47) );
  AO21_E U27 ( .A1(n21), .A2(A[8]), .B(n33), .Z(n31) );
  XNOR2_C U28 ( .A(n48), .B(n8), .Z(SUM[4]) );
  NOR2_C U29 ( .A(n26), .B(n46), .Z(n48) );
  XOR2_B U30 ( .A(B[8]), .B(A[8]), .Z(n34) );
  CLKI_O U31 ( .A(n20), .Z(n21) );
  INVERT_H U32 ( .A(n2), .Z(n8) );
  INVERT_H U33 ( .A(n1), .Z(n9) );
  INVERT_F U34 ( .A(n10), .Z(n11) );
  OA21_F U35 ( .A1(n42), .A2(n14), .B(n44), .Z(n38) );
  INVERT_D U36 ( .A(n38), .Z(n12) );
  INVERT_D U37 ( .A(n43), .Z(n13) );
  INVERT_F U38 ( .A(n7), .Z(n14) );
  OA21_F U39 ( .A1(n46), .A2(n8), .B(n47), .Z(n43) );
  NOR2_E U40 ( .A(B[4]), .B(A[4]), .Z(n46) );
  INVERT_E U41 ( .A(n29), .Z(n15) );
  INVERT_H U42 ( .A(n15), .Z(n16) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  OA21_F U44 ( .A1(n35), .A2(n9), .B(n36), .Z(n32) );
  INVERT_D U45 ( .A(n32), .Z(n22) );
  XOR2_B U46 ( .A(n49), .B(n52), .Z(SUM[3]) );
  NOR2_C U47 ( .A(n18), .B(n51), .Z(n52) );
  NOR2_E U48 ( .A(B[3]), .B(A[3]), .Z(n51) );
  XOR2_B U49 ( .A(n37), .B(n9), .Z(SUM[7]) );
  INVERT_E U50 ( .A(n35), .Z(n23) );
  NOR2_E U51 ( .A(B[7]), .B(A[7]), .Z(n35) );
  XOR2_B U52 ( .A(n41), .B(n11), .Z(SUM[6]) );
  NOR2_C U53 ( .A(n5), .B(n40), .Z(n41) );
  NOR2_E U54 ( .A(B[6]), .B(A[6]), .Z(n40) );
  XOR2_B U55 ( .A(n45), .B(n14), .Z(SUM[5]) );
  INVERT_E U56 ( .A(n42), .Z(n25) );
  NOR2_E U57 ( .A(B[5]), .B(A[5]), .Z(n42) );
  NOR2_F U58 ( .A(n16), .B(n28), .Z(n49) );
  INVERT_H U59 ( .A(A[2]), .Z(n28) );
  XOR2_B U60 ( .A(B[9]), .B(A[9]), .Z(n30) );
  AOI21_A U61 ( .A1(n16), .A2(n28), .B(n49), .Z(SUM[2]) );
endmodule


module dsp_slice_70_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n8), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n12), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n16), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_70_DW01_add_1 FS_1 ( .A({n40, n34, n31, n32, \A1[5] , \A1[4] , n21, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n6, n36, \A2[6] , n35, n19, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n39), .B(n4), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n41), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n17), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_C S2_2_2 ( .A(\ab[2][2] ), .B(n37), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n32) );
  INVERT_H U3 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U4 ( .A(B[1]), .B(n49), .Z(\ab[3][1] ) );
  NOR2_D U5 ( .A(B[0]), .B(n49), .Z(\ab[3][0] ) );
  XNOR2_C U6 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_J U7 ( .A(n51), .Z(n23) );
  NOR2_D U8 ( .A(B[5]), .B(n49), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n49), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n49) );
  INVERT_I U11 ( .A(n18), .Z(n19) );
  INVERT_F U12 ( .A(n20), .Z(n18) );
  NOR2_D U13 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  INVERT_D U14 ( .A(\CARRYB[1][6] ), .Z(n3) );
  INVERT_E U15 ( .A(n3), .Z(n4) );
  NAND2BAL_E U16 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n5) );
  INVERT_H U18 ( .A(n5), .Z(n6) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_I U21 ( .A(n33), .Z(n34) );
  AND2_H U22 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U23 ( .A(\CARRYB[1][0] ), .Z(n7) );
  INVERT_E U24 ( .A(n7), .Z(n8) );
  AND2_H U25 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U26 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U27 ( .A(n9), .Z(n10) );
  AND2_H U28 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U29 ( .A(\CARRYB[1][3] ), .Z(n11) );
  INVERT_E U30 ( .A(n11), .Z(n12) );
  AND2_H U31 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U32 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U33 ( .A(n13), .Z(n14) );
  AND2_H U34 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U35 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U36 ( .A(n15), .Z(n16) );
  AND2_H U37 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U38 ( .A(\ab[3][6] ), .Z(n17) );
  INVERT_I U39 ( .A(n23), .Z(n24) );
  BUFFER_H U40 ( .A(\A2[4] ), .Z(n20) );
  AND2_H U41 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U42 ( .A(n2), .Z(n21) );
  NOR2_E U43 ( .A(n42), .B(n25), .Z(\ab[1][6] ) );
  INVERT_I U44 ( .A(n23), .Z(n25) );
  XOR2_D U45 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_K U46 ( .A(n27), .Z(n29) );
  NOR2_D U47 ( .A(n29), .B(n48), .Z(\ab[2][0] ) );
  NOR2_C U48 ( .A(n48), .B(n52), .Z(PRODUCT[0]) );
  NOR2_E U49 ( .A(n25), .B(n48), .Z(\ab[1][0] ) );
  INVERT_I U50 ( .A(B[0]), .Z(n48) );
  NOR2_D U51 ( .A(n28), .B(n47), .Z(\ab[2][1] ) );
  NOR2_E U52 ( .A(n26), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U53 ( .A(B[1]), .Z(n47) );
  NOR2_E U54 ( .A(n43), .B(n24), .Z(\ab[1][5] ) );
  NOR2_D U55 ( .A(n29), .B(n43), .Z(\ab[2][5] ) );
  INVERT_I U56 ( .A(B[5]), .Z(n43) );
  NOR2_E U57 ( .A(n44), .B(n25), .Z(\ab[1][4] ) );
  NOR2_D U58 ( .A(n29), .B(n44), .Z(\ab[2][4] ) );
  INVERT_I U59 ( .A(B[4]), .Z(n44) );
  NOR2_E U60 ( .A(n45), .B(n24), .Z(\ab[1][3] ) );
  NOR2_D U61 ( .A(n29), .B(n45), .Z(\ab[2][3] ) );
  INVERT_I U62 ( .A(B[3]), .Z(n45) );
  NOR2_C U63 ( .A(n28), .B(n46), .Z(\ab[2][2] ) );
  NOR2_E U64 ( .A(n24), .B(n46), .Z(\ab[1][2] ) );
  INVERT_I U65 ( .A(B[2]), .Z(n46) );
  INVERT_F U66 ( .A(n23), .Z(n26) );
  INVERT_I U67 ( .A(n50), .Z(n27) );
  INVERT_H U68 ( .A(n27), .Z(n28) );
  NOR2_E U69 ( .A(n44), .B(n52), .Z(\ab[0][4] ) );
  NOR2_E U70 ( .A(n43), .B(n52), .Z(\ab[0][5] ) );
  NOR2_E U71 ( .A(n45), .B(n52), .Z(\ab[0][3] ) );
  NOR2_E U72 ( .A(n52), .B(n46), .Z(\ab[0][2] ) );
  NOR2_E U73 ( .A(n52), .B(n47), .Z(\ab[0][1] ) );
  NOR2_E U74 ( .A(n42), .B(n52), .Z(\ab[0][6] ) );
  INVERT_M U75 ( .A(A[0]), .Z(n52) );
  AND2_H U76 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U77 ( .A(\A2[5] ), .Z(n35) );
  INVERT_I U78 ( .A(\A2[7] ), .Z(n36) );
  INVERT_H U79 ( .A(\A1[7] ), .Z(n30) );
  INVERT_I U80 ( .A(n30), .Z(n31) );
  INVERT_H U81 ( .A(\A1[8] ), .Z(n33) );
  NOR2_D U82 ( .A(n41), .B(n49), .Z(\ab[3][7] ) );
  NOR2_E U83 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U84 ( .A(ZB), .Z(n41) );
  NOR2_D U85 ( .A(B[4]), .B(n49), .Z(\ab[3][4] ) );
  NOR2_D U86 ( .A(B[2]), .B(n49), .Z(\ab[3][2] ) );
  OR2_I U87 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  NAND2_E U88 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U89 ( .A(B[3]), .B(n49), .Z(\ab[3][3] ) );
  INVERT_I U90 ( .A(B[6]), .Z(n42) );
  NAND2_E U91 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][2] ), .Z(n37) );
  INVERT_H U93 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U94 ( .A(n29), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U95 ( .A(\ab[2][6] ), .Z(n39) );
  AND2_H U96 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U97 ( .A(A[2]), .Z(n50) );
  INVERT_H U98 ( .A(A[1]), .Z(n51) );
  XOR2_C U99 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U100 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U101 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U102 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U103 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U104 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U105 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U106 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U107 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U108 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U109 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U110 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U111 ( .A(\CARRYB[3][7] ), .Z(n40) );
endmodule


module dsp_slice_70 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n15, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_70_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_70_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n9}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n15) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  INVERT_H U4 ( .A(n15), .Z(n2) );
  INVERT_J U5 ( .A(n8), .Z(n9) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n10), .Z(n11) );
  INVERT_H U10 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_69_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_69_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_E U3 ( .A(n4), .Z(n27) );
  AO21_F U4 ( .A1(n32), .A2(n17), .B(n6), .Z(n1) );
  AO21_F U5 ( .A1(n34), .A2(n56), .B(n26), .Z(n2) );
  XOR2_B U6 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U7 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U8 ( .A(n54), .Z(n3) );
  OA21_H U9 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U10 ( .A(n41), .B(n29), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U12 ( .A(n57), .Z(n4) );
  INVERT_H U13 ( .A(n46), .Z(n5) );
  INVERT_H U14 ( .A(n5), .Z(n6) );
  AND2_I U15 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U16 ( .A(n18), .Z(n16) );
  INVERT_E U17 ( .A(n19), .Z(n7) );
  INVERT_H U18 ( .A(n7), .Z(n8) );
  INVERT_E U19 ( .A(n21), .Z(n9) );
  INVERT_H U20 ( .A(n9), .Z(n10) );
  INVERT_E U21 ( .A(n27), .Z(n25) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  INVERT_E U24 ( .A(n47), .Z(n32) );
  INVERT_E U25 ( .A(n58), .Z(n34) );
  INVERT_H U26 ( .A(n13), .Z(n14) );
  INVERT_E U27 ( .A(n15), .Z(n13) );
  NAND2_E U28 ( .A(n33), .B(n14), .Z(n52) );
  AO21_E U29 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U30 ( .A(n55), .B(n11), .Z(SUM[4]) );
  NOR2_C U31 ( .A(n8), .B(n53), .Z(n55) );
  XOR2_B U32 ( .A(B[8]), .B(A[8]), .Z(n41) );
  INVERT_D U33 ( .A(B[2]), .Z(n36) );
  CLKI_O U34 ( .A(n28), .Z(n29) );
  INVERT_H U35 ( .A(n2), .Z(n11) );
  INVERT_H U36 ( .A(n1), .Z(n12) );
  AND2_H U37 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_D U38 ( .A(n51), .Z(n15) );
  INVERT_F U39 ( .A(n16), .Z(n17) );
  OA21_F U40 ( .A1(n49), .A2(n22), .B(n14), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n18) );
  INVERT_D U42 ( .A(n3), .Z(n19) );
  INVERT_F U43 ( .A(n8), .Z(n20) );
  INVERT_D U44 ( .A(n50), .Z(n21) );
  INVERT_F U45 ( .A(n10), .Z(n22) );
  OA21_F U46 ( .A1(n53), .A2(n11), .B(n20), .Z(n50) );
  NOR2_E U47 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_E U48 ( .A(n36), .Z(n23) );
  INVERT_H U49 ( .A(n23), .Z(n24) );
  INVERT_F U50 ( .A(n25), .Z(n26) );
  OA21_F U51 ( .A1(n42), .A2(n12), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n12), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n17), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n6), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n22), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n24), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n24), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_69_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] , \A1[0] , \A2[9] ,
         \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] , \A2[2] , n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n22), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n17), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_69_DW01_add_1 FS_1 ( .A({n36, n30, n28, n25, \A1[5] , \A1[4] , n23, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n11, n33, \A2[6] , n32, n19, 
        n24, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n9), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n7), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n37), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n31), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n3), .B(\CARRYB[2][6] ), .CIN(n5), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n13), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n20), .B(n15), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n20) );
  NOR2_D U5 ( .A(B[6]), .B(n37), .Z(n3) );
  NOR2_D U6 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  NOR2_D U7 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U8 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_H U9 ( .A(\A2[3] ), .Z(n24) );
  NAND2_E U10 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n4) );
  INVERT_H U12 ( .A(n4), .Z(n5) );
  INVERT_D U13 ( .A(\CARRYB[1][2] ), .Z(n6) );
  INVERT_E U14 ( .A(n6), .Z(n7) );
  INVERT_D U15 ( .A(\CARRYB[1][6] ), .Z(n8) );
  INVERT_E U16 ( .A(n8), .Z(n9) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n10) );
  INVERT_H U18 ( .A(n10), .Z(n11) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U20 ( .A(\CARRYB[1][1] ), .Z(n12) );
  INVERT_E U21 ( .A(n12), .Z(n13) );
  AND2_H U22 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U23 ( .A(\CARRYB[1][3] ), .Z(n14) );
  INVERT_E U24 ( .A(n14), .Z(n15) );
  AND2_H U25 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U26 ( .A(A[2]), .Z(n38) );
  INVERT_I U27 ( .A(n29), .Z(n30) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U29 ( .A(\CARRYB[1][4] ), .Z(n16) );
  INVERT_E U30 ( .A(n16), .Z(n17) );
  INVERT_H U31 ( .A(\A2[4] ), .Z(n18) );
  INVERT_H U32 ( .A(n18), .Z(n19) );
  AND2_I U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U34 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U35 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  NOR2_D U36 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  INVERT_N U37 ( .A(ZA), .Z(n37) );
  INVERT_D U38 ( .A(\CARRYB[1][0] ), .Z(n21) );
  INVERT_E U39 ( .A(n21), .Z(n22) );
  AND2_H U40 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_D U41 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U42 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  INVERT_H U43 ( .A(n2), .Z(n23) );
  INVERT_I U44 ( .A(B[0]), .Z(n48) );
  NOR2_E U45 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  NOR2_E U46 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  NOR2_E U47 ( .A(n26), .B(n39), .Z(\ab[1][4] ) );
  INVERT_M U48 ( .A(A[1]), .Z(n39) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U54 ( .A(n40), .B(n47), .Z(\ab[0][1] ) );
  NOR2_E U55 ( .A(n45), .B(n40), .Z(\ab[0][3] ) );
  NOR2_E U56 ( .A(n40), .B(n46), .Z(\ab[0][2] ) );
  INVERT_M U57 ( .A(A[0]), .Z(n40) );
  INVERT_I U58 ( .A(\A2[7] ), .Z(n33) );
  AND2_H U59 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_H U60 ( .A(B[4]), .Z(n26) );
  INVERT_H U61 ( .A(B[4]), .Z(n44) );
  INVERT_I U62 ( .A(B[2]), .Z(n46) );
  INVERT_H U63 ( .A(\A1[7] ), .Z(n27) );
  INVERT_I U64 ( .A(n27), .Z(n28) );
  NOR2_E U65 ( .A(n42), .B(n39), .Z(\ab[1][6] ) );
  INVERT_H U66 ( .A(\A1[8] ), .Z(n29) );
  NOR2_D U67 ( .A(n38), .B(n26), .Z(\ab[2][4] ) );
  AND2_H U68 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U69 ( .A(n43), .B(n40), .Z(\ab[0][5] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][5] ), .Z(n31) );
  INVERT_I U71 ( .A(B[5]), .Z(n43) );
  NOR2_E U72 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U73 ( .A(n42), .B(n40), .Z(\ab[0][6] ) );
  AND2_H U74 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U75 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U76 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n41) );
  NOR2_D U79 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U81 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  NAND2_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U83 ( .A(\A2[5] ), .Z(n32) );
  NOR2_D U84 ( .A(n40), .B(n48), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U86 ( .A(B[6]), .Z(n42) );
  OR2_I U87 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  NAND2_E U88 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  AND2_H U89 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U90 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U91 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U92 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U93 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U94 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U97 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U98 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U99 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U100 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U101 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U102 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U103 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U104 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U105 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U106 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_69 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_69_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n7}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_69_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_I U7 ( .A(n4), .Z(n5) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n6), .Z(n7) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_68_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_68_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n22), .Z(n20) );
  INVERT_D U3 ( .A(B[2]), .Z(n29) );
  INVERT_E U4 ( .A(n3), .Z(n19) );
  AO21_F U5 ( .A1(n24), .A2(n11), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n27), .A2(n49), .B(n18), .Z(n2) );
  XOR2_B U7 ( .A(n30), .B(n31), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n21), .B(B[8]), .Z(n33) );
  XOR2_B U9 ( .A(n34), .B(n21), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n50) );
  INVERT_D U11 ( .A(n50), .Z(n3) );
  INVERT_H U12 ( .A(n39), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n39) );
  INVERT_E U15 ( .A(n12), .Z(n10) );
  INVERT_E U16 ( .A(n13), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n19), .Z(n17) );
  NAND2BAL_E U19 ( .A(n23), .B(n36), .Z(n37) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n36) );
  NAND2BAL_E U21 ( .A(n25), .B(n44), .Z(n45) );
  NAND2_F U22 ( .A(B[5]), .B(A[5]), .Z(n44) );
  INVERT_E U23 ( .A(n40), .Z(n24) );
  INVERT_E U24 ( .A(n51), .Z(n27) );
  INVERT_F U25 ( .A(n47), .Z(n26) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n47) );
  AO21_E U27 ( .A1(n21), .A2(A[8]), .B(n33), .Z(n31) );
  XNOR2_C U28 ( .A(n48), .B(n8), .Z(SUM[4]) );
  NOR2_C U29 ( .A(n26), .B(n46), .Z(n48) );
  XOR2_B U30 ( .A(B[8]), .B(A[8]), .Z(n34) );
  CLKI_O U31 ( .A(n20), .Z(n21) );
  INVERT_H U32 ( .A(n2), .Z(n8) );
  INVERT_H U33 ( .A(n1), .Z(n9) );
  INVERT_F U34 ( .A(n10), .Z(n11) );
  OA21_F U35 ( .A1(n42), .A2(n14), .B(n44), .Z(n38) );
  INVERT_D U36 ( .A(n38), .Z(n12) );
  INVERT_D U37 ( .A(n43), .Z(n13) );
  INVERT_F U38 ( .A(n7), .Z(n14) );
  OA21_F U39 ( .A1(n46), .A2(n8), .B(n47), .Z(n43) );
  NOR2_E U40 ( .A(B[4]), .B(A[4]), .Z(n46) );
  INVERT_E U41 ( .A(n29), .Z(n15) );
  INVERT_H U42 ( .A(n15), .Z(n16) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  OA21_F U44 ( .A1(n35), .A2(n9), .B(n36), .Z(n32) );
  INVERT_D U45 ( .A(n32), .Z(n22) );
  XOR2_B U46 ( .A(n49), .B(n52), .Z(SUM[3]) );
  NOR2_C U47 ( .A(n18), .B(n51), .Z(n52) );
  NOR2_E U48 ( .A(B[3]), .B(A[3]), .Z(n51) );
  XOR2_B U49 ( .A(n37), .B(n9), .Z(SUM[7]) );
  INVERT_E U50 ( .A(n35), .Z(n23) );
  NOR2_E U51 ( .A(B[7]), .B(A[7]), .Z(n35) );
  XOR2_B U52 ( .A(n41), .B(n11), .Z(SUM[6]) );
  NOR2_C U53 ( .A(n5), .B(n40), .Z(n41) );
  NOR2_E U54 ( .A(B[6]), .B(A[6]), .Z(n40) );
  XOR2_B U55 ( .A(n45), .B(n14), .Z(SUM[5]) );
  INVERT_E U56 ( .A(n42), .Z(n25) );
  NOR2_E U57 ( .A(B[5]), .B(A[5]), .Z(n42) );
  NOR2_F U58 ( .A(n16), .B(n28), .Z(n49) );
  INVERT_H U59 ( .A(A[2]), .Z(n28) );
  XOR2_B U60 ( .A(B[9]), .B(A[9]), .Z(n30) );
  AOI21_A U61 ( .A1(n16), .A2(n28), .B(n49), .Z(SUM[2]) );
endmodule


module dsp_slice_68_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n8), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n12), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n16), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_68_DW01_add_1 FS_1 ( .A({n40, n34, n31, n32, \A1[5] , \A1[4] , n21, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n6, n36, \A2[6] , n35, n19, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n39), .B(n4), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n45), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n17), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_C S2_2_2 ( .A(\ab[2][2] ), .B(n37), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n32) );
  INVERT_H U3 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U4 ( .A(B[1]), .B(n41), .Z(\ab[3][1] ) );
  NOR2_D U5 ( .A(B[0]), .B(n41), .Z(\ab[3][0] ) );
  XNOR2_C U6 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_J U7 ( .A(n43), .Z(n23) );
  NOR2_D U8 ( .A(B[5]), .B(n41), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n41), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n41) );
  INVERT_I U11 ( .A(n18), .Z(n19) );
  INVERT_F U12 ( .A(n20), .Z(n18) );
  NOR2_D U13 ( .A(A[2]), .B(n45), .Z(\ab[2][7] ) );
  INVERT_D U14 ( .A(\CARRYB[1][6] ), .Z(n3) );
  INVERT_E U15 ( .A(n3), .Z(n4) );
  NAND2BAL_E U16 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n5) );
  INVERT_H U18 ( .A(n5), .Z(n6) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_I U21 ( .A(n33), .Z(n34) );
  AND2_H U22 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U23 ( .A(\CARRYB[1][0] ), .Z(n7) );
  INVERT_E U24 ( .A(n7), .Z(n8) );
  AND2_H U25 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U26 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U27 ( .A(n9), .Z(n10) );
  AND2_H U28 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U29 ( .A(\CARRYB[1][3] ), .Z(n11) );
  INVERT_E U30 ( .A(n11), .Z(n12) );
  AND2_H U31 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U32 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U33 ( .A(n13), .Z(n14) );
  AND2_H U34 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U35 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U36 ( .A(n15), .Z(n16) );
  AND2_H U37 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U38 ( .A(\ab[3][6] ), .Z(n17) );
  INVERT_I U39 ( .A(n23), .Z(n24) );
  BUFFER_H U40 ( .A(\A2[4] ), .Z(n20) );
  AND2_H U41 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U42 ( .A(n2), .Z(n21) );
  NOR2_E U43 ( .A(n46), .B(n25), .Z(\ab[1][6] ) );
  INVERT_I U44 ( .A(n23), .Z(n25) );
  XOR2_D U45 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_K U46 ( .A(n27), .Z(n29) );
  NOR2_D U47 ( .A(n29), .B(n52), .Z(\ab[2][0] ) );
  NOR2_E U48 ( .A(n25), .B(n52), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n52) );
  NOR2_D U50 ( .A(n28), .B(n51), .Z(\ab[2][1] ) );
  NOR2_E U51 ( .A(n26), .B(n51), .Z(\ab[1][1] ) );
  INVERT_I U52 ( .A(B[1]), .Z(n51) );
  NOR2_E U53 ( .A(n47), .B(n24), .Z(\ab[1][5] ) );
  NOR2_D U54 ( .A(n29), .B(n47), .Z(\ab[2][5] ) );
  INVERT_I U55 ( .A(B[5]), .Z(n47) );
  NOR2_E U56 ( .A(n48), .B(n25), .Z(\ab[1][4] ) );
  NOR2_D U57 ( .A(n29), .B(n48), .Z(\ab[2][4] ) );
  INVERT_I U58 ( .A(B[4]), .Z(n48) );
  NOR2_E U59 ( .A(n49), .B(n24), .Z(\ab[1][3] ) );
  NOR2_D U60 ( .A(n29), .B(n49), .Z(\ab[2][3] ) );
  INVERT_I U61 ( .A(B[3]), .Z(n49) );
  NOR2_C U62 ( .A(n28), .B(n50), .Z(\ab[2][2] ) );
  NOR2_E U63 ( .A(n24), .B(n50), .Z(\ab[1][2] ) );
  INVERT_I U64 ( .A(B[2]), .Z(n50) );
  INVERT_F U65 ( .A(n23), .Z(n26) );
  INVERT_I U66 ( .A(n42), .Z(n27) );
  INVERT_H U67 ( .A(n27), .Z(n28) );
  NOR2_E U68 ( .A(n48), .B(n44), .Z(\ab[0][4] ) );
  NOR2_E U69 ( .A(n47), .B(n44), .Z(\ab[0][5] ) );
  NOR2_E U70 ( .A(n49), .B(n44), .Z(\ab[0][3] ) );
  NOR2_E U71 ( .A(n44), .B(n50), .Z(\ab[0][2] ) );
  NOR2_E U72 ( .A(n44), .B(n51), .Z(\ab[0][1] ) );
  NOR2_E U73 ( .A(n46), .B(n44), .Z(\ab[0][6] ) );
  INVERT_M U74 ( .A(A[0]), .Z(n44) );
  AND2_H U75 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U76 ( .A(\A2[5] ), .Z(n35) );
  INVERT_I U77 ( .A(\A2[7] ), .Z(n36) );
  INVERT_H U78 ( .A(\A1[7] ), .Z(n30) );
  INVERT_I U79 ( .A(n30), .Z(n31) );
  INVERT_H U80 ( .A(\A1[8] ), .Z(n33) );
  NOR2_D U81 ( .A(n45), .B(n41), .Z(\ab[3][7] ) );
  NOR2_E U82 ( .A(A[0]), .B(n45), .Z(\ab[0][7] ) );
  INVERT_K U83 ( .A(ZB), .Z(n45) );
  NOR2_D U84 ( .A(B[4]), .B(n41), .Z(\ab[3][4] ) );
  NOR2_D U85 ( .A(B[2]), .B(n41), .Z(\ab[3][2] ) );
  OR2_I U86 ( .A(A[1]), .B(n45), .Z(\ab[1][7] ) );
  NAND2_E U87 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U88 ( .A(n44), .B(n52), .Z(PRODUCT[0]) );
  NOR2_D U89 ( .A(B[3]), .B(n41), .Z(\ab[3][3] ) );
  INVERT_I U90 ( .A(B[6]), .Z(n46) );
  NAND2_E U91 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][2] ), .Z(n37) );
  INVERT_H U93 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U94 ( .A(n29), .B(n46), .Z(\ab[2][6] ) );
  INVERT_H U95 ( .A(\ab[2][6] ), .Z(n39) );
  AND2_H U96 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U97 ( .A(A[2]), .Z(n42) );
  INVERT_H U98 ( .A(A[1]), .Z(n43) );
  XOR2_C U99 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U100 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U101 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U102 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U103 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U104 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U105 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U106 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U107 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U108 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U109 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U110 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U111 ( .A(\CARRYB[3][7] ), .Z(n40) );
endmodule


module dsp_slice_68 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_68_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_68_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_67_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_67_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_E U3 ( .A(n4), .Z(n27) );
  AO21_F U4 ( .A1(n32), .A2(n17), .B(n6), .Z(n1) );
  AO21_F U5 ( .A1(n34), .A2(n56), .B(n26), .Z(n2) );
  XOR2_B U6 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U7 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U8 ( .A(n54), .Z(n3) );
  OA21_H U9 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U10 ( .A(n41), .B(n29), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U12 ( .A(n57), .Z(n4) );
  INVERT_H U13 ( .A(n46), .Z(n5) );
  INVERT_H U14 ( .A(n5), .Z(n6) );
  AND2_I U15 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U16 ( .A(n18), .Z(n16) );
  INVERT_E U17 ( .A(n19), .Z(n7) );
  INVERT_H U18 ( .A(n7), .Z(n8) );
  INVERT_E U19 ( .A(n21), .Z(n9) );
  INVERT_H U20 ( .A(n9), .Z(n10) );
  INVERT_E U21 ( .A(n27), .Z(n25) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  INVERT_E U24 ( .A(n47), .Z(n32) );
  INVERT_E U25 ( .A(n58), .Z(n34) );
  INVERT_H U26 ( .A(n13), .Z(n14) );
  INVERT_E U27 ( .A(n15), .Z(n13) );
  NAND2_E U28 ( .A(n33), .B(n14), .Z(n52) );
  AO21_E U29 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U30 ( .A(n55), .B(n11), .Z(SUM[4]) );
  NOR2_C U31 ( .A(n8), .B(n53), .Z(n55) );
  XOR2_B U32 ( .A(B[8]), .B(A[8]), .Z(n41) );
  INVERT_D U33 ( .A(B[2]), .Z(n36) );
  CLKI_O U34 ( .A(n28), .Z(n29) );
  INVERT_H U35 ( .A(n2), .Z(n11) );
  INVERT_H U36 ( .A(n1), .Z(n12) );
  AND2_H U37 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_D U38 ( .A(n51), .Z(n15) );
  INVERT_F U39 ( .A(n16), .Z(n17) );
  OA21_F U40 ( .A1(n49), .A2(n22), .B(n14), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n18) );
  INVERT_D U42 ( .A(n3), .Z(n19) );
  INVERT_F U43 ( .A(n8), .Z(n20) );
  INVERT_D U44 ( .A(n50), .Z(n21) );
  INVERT_F U45 ( .A(n10), .Z(n22) );
  OA21_F U46 ( .A1(n53), .A2(n11), .B(n20), .Z(n50) );
  NOR2_E U47 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_E U48 ( .A(n36), .Z(n23) );
  INVERT_H U49 ( .A(n23), .Z(n24) );
  INVERT_F U50 ( .A(n25), .Z(n26) );
  OA21_F U51 ( .A1(n42), .A2(n12), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n12), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n17), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n6), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n22), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n24), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n24), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_67_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] , \A1[0] , \A2[9] ,
         \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] , \A2[2] , n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n22), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n17), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_67_DW01_add_1 FS_1 ( .A({n36, n30, n28, n25, \A1[5] , \A1[4] , n23, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n11, n32, \A2[6] , n33, n19, 
        n24, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n9), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n7), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n37), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n31), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n3), .B(\CARRYB[2][6] ), .CIN(n5), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n13), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n20), .B(n15), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n20) );
  NOR2_D U5 ( .A(B[6]), .B(n37), .Z(n3) );
  NOR2_D U6 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  NOR2_D U7 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U8 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_H U9 ( .A(\A2[3] ), .Z(n24) );
  NAND2_E U10 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n4) );
  INVERT_H U12 ( .A(n4), .Z(n5) );
  INVERT_D U13 ( .A(\CARRYB[1][2] ), .Z(n6) );
  INVERT_E U14 ( .A(n6), .Z(n7) );
  INVERT_D U15 ( .A(\CARRYB[1][6] ), .Z(n8) );
  INVERT_E U16 ( .A(n8), .Z(n9) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n10) );
  INVERT_H U18 ( .A(n10), .Z(n11) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U20 ( .A(\CARRYB[1][1] ), .Z(n12) );
  INVERT_E U21 ( .A(n12), .Z(n13) );
  AND2_H U22 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U23 ( .A(\CARRYB[1][3] ), .Z(n14) );
  INVERT_E U24 ( .A(n14), .Z(n15) );
  AND2_H U25 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U26 ( .A(A[2]), .Z(n38) );
  INVERT_I U27 ( .A(n29), .Z(n30) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U29 ( .A(\CARRYB[1][4] ), .Z(n16) );
  INVERT_E U30 ( .A(n16), .Z(n17) );
  INVERT_H U31 ( .A(\A2[4] ), .Z(n18) );
  INVERT_H U32 ( .A(n18), .Z(n19) );
  AND2_I U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U34 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U35 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  NOR2_D U36 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  INVERT_N U37 ( .A(ZA), .Z(n37) );
  INVERT_D U38 ( .A(\CARRYB[1][0] ), .Z(n21) );
  INVERT_E U39 ( .A(n21), .Z(n22) );
  AND2_H U40 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_D U41 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U42 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  INVERT_H U43 ( .A(n2), .Z(n23) );
  INVERT_I U44 ( .A(B[0]), .Z(n48) );
  NOR2_E U45 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  NOR2_E U46 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  NOR2_E U47 ( .A(n26), .B(n39), .Z(\ab[1][4] ) );
  INVERT_M U48 ( .A(A[1]), .Z(n39) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U54 ( .A(n40), .B(n47), .Z(\ab[0][1] ) );
  NOR2_E U55 ( .A(n45), .B(n40), .Z(\ab[0][3] ) );
  NOR2_E U56 ( .A(n40), .B(n46), .Z(\ab[0][2] ) );
  INVERT_M U57 ( .A(A[0]), .Z(n40) );
  INVERT_I U58 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U59 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_H U60 ( .A(B[4]), .Z(n26) );
  INVERT_H U61 ( .A(B[4]), .Z(n44) );
  INVERT_I U62 ( .A(B[2]), .Z(n46) );
  INVERT_H U63 ( .A(\A1[7] ), .Z(n27) );
  INVERT_I U64 ( .A(n27), .Z(n28) );
  NOR2_E U65 ( .A(n42), .B(n39), .Z(\ab[1][6] ) );
  INVERT_H U66 ( .A(\A1[8] ), .Z(n29) );
  NOR2_D U67 ( .A(n38), .B(n26), .Z(\ab[2][4] ) );
  AND2_H U68 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U69 ( .A(n43), .B(n40), .Z(\ab[0][5] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][5] ), .Z(n31) );
  INVERT_I U71 ( .A(B[5]), .Z(n43) );
  NOR2_E U72 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U73 ( .A(n42), .B(n40), .Z(\ab[0][6] ) );
  AND2_H U74 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U75 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U76 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n41) );
  NOR2_D U79 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U81 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  NAND2_E U82 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U83 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U84 ( .A(\A2[5] ), .Z(n33) );
  NOR2_D U85 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U86 ( .A(B[6]), .Z(n42) );
  OR2_I U87 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  AND2_H U88 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U89 ( .A(n48), .B(n40), .Z(PRODUCT[0]) );
  INVERT_H U90 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U91 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U92 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U93 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U94 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U97 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U98 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U99 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U100 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U101 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U102 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U103 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U104 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U105 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U106 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_67 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_67_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_67_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_I U7 ( .A(n4), .Z(n5) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_66_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_66_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n22), .Z(n20) );
  INVERT_D U3 ( .A(B[2]), .Z(n29) );
  INVERT_E U4 ( .A(n3), .Z(n19) );
  AO21_F U5 ( .A1(n24), .A2(n11), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n27), .A2(n49), .B(n18), .Z(n2) );
  XOR2_B U7 ( .A(n30), .B(n31), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n21), .B(B[8]), .Z(n33) );
  XOR2_B U9 ( .A(n34), .B(n21), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n50) );
  INVERT_D U11 ( .A(n50), .Z(n3) );
  INVERT_H U12 ( .A(n39), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n39) );
  INVERT_E U15 ( .A(n12), .Z(n10) );
  INVERT_E U16 ( .A(n13), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n19), .Z(n17) );
  NAND2BAL_E U19 ( .A(n23), .B(n36), .Z(n37) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n36) );
  NAND2BAL_E U21 ( .A(n25), .B(n44), .Z(n45) );
  NAND2_F U22 ( .A(B[5]), .B(A[5]), .Z(n44) );
  INVERT_E U23 ( .A(n40), .Z(n24) );
  INVERT_E U24 ( .A(n51), .Z(n27) );
  INVERT_F U25 ( .A(n47), .Z(n26) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n47) );
  AO21_E U27 ( .A1(n21), .A2(A[8]), .B(n33), .Z(n31) );
  XNOR2_C U28 ( .A(n48), .B(n8), .Z(SUM[4]) );
  NOR2_C U29 ( .A(n26), .B(n46), .Z(n48) );
  XOR2_B U30 ( .A(B[8]), .B(A[8]), .Z(n34) );
  CLKI_O U31 ( .A(n20), .Z(n21) );
  INVERT_H U32 ( .A(n2), .Z(n8) );
  INVERT_H U33 ( .A(n1), .Z(n9) );
  INVERT_F U34 ( .A(n10), .Z(n11) );
  OA21_F U35 ( .A1(n42), .A2(n14), .B(n44), .Z(n38) );
  INVERT_D U36 ( .A(n38), .Z(n12) );
  INVERT_D U37 ( .A(n43), .Z(n13) );
  INVERT_F U38 ( .A(n7), .Z(n14) );
  OA21_F U39 ( .A1(n46), .A2(n8), .B(n47), .Z(n43) );
  NOR2_E U40 ( .A(B[4]), .B(A[4]), .Z(n46) );
  INVERT_E U41 ( .A(n29), .Z(n15) );
  INVERT_H U42 ( .A(n15), .Z(n16) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  OA21_F U44 ( .A1(n35), .A2(n9), .B(n36), .Z(n32) );
  INVERT_D U45 ( .A(n32), .Z(n22) );
  XOR2_B U46 ( .A(n49), .B(n52), .Z(SUM[3]) );
  NOR2_C U47 ( .A(n18), .B(n51), .Z(n52) );
  NOR2_E U48 ( .A(B[3]), .B(A[3]), .Z(n51) );
  XOR2_B U49 ( .A(n37), .B(n9), .Z(SUM[7]) );
  INVERT_E U50 ( .A(n35), .Z(n23) );
  NOR2_E U51 ( .A(B[7]), .B(A[7]), .Z(n35) );
  XOR2_B U52 ( .A(n41), .B(n11), .Z(SUM[6]) );
  NOR2_C U53 ( .A(n5), .B(n40), .Z(n41) );
  NOR2_E U54 ( .A(B[6]), .B(A[6]), .Z(n40) );
  XOR2_B U55 ( .A(n45), .B(n14), .Z(SUM[5]) );
  INVERT_E U56 ( .A(n42), .Z(n25) );
  NOR2_E U57 ( .A(B[5]), .B(A[5]), .Z(n42) );
  NOR2_F U58 ( .A(n16), .B(n28), .Z(n49) );
  INVERT_H U59 ( .A(A[2]), .Z(n28) );
  XOR2_B U60 ( .A(B[9]), .B(A[9]), .Z(n30) );
  AOI21_A U61 ( .A1(n16), .A2(n28), .B(n49), .Z(SUM[2]) );
endmodule


module dsp_slice_66_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n8), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n12), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n16), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_66_DW01_add_1 FS_1 ( .A({n40, n34, n31, n32, \A1[5] , \A1[4] , n21, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n6, n36, \A2[6] , n35, n19, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n39), .B(n4), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n45), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n17), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_C S2_2_2 ( .A(\ab[2][2] ), .B(n37), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n32) );
  INVERT_H U3 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U4 ( .A(B[1]), .B(n41), .Z(\ab[3][1] ) );
  NOR2_D U5 ( .A(B[0]), .B(n41), .Z(\ab[3][0] ) );
  XNOR2_C U6 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_J U7 ( .A(n43), .Z(n23) );
  NOR2_D U8 ( .A(B[5]), .B(n41), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n41), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n41) );
  INVERT_I U11 ( .A(n18), .Z(n19) );
  INVERT_F U12 ( .A(n20), .Z(n18) );
  NOR2_D U13 ( .A(A[2]), .B(n45), .Z(\ab[2][7] ) );
  INVERT_D U14 ( .A(\CARRYB[1][6] ), .Z(n3) );
  INVERT_E U15 ( .A(n3), .Z(n4) );
  NAND2BAL_E U16 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n5) );
  INVERT_H U18 ( .A(n5), .Z(n6) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_I U21 ( .A(n33), .Z(n34) );
  AND2_H U22 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U23 ( .A(\CARRYB[1][0] ), .Z(n7) );
  INVERT_E U24 ( .A(n7), .Z(n8) );
  AND2_H U25 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U26 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U27 ( .A(n9), .Z(n10) );
  AND2_H U28 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U29 ( .A(\CARRYB[1][3] ), .Z(n11) );
  INVERT_E U30 ( .A(n11), .Z(n12) );
  AND2_H U31 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U32 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U33 ( .A(n13), .Z(n14) );
  AND2_H U34 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U35 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U36 ( .A(n15), .Z(n16) );
  AND2_H U37 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U38 ( .A(\ab[3][6] ), .Z(n17) );
  INVERT_I U39 ( .A(n23), .Z(n24) );
  BUFFER_H U40 ( .A(\A2[4] ), .Z(n20) );
  AND2_H U41 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U42 ( .A(n2), .Z(n21) );
  NOR2_E U43 ( .A(n46), .B(n25), .Z(\ab[1][6] ) );
  INVERT_I U44 ( .A(n23), .Z(n25) );
  XOR2_D U45 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_K U46 ( .A(n27), .Z(n29) );
  NOR2_D U47 ( .A(n29), .B(n52), .Z(\ab[2][0] ) );
  NOR2_E U48 ( .A(n25), .B(n52), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n52) );
  NOR2_D U50 ( .A(n28), .B(n51), .Z(\ab[2][1] ) );
  NOR2_E U51 ( .A(n26), .B(n51), .Z(\ab[1][1] ) );
  INVERT_I U52 ( .A(B[1]), .Z(n51) );
  NOR2_E U53 ( .A(n47), .B(n24), .Z(\ab[1][5] ) );
  NOR2_D U54 ( .A(n29), .B(n47), .Z(\ab[2][5] ) );
  INVERT_I U55 ( .A(B[5]), .Z(n47) );
  NOR2_E U56 ( .A(n48), .B(n25), .Z(\ab[1][4] ) );
  NOR2_D U57 ( .A(n29), .B(n48), .Z(\ab[2][4] ) );
  INVERT_I U58 ( .A(B[4]), .Z(n48) );
  NOR2_E U59 ( .A(n49), .B(n24), .Z(\ab[1][3] ) );
  NOR2_D U60 ( .A(n29), .B(n49), .Z(\ab[2][3] ) );
  INVERT_I U61 ( .A(B[3]), .Z(n49) );
  NOR2_C U62 ( .A(n28), .B(n50), .Z(\ab[2][2] ) );
  NOR2_E U63 ( .A(n24), .B(n50), .Z(\ab[1][2] ) );
  INVERT_I U64 ( .A(B[2]), .Z(n50) );
  INVERT_F U65 ( .A(n23), .Z(n26) );
  INVERT_I U66 ( .A(n42), .Z(n27) );
  INVERT_H U67 ( .A(n27), .Z(n28) );
  NOR2_E U68 ( .A(n48), .B(n44), .Z(\ab[0][4] ) );
  NOR2_E U69 ( .A(n47), .B(n44), .Z(\ab[0][5] ) );
  NOR2_E U70 ( .A(n49), .B(n44), .Z(\ab[0][3] ) );
  NOR2_E U71 ( .A(n44), .B(n50), .Z(\ab[0][2] ) );
  NOR2_E U72 ( .A(n44), .B(n51), .Z(\ab[0][1] ) );
  NOR2_E U73 ( .A(n46), .B(n44), .Z(\ab[0][6] ) );
  INVERT_M U74 ( .A(A[0]), .Z(n44) );
  AND2_H U75 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U76 ( .A(\A2[5] ), .Z(n35) );
  INVERT_I U77 ( .A(\A2[7] ), .Z(n36) );
  INVERT_H U78 ( .A(\A1[7] ), .Z(n30) );
  INVERT_I U79 ( .A(n30), .Z(n31) );
  INVERT_H U80 ( .A(\A1[8] ), .Z(n33) );
  NOR2_D U81 ( .A(n45), .B(n41), .Z(\ab[3][7] ) );
  NOR2_E U82 ( .A(A[0]), .B(n45), .Z(\ab[0][7] ) );
  INVERT_K U83 ( .A(ZB), .Z(n45) );
  NOR2_D U84 ( .A(B[4]), .B(n41), .Z(\ab[3][4] ) );
  NOR2_D U85 ( .A(B[2]), .B(n41), .Z(\ab[3][2] ) );
  OR2_I U86 ( .A(A[1]), .B(n45), .Z(\ab[1][7] ) );
  NAND2_E U87 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U88 ( .A(n44), .B(n52), .Z(PRODUCT[0]) );
  NOR2_D U89 ( .A(B[3]), .B(n41), .Z(\ab[3][3] ) );
  INVERT_I U90 ( .A(B[6]), .Z(n46) );
  NAND2_E U91 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][2] ), .Z(n37) );
  INVERT_H U93 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U94 ( .A(n29), .B(n46), .Z(\ab[2][6] ) );
  INVERT_H U95 ( .A(\ab[2][6] ), .Z(n39) );
  AND2_H U96 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U97 ( .A(A[2]), .Z(n42) );
  INVERT_H U98 ( .A(A[1]), .Z(n43) );
  XOR2_C U99 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U100 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U101 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U102 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U103 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U104 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U105 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U106 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U107 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U108 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U109 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U110 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U111 ( .A(\CARRYB[3][7] ), .Z(n40) );
endmodule


module dsp_slice_66 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_66_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_66_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_65_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_65_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_E U3 ( .A(n4), .Z(n27) );
  AO21_F U4 ( .A1(n32), .A2(n17), .B(n6), .Z(n1) );
  AO21_F U5 ( .A1(n34), .A2(n56), .B(n26), .Z(n2) );
  XOR2_B U6 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U7 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U8 ( .A(n54), .Z(n3) );
  OA21_H U9 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U10 ( .A(n41), .B(n29), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U12 ( .A(n57), .Z(n4) );
  INVERT_H U13 ( .A(n46), .Z(n5) );
  INVERT_H U14 ( .A(n5), .Z(n6) );
  AND2_I U15 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U16 ( .A(n18), .Z(n16) );
  INVERT_E U17 ( .A(n19), .Z(n7) );
  INVERT_H U18 ( .A(n7), .Z(n8) );
  INVERT_E U19 ( .A(n21), .Z(n9) );
  INVERT_H U20 ( .A(n9), .Z(n10) );
  INVERT_E U21 ( .A(n27), .Z(n25) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  INVERT_E U24 ( .A(n47), .Z(n32) );
  INVERT_E U25 ( .A(n58), .Z(n34) );
  INVERT_H U26 ( .A(n13), .Z(n14) );
  INVERT_E U27 ( .A(n15), .Z(n13) );
  NAND2_E U28 ( .A(n33), .B(n14), .Z(n52) );
  AO21_E U29 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U30 ( .A(n55), .B(n11), .Z(SUM[4]) );
  NOR2_C U31 ( .A(n8), .B(n53), .Z(n55) );
  XOR2_B U32 ( .A(B[8]), .B(A[8]), .Z(n41) );
  INVERT_D U33 ( .A(B[2]), .Z(n36) );
  CLKI_O U34 ( .A(n28), .Z(n29) );
  INVERT_H U35 ( .A(n2), .Z(n11) );
  INVERT_H U36 ( .A(n1), .Z(n12) );
  AND2_H U37 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_D U38 ( .A(n51), .Z(n15) );
  INVERT_F U39 ( .A(n16), .Z(n17) );
  OA21_F U40 ( .A1(n49), .A2(n22), .B(n14), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n18) );
  INVERT_D U42 ( .A(n3), .Z(n19) );
  INVERT_F U43 ( .A(n8), .Z(n20) );
  INVERT_D U44 ( .A(n50), .Z(n21) );
  INVERT_F U45 ( .A(n10), .Z(n22) );
  OA21_F U46 ( .A1(n53), .A2(n11), .B(n20), .Z(n50) );
  NOR2_E U47 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_E U48 ( .A(n36), .Z(n23) );
  INVERT_H U49 ( .A(n23), .Z(n24) );
  INVERT_F U50 ( .A(n25), .Z(n26) );
  OA21_F U51 ( .A1(n42), .A2(n12), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n12), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n17), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n6), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n22), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n24), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n24), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_65_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] , \A1[0] , \A2[9] ,
         \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] , \A2[2] , n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n22), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n17), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_65_DW01_add_1 FS_1 ( .A({n36, n30, n28, n25, \A1[5] , \A1[4] , n23, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n11, n32, \A2[6] , n33, n19, 
        n24, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n9), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n7), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n37), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n31), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n3), .B(\CARRYB[2][6] ), .CIN(n5), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n13), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n20), .B(n15), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n20) );
  NOR2_D U5 ( .A(B[6]), .B(n37), .Z(n3) );
  NOR2_D U6 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  NOR2_D U7 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U8 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_H U9 ( .A(\A2[3] ), .Z(n24) );
  NAND2_E U10 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n4) );
  INVERT_H U12 ( .A(n4), .Z(n5) );
  INVERT_D U13 ( .A(\CARRYB[1][2] ), .Z(n6) );
  INVERT_E U14 ( .A(n6), .Z(n7) );
  INVERT_D U15 ( .A(\CARRYB[1][6] ), .Z(n8) );
  INVERT_E U16 ( .A(n8), .Z(n9) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n10) );
  INVERT_H U18 ( .A(n10), .Z(n11) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U20 ( .A(\CARRYB[1][1] ), .Z(n12) );
  INVERT_E U21 ( .A(n12), .Z(n13) );
  AND2_H U22 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U23 ( .A(\CARRYB[1][3] ), .Z(n14) );
  INVERT_E U24 ( .A(n14), .Z(n15) );
  AND2_H U25 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U26 ( .A(A[2]), .Z(n38) );
  INVERT_I U27 ( .A(n29), .Z(n30) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U29 ( .A(\CARRYB[1][4] ), .Z(n16) );
  INVERT_E U30 ( .A(n16), .Z(n17) );
  INVERT_H U31 ( .A(\A2[4] ), .Z(n18) );
  INVERT_H U32 ( .A(n18), .Z(n19) );
  AND2_I U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U34 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U35 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  NOR2_D U36 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  INVERT_N U37 ( .A(ZA), .Z(n37) );
  INVERT_D U38 ( .A(\CARRYB[1][0] ), .Z(n21) );
  INVERT_E U39 ( .A(n21), .Z(n22) );
  AND2_H U40 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_D U41 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U42 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  INVERT_H U43 ( .A(n2), .Z(n23) );
  INVERT_I U44 ( .A(B[0]), .Z(n48) );
  NOR2_E U45 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  NOR2_E U46 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  NOR2_E U47 ( .A(n26), .B(n39), .Z(\ab[1][4] ) );
  INVERT_M U48 ( .A(A[1]), .Z(n39) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U54 ( .A(n40), .B(n47), .Z(\ab[0][1] ) );
  NOR2_E U55 ( .A(n45), .B(n40), .Z(\ab[0][3] ) );
  NOR2_E U56 ( .A(n40), .B(n46), .Z(\ab[0][2] ) );
  INVERT_M U57 ( .A(A[0]), .Z(n40) );
  INVERT_I U58 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U59 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_H U60 ( .A(B[4]), .Z(n26) );
  INVERT_H U61 ( .A(B[4]), .Z(n44) );
  INVERT_I U62 ( .A(B[2]), .Z(n46) );
  INVERT_H U63 ( .A(\A1[7] ), .Z(n27) );
  INVERT_I U64 ( .A(n27), .Z(n28) );
  NOR2_E U65 ( .A(n42), .B(n39), .Z(\ab[1][6] ) );
  INVERT_H U66 ( .A(\A1[8] ), .Z(n29) );
  NOR2_D U67 ( .A(n38), .B(n26), .Z(\ab[2][4] ) );
  AND2_H U68 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U69 ( .A(n43), .B(n40), .Z(\ab[0][5] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][5] ), .Z(n31) );
  INVERT_I U71 ( .A(B[5]), .Z(n43) );
  NOR2_E U72 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U73 ( .A(n42), .B(n40), .Z(\ab[0][6] ) );
  AND2_H U74 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U75 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U76 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n41) );
  NOR2_D U79 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U81 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  NAND2_E U82 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U83 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U84 ( .A(\A2[5] ), .Z(n33) );
  NOR2_D U85 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U86 ( .A(B[6]), .Z(n42) );
  OR2_I U87 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  AND2_H U88 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U89 ( .A(n48), .B(n40), .Z(PRODUCT[0]) );
  INVERT_H U90 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U91 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U92 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U93 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U94 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U97 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U98 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U99 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U100 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U101 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U102 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U103 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U104 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U105 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U106 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_65 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_65_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_65_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_I U7 ( .A(n4), .Z(n5) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_64_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_64_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n22), .Z(n20) );
  INVERT_D U3 ( .A(B[2]), .Z(n29) );
  INVERT_E U4 ( .A(n3), .Z(n19) );
  AO21_F U5 ( .A1(n24), .A2(n11), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n27), .A2(n49), .B(n18), .Z(n2) );
  XOR2_B U7 ( .A(n30), .B(n31), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n21), .B(B[8]), .Z(n33) );
  XOR2_B U9 ( .A(n34), .B(n21), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n50) );
  INVERT_D U11 ( .A(n50), .Z(n3) );
  INVERT_H U12 ( .A(n39), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n39) );
  INVERT_E U15 ( .A(n12), .Z(n10) );
  INVERT_E U16 ( .A(n13), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n19), .Z(n17) );
  NAND2BAL_E U19 ( .A(n23), .B(n36), .Z(n37) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n36) );
  NAND2BAL_E U21 ( .A(n25), .B(n44), .Z(n45) );
  NAND2_F U22 ( .A(B[5]), .B(A[5]), .Z(n44) );
  INVERT_E U23 ( .A(n40), .Z(n24) );
  INVERT_E U24 ( .A(n51), .Z(n27) );
  INVERT_F U25 ( .A(n47), .Z(n26) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n47) );
  AO21_E U27 ( .A1(n21), .A2(A[8]), .B(n33), .Z(n31) );
  XNOR2_C U28 ( .A(n48), .B(n8), .Z(SUM[4]) );
  NOR2_C U29 ( .A(n26), .B(n46), .Z(n48) );
  XOR2_B U30 ( .A(B[8]), .B(A[8]), .Z(n34) );
  CLKI_O U31 ( .A(n20), .Z(n21) );
  INVERT_H U32 ( .A(n2), .Z(n8) );
  INVERT_H U33 ( .A(n1), .Z(n9) );
  INVERT_F U34 ( .A(n10), .Z(n11) );
  OA21_F U35 ( .A1(n42), .A2(n14), .B(n44), .Z(n38) );
  INVERT_D U36 ( .A(n38), .Z(n12) );
  INVERT_D U37 ( .A(n43), .Z(n13) );
  INVERT_F U38 ( .A(n7), .Z(n14) );
  OA21_F U39 ( .A1(n46), .A2(n8), .B(n47), .Z(n43) );
  NOR2_E U40 ( .A(B[4]), .B(A[4]), .Z(n46) );
  INVERT_E U41 ( .A(n29), .Z(n15) );
  INVERT_H U42 ( .A(n15), .Z(n16) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  OA21_F U44 ( .A1(n35), .A2(n9), .B(n36), .Z(n32) );
  INVERT_D U45 ( .A(n32), .Z(n22) );
  XOR2_B U46 ( .A(n49), .B(n52), .Z(SUM[3]) );
  NOR2_C U47 ( .A(n18), .B(n51), .Z(n52) );
  NOR2_E U48 ( .A(B[3]), .B(A[3]), .Z(n51) );
  XOR2_B U49 ( .A(n37), .B(n9), .Z(SUM[7]) );
  INVERT_E U50 ( .A(n35), .Z(n23) );
  NOR2_E U51 ( .A(B[7]), .B(A[7]), .Z(n35) );
  XOR2_B U52 ( .A(n41), .B(n11), .Z(SUM[6]) );
  NOR2_C U53 ( .A(n5), .B(n40), .Z(n41) );
  NOR2_E U54 ( .A(B[6]), .B(A[6]), .Z(n40) );
  XOR2_B U55 ( .A(n45), .B(n14), .Z(SUM[5]) );
  INVERT_E U56 ( .A(n42), .Z(n25) );
  NOR2_E U57 ( .A(B[5]), .B(A[5]), .Z(n42) );
  NOR2_F U58 ( .A(n16), .B(n28), .Z(n49) );
  INVERT_H U59 ( .A(A[2]), .Z(n28) );
  XOR2_B U60 ( .A(B[9]), .B(A[9]), .Z(n30) );
  AOI21_A U61 ( .A1(n16), .A2(n28), .B(n49), .Z(SUM[2]) );
endmodule


module dsp_slice_64_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n8), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n12), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n16), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_64_DW01_add_1 FS_1 ( .A({n40, n34, n31, n32, \A1[5] , \A1[4] , n21, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n6, n36, \A2[6] , n35, n19, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n39), .B(n4), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n45), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n17), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_C S2_2_2 ( .A(\ab[2][2] ), .B(n37), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n32) );
  INVERT_H U3 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U4 ( .A(B[1]), .B(n41), .Z(\ab[3][1] ) );
  NOR2_D U5 ( .A(B[0]), .B(n41), .Z(\ab[3][0] ) );
  XNOR2_C U6 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_J U7 ( .A(n43), .Z(n23) );
  NOR2_D U8 ( .A(B[5]), .B(n41), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n41), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n41) );
  INVERT_I U11 ( .A(n18), .Z(n19) );
  INVERT_F U12 ( .A(n20), .Z(n18) );
  NOR2_D U13 ( .A(A[2]), .B(n45), .Z(\ab[2][7] ) );
  INVERT_D U14 ( .A(\CARRYB[1][6] ), .Z(n3) );
  INVERT_E U15 ( .A(n3), .Z(n4) );
  NAND2BAL_E U16 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n5) );
  INVERT_H U18 ( .A(n5), .Z(n6) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_I U21 ( .A(n33), .Z(n34) );
  AND2_H U22 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U23 ( .A(\CARRYB[1][0] ), .Z(n7) );
  INVERT_E U24 ( .A(n7), .Z(n8) );
  AND2_H U25 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U26 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U27 ( .A(n9), .Z(n10) );
  AND2_H U28 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U29 ( .A(\CARRYB[1][3] ), .Z(n11) );
  INVERT_E U30 ( .A(n11), .Z(n12) );
  AND2_H U31 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U32 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U33 ( .A(n13), .Z(n14) );
  AND2_H U34 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U35 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U36 ( .A(n15), .Z(n16) );
  AND2_H U37 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U38 ( .A(\ab[3][6] ), .Z(n17) );
  INVERT_I U39 ( .A(n23), .Z(n24) );
  BUFFER_H U40 ( .A(\A2[4] ), .Z(n20) );
  AND2_H U41 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U42 ( .A(n2), .Z(n21) );
  NOR2_E U43 ( .A(n46), .B(n25), .Z(\ab[1][6] ) );
  INVERT_I U44 ( .A(n23), .Z(n25) );
  XOR2_D U45 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_K U46 ( .A(n27), .Z(n29) );
  NOR2_D U47 ( .A(n29), .B(n52), .Z(\ab[2][0] ) );
  NOR2_E U48 ( .A(n25), .B(n52), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n52) );
  NOR2_D U50 ( .A(n28), .B(n51), .Z(\ab[2][1] ) );
  NOR2_E U51 ( .A(n26), .B(n51), .Z(\ab[1][1] ) );
  INVERT_I U52 ( .A(B[1]), .Z(n51) );
  NOR2_E U53 ( .A(n47), .B(n24), .Z(\ab[1][5] ) );
  NOR2_D U54 ( .A(n29), .B(n47), .Z(\ab[2][5] ) );
  INVERT_I U55 ( .A(B[5]), .Z(n47) );
  NOR2_E U56 ( .A(n48), .B(n25), .Z(\ab[1][4] ) );
  NOR2_D U57 ( .A(n29), .B(n48), .Z(\ab[2][4] ) );
  INVERT_I U58 ( .A(B[4]), .Z(n48) );
  NOR2_E U59 ( .A(n49), .B(n24), .Z(\ab[1][3] ) );
  NOR2_D U60 ( .A(n29), .B(n49), .Z(\ab[2][3] ) );
  INVERT_I U61 ( .A(B[3]), .Z(n49) );
  NOR2_C U62 ( .A(n28), .B(n50), .Z(\ab[2][2] ) );
  NOR2_E U63 ( .A(n24), .B(n50), .Z(\ab[1][2] ) );
  INVERT_I U64 ( .A(B[2]), .Z(n50) );
  INVERT_F U65 ( .A(n23), .Z(n26) );
  INVERT_I U66 ( .A(n42), .Z(n27) );
  INVERT_H U67 ( .A(n27), .Z(n28) );
  NOR2_E U68 ( .A(n48), .B(n44), .Z(\ab[0][4] ) );
  NOR2_E U69 ( .A(n47), .B(n44), .Z(\ab[0][5] ) );
  NOR2_E U70 ( .A(n49), .B(n44), .Z(\ab[0][3] ) );
  NOR2_E U71 ( .A(n44), .B(n50), .Z(\ab[0][2] ) );
  NOR2_E U72 ( .A(n44), .B(n51), .Z(\ab[0][1] ) );
  NOR2_E U73 ( .A(n46), .B(n44), .Z(\ab[0][6] ) );
  INVERT_M U74 ( .A(A[0]), .Z(n44) );
  AND2_H U75 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U76 ( .A(\A2[5] ), .Z(n35) );
  INVERT_I U77 ( .A(\A2[7] ), .Z(n36) );
  INVERT_H U78 ( .A(\A1[7] ), .Z(n30) );
  INVERT_I U79 ( .A(n30), .Z(n31) );
  INVERT_H U80 ( .A(\A1[8] ), .Z(n33) );
  NOR2_D U81 ( .A(n45), .B(n41), .Z(\ab[3][7] ) );
  NOR2_E U82 ( .A(A[0]), .B(n45), .Z(\ab[0][7] ) );
  INVERT_K U83 ( .A(ZB), .Z(n45) );
  NOR2_D U84 ( .A(B[4]), .B(n41), .Z(\ab[3][4] ) );
  NOR2_D U85 ( .A(B[2]), .B(n41), .Z(\ab[3][2] ) );
  OR2_I U86 ( .A(A[1]), .B(n45), .Z(\ab[1][7] ) );
  NAND2_E U87 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U88 ( .A(n44), .B(n52), .Z(PRODUCT[0]) );
  NOR2_D U89 ( .A(B[3]), .B(n41), .Z(\ab[3][3] ) );
  INVERT_I U90 ( .A(B[6]), .Z(n46) );
  NAND2_E U91 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][2] ), .Z(n37) );
  INVERT_H U93 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U94 ( .A(n29), .B(n46), .Z(\ab[2][6] ) );
  INVERT_H U95 ( .A(\ab[2][6] ), .Z(n39) );
  AND2_H U96 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U97 ( .A(A[2]), .Z(n42) );
  INVERT_H U98 ( .A(A[1]), .Z(n43) );
  XOR2_C U99 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U100 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U101 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U102 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U103 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U104 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U105 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U106 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U107 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U108 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U109 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U110 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U111 ( .A(\CARRYB[3][7] ), .Z(n40) );
endmodule


module dsp_slice_64 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_64_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_64_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_63_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_63_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_E U3 ( .A(n4), .Z(n27) );
  AO21_F U4 ( .A1(n32), .A2(n17), .B(n6), .Z(n1) );
  AO21_F U5 ( .A1(n34), .A2(n56), .B(n26), .Z(n2) );
  XOR2_B U6 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U7 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U8 ( .A(n54), .Z(n3) );
  OA21_H U9 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U10 ( .A(n41), .B(n29), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U12 ( .A(n57), .Z(n4) );
  INVERT_H U13 ( .A(n46), .Z(n5) );
  INVERT_H U14 ( .A(n5), .Z(n6) );
  AND2_I U15 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U16 ( .A(n18), .Z(n16) );
  INVERT_E U17 ( .A(n19), .Z(n7) );
  INVERT_H U18 ( .A(n7), .Z(n8) );
  INVERT_E U19 ( .A(n21), .Z(n9) );
  INVERT_H U20 ( .A(n9), .Z(n10) );
  INVERT_E U21 ( .A(n27), .Z(n25) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  INVERT_E U24 ( .A(n47), .Z(n32) );
  INVERT_E U25 ( .A(n58), .Z(n34) );
  INVERT_H U26 ( .A(n13), .Z(n14) );
  INVERT_E U27 ( .A(n15), .Z(n13) );
  NAND2_E U28 ( .A(n33), .B(n14), .Z(n52) );
  AO21_E U29 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U30 ( .A(n55), .B(n11), .Z(SUM[4]) );
  NOR2_C U31 ( .A(n8), .B(n53), .Z(n55) );
  XOR2_B U32 ( .A(B[8]), .B(A[8]), .Z(n41) );
  INVERT_D U33 ( .A(B[2]), .Z(n36) );
  CLKI_O U34 ( .A(n28), .Z(n29) );
  INVERT_H U35 ( .A(n2), .Z(n11) );
  INVERT_H U36 ( .A(n1), .Z(n12) );
  AND2_H U37 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_D U38 ( .A(n51), .Z(n15) );
  INVERT_F U39 ( .A(n16), .Z(n17) );
  OA21_F U40 ( .A1(n49), .A2(n22), .B(n14), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n18) );
  INVERT_D U42 ( .A(n3), .Z(n19) );
  INVERT_F U43 ( .A(n8), .Z(n20) );
  INVERT_D U44 ( .A(n50), .Z(n21) );
  INVERT_F U45 ( .A(n10), .Z(n22) );
  OA21_F U46 ( .A1(n53), .A2(n11), .B(n20), .Z(n50) );
  NOR2_E U47 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_E U48 ( .A(n36), .Z(n23) );
  INVERT_H U49 ( .A(n23), .Z(n24) );
  INVERT_F U50 ( .A(n25), .Z(n26) );
  OA21_F U51 ( .A1(n42), .A2(n12), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n12), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n17), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n6), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n22), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n24), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n24), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_63_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] , \A1[0] , \A2[9] ,
         \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] , \A2[2] , n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n22), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n17), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_63_DW01_add_1 FS_1 ( .A({n36, n30, n28, n25, \A1[5] , \A1[4] , n23, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n11, n32, \A2[6] , n33, n19, 
        n24, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n9), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n7), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n37), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n31), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n3), .B(\CARRYB[2][6] ), .CIN(n5), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n13), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n20), .B(n15), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n20) );
  NOR2_D U5 ( .A(B[6]), .B(n37), .Z(n3) );
  NOR2_D U6 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  NOR2_D U7 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U8 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_H U9 ( .A(\A2[3] ), .Z(n24) );
  NAND2_E U10 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n4) );
  INVERT_H U12 ( .A(n4), .Z(n5) );
  INVERT_D U13 ( .A(\CARRYB[1][2] ), .Z(n6) );
  INVERT_E U14 ( .A(n6), .Z(n7) );
  INVERT_D U15 ( .A(\CARRYB[1][6] ), .Z(n8) );
  INVERT_E U16 ( .A(n8), .Z(n9) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n10) );
  INVERT_H U18 ( .A(n10), .Z(n11) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U20 ( .A(\CARRYB[1][1] ), .Z(n12) );
  INVERT_E U21 ( .A(n12), .Z(n13) );
  AND2_H U22 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U23 ( .A(\CARRYB[1][3] ), .Z(n14) );
  INVERT_E U24 ( .A(n14), .Z(n15) );
  AND2_H U25 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U26 ( .A(A[2]), .Z(n38) );
  INVERT_I U27 ( .A(n29), .Z(n30) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U29 ( .A(\CARRYB[1][4] ), .Z(n16) );
  INVERT_E U30 ( .A(n16), .Z(n17) );
  INVERT_H U31 ( .A(\A2[4] ), .Z(n18) );
  INVERT_H U32 ( .A(n18), .Z(n19) );
  AND2_I U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U34 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U35 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  NOR2_D U36 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  INVERT_N U37 ( .A(ZA), .Z(n37) );
  INVERT_D U38 ( .A(\CARRYB[1][0] ), .Z(n21) );
  INVERT_E U39 ( .A(n21), .Z(n22) );
  AND2_H U40 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_D U41 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U42 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  INVERT_H U43 ( .A(n2), .Z(n23) );
  INVERT_I U44 ( .A(B[0]), .Z(n48) );
  NOR2_E U45 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  NOR2_E U46 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  NOR2_E U47 ( .A(n26), .B(n39), .Z(\ab[1][4] ) );
  INVERT_M U48 ( .A(A[1]), .Z(n39) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U54 ( .A(n40), .B(n47), .Z(\ab[0][1] ) );
  NOR2_E U55 ( .A(n45), .B(n40), .Z(\ab[0][3] ) );
  NOR2_E U56 ( .A(n40), .B(n46), .Z(\ab[0][2] ) );
  INVERT_M U57 ( .A(A[0]), .Z(n40) );
  INVERT_I U58 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U59 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_H U60 ( .A(B[4]), .Z(n26) );
  INVERT_H U61 ( .A(B[4]), .Z(n44) );
  INVERT_I U62 ( .A(B[2]), .Z(n46) );
  INVERT_H U63 ( .A(\A1[7] ), .Z(n27) );
  INVERT_I U64 ( .A(n27), .Z(n28) );
  NOR2_E U65 ( .A(n42), .B(n39), .Z(\ab[1][6] ) );
  INVERT_H U66 ( .A(\A1[8] ), .Z(n29) );
  NOR2_D U67 ( .A(n38), .B(n26), .Z(\ab[2][4] ) );
  AND2_H U68 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U69 ( .A(n43), .B(n40), .Z(\ab[0][5] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][5] ), .Z(n31) );
  INVERT_I U71 ( .A(B[5]), .Z(n43) );
  NOR2_E U72 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U73 ( .A(n42), .B(n40), .Z(\ab[0][6] ) );
  AND2_H U74 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U75 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U76 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n41) );
  NOR2_D U79 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U81 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  NAND2_E U82 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U83 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U84 ( .A(\A2[5] ), .Z(n33) );
  NOR2_D U85 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U86 ( .A(B[6]), .Z(n42) );
  OR2_I U87 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  AND2_H U88 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U89 ( .A(n48), .B(n40), .Z(PRODUCT[0]) );
  INVERT_H U90 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U91 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U92 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U93 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U94 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U97 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U98 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U99 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U100 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U101 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U102 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U103 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U104 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U105 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U106 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_63 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_63_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_63_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_I U7 ( .A(n4), .Z(n5) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_62_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_62_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n22), .Z(n20) );
  INVERT_D U3 ( .A(B[2]), .Z(n29) );
  INVERT_E U4 ( .A(n3), .Z(n19) );
  AO21_F U5 ( .A1(n24), .A2(n11), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n27), .A2(n49), .B(n18), .Z(n2) );
  XOR2_B U7 ( .A(n30), .B(n31), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n21), .B(B[8]), .Z(n33) );
  XOR2_B U9 ( .A(n34), .B(n21), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n50) );
  INVERT_D U11 ( .A(n50), .Z(n3) );
  INVERT_H U12 ( .A(n39), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n39) );
  INVERT_E U15 ( .A(n12), .Z(n10) );
  INVERT_E U16 ( .A(n13), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n19), .Z(n17) );
  NAND2BAL_E U19 ( .A(n23), .B(n36), .Z(n37) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n36) );
  NAND2BAL_E U21 ( .A(n25), .B(n44), .Z(n45) );
  NAND2_F U22 ( .A(B[5]), .B(A[5]), .Z(n44) );
  INVERT_E U23 ( .A(n40), .Z(n24) );
  INVERT_E U24 ( .A(n51), .Z(n27) );
  INVERT_F U25 ( .A(n47), .Z(n26) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n47) );
  AO21_E U27 ( .A1(n21), .A2(A[8]), .B(n33), .Z(n31) );
  XNOR2_C U28 ( .A(n48), .B(n8), .Z(SUM[4]) );
  NOR2_C U29 ( .A(n26), .B(n46), .Z(n48) );
  XOR2_B U30 ( .A(B[8]), .B(A[8]), .Z(n34) );
  CLKI_O U31 ( .A(n20), .Z(n21) );
  INVERT_H U32 ( .A(n2), .Z(n8) );
  INVERT_H U33 ( .A(n1), .Z(n9) );
  INVERT_F U34 ( .A(n10), .Z(n11) );
  OA21_F U35 ( .A1(n42), .A2(n14), .B(n44), .Z(n38) );
  INVERT_D U36 ( .A(n38), .Z(n12) );
  INVERT_D U37 ( .A(n43), .Z(n13) );
  INVERT_F U38 ( .A(n7), .Z(n14) );
  OA21_F U39 ( .A1(n46), .A2(n8), .B(n47), .Z(n43) );
  NOR2_E U40 ( .A(B[4]), .B(A[4]), .Z(n46) );
  INVERT_E U41 ( .A(n29), .Z(n15) );
  INVERT_H U42 ( .A(n15), .Z(n16) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  OA21_F U44 ( .A1(n35), .A2(n9), .B(n36), .Z(n32) );
  INVERT_D U45 ( .A(n32), .Z(n22) );
  XOR2_B U46 ( .A(n49), .B(n52), .Z(SUM[3]) );
  NOR2_C U47 ( .A(n18), .B(n51), .Z(n52) );
  NOR2_E U48 ( .A(B[3]), .B(A[3]), .Z(n51) );
  XOR2_B U49 ( .A(n37), .B(n9), .Z(SUM[7]) );
  INVERT_E U50 ( .A(n35), .Z(n23) );
  NOR2_E U51 ( .A(B[7]), .B(A[7]), .Z(n35) );
  XOR2_B U52 ( .A(n41), .B(n11), .Z(SUM[6]) );
  NOR2_C U53 ( .A(n5), .B(n40), .Z(n41) );
  NOR2_E U54 ( .A(B[6]), .B(A[6]), .Z(n40) );
  XOR2_B U55 ( .A(n45), .B(n14), .Z(SUM[5]) );
  INVERT_E U56 ( .A(n42), .Z(n25) );
  NOR2_E U57 ( .A(B[5]), .B(A[5]), .Z(n42) );
  NOR2_F U58 ( .A(n16), .B(n28), .Z(n49) );
  INVERT_H U59 ( .A(A[2]), .Z(n28) );
  XOR2_B U60 ( .A(B[9]), .B(A[9]), .Z(n30) );
  AOI21_A U61 ( .A1(n16), .A2(n28), .B(n49), .Z(SUM[2]) );
endmodule


module dsp_slice_62_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n8), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n12), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n16), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_62_DW01_add_1 FS_1 ( .A({n40, n34, n31, n32, \A1[5] , \A1[4] , n21, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n6, n36, \A2[6] , n35, n19, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n39), .B(n4), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n45), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n17), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_C S2_2_2 ( .A(\ab[2][2] ), .B(n37), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n32) );
  INVERT_H U3 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U4 ( .A(B[1]), .B(n41), .Z(\ab[3][1] ) );
  NOR2_D U5 ( .A(B[0]), .B(n41), .Z(\ab[3][0] ) );
  XNOR2_C U6 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_J U7 ( .A(n43), .Z(n23) );
  NOR2_D U8 ( .A(B[5]), .B(n41), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n41), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n41) );
  INVERT_I U11 ( .A(n18), .Z(n19) );
  INVERT_F U12 ( .A(n20), .Z(n18) );
  NOR2_D U13 ( .A(A[2]), .B(n45), .Z(\ab[2][7] ) );
  INVERT_D U14 ( .A(\CARRYB[1][6] ), .Z(n3) );
  INVERT_E U15 ( .A(n3), .Z(n4) );
  NAND2BAL_E U16 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n5) );
  INVERT_H U18 ( .A(n5), .Z(n6) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_I U21 ( .A(n33), .Z(n34) );
  AND2_H U22 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U23 ( .A(\CARRYB[1][0] ), .Z(n7) );
  INVERT_E U24 ( .A(n7), .Z(n8) );
  AND2_H U25 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U26 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U27 ( .A(n9), .Z(n10) );
  AND2_H U28 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U29 ( .A(\CARRYB[1][3] ), .Z(n11) );
  INVERT_E U30 ( .A(n11), .Z(n12) );
  AND2_H U31 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U32 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U33 ( .A(n13), .Z(n14) );
  AND2_H U34 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U35 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U36 ( .A(n15), .Z(n16) );
  AND2_H U37 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U38 ( .A(\ab[3][6] ), .Z(n17) );
  INVERT_I U39 ( .A(n23), .Z(n24) );
  BUFFER_H U40 ( .A(\A2[4] ), .Z(n20) );
  AND2_H U41 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U42 ( .A(n2), .Z(n21) );
  NOR2_E U43 ( .A(n46), .B(n25), .Z(\ab[1][6] ) );
  INVERT_I U44 ( .A(n23), .Z(n25) );
  XOR2_D U45 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_K U46 ( .A(n27), .Z(n29) );
  NOR2_D U47 ( .A(n29), .B(n52), .Z(\ab[2][0] ) );
  NOR2_E U48 ( .A(n25), .B(n52), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n52) );
  NOR2_D U50 ( .A(n28), .B(n51), .Z(\ab[2][1] ) );
  NOR2_E U51 ( .A(n26), .B(n51), .Z(\ab[1][1] ) );
  INVERT_I U52 ( .A(B[1]), .Z(n51) );
  NOR2_E U53 ( .A(n47), .B(n24), .Z(\ab[1][5] ) );
  NOR2_D U54 ( .A(n29), .B(n47), .Z(\ab[2][5] ) );
  INVERT_I U55 ( .A(B[5]), .Z(n47) );
  NOR2_E U56 ( .A(n48), .B(n25), .Z(\ab[1][4] ) );
  NOR2_D U57 ( .A(n29), .B(n48), .Z(\ab[2][4] ) );
  INVERT_I U58 ( .A(B[4]), .Z(n48) );
  NOR2_E U59 ( .A(n49), .B(n24), .Z(\ab[1][3] ) );
  NOR2_D U60 ( .A(n29), .B(n49), .Z(\ab[2][3] ) );
  INVERT_I U61 ( .A(B[3]), .Z(n49) );
  NOR2_C U62 ( .A(n28), .B(n50), .Z(\ab[2][2] ) );
  NOR2_E U63 ( .A(n24), .B(n50), .Z(\ab[1][2] ) );
  INVERT_I U64 ( .A(B[2]), .Z(n50) );
  INVERT_F U65 ( .A(n23), .Z(n26) );
  INVERT_I U66 ( .A(n42), .Z(n27) );
  INVERT_H U67 ( .A(n27), .Z(n28) );
  NOR2_E U68 ( .A(n48), .B(n44), .Z(\ab[0][4] ) );
  NOR2_E U69 ( .A(n47), .B(n44), .Z(\ab[0][5] ) );
  NOR2_E U70 ( .A(n49), .B(n44), .Z(\ab[0][3] ) );
  NOR2_E U71 ( .A(n44), .B(n50), .Z(\ab[0][2] ) );
  NOR2_E U72 ( .A(n44), .B(n51), .Z(\ab[0][1] ) );
  NOR2_E U73 ( .A(n46), .B(n44), .Z(\ab[0][6] ) );
  INVERT_M U74 ( .A(A[0]), .Z(n44) );
  AND2_H U75 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U76 ( .A(\A2[5] ), .Z(n35) );
  INVERT_I U77 ( .A(\A2[7] ), .Z(n36) );
  INVERT_H U78 ( .A(\A1[7] ), .Z(n30) );
  INVERT_I U79 ( .A(n30), .Z(n31) );
  INVERT_H U80 ( .A(\A1[8] ), .Z(n33) );
  NOR2_D U81 ( .A(n45), .B(n41), .Z(\ab[3][7] ) );
  NOR2_E U82 ( .A(A[0]), .B(n45), .Z(\ab[0][7] ) );
  INVERT_K U83 ( .A(ZB), .Z(n45) );
  NOR2_D U84 ( .A(B[4]), .B(n41), .Z(\ab[3][4] ) );
  NOR2_D U85 ( .A(B[2]), .B(n41), .Z(\ab[3][2] ) );
  OR2_I U86 ( .A(A[1]), .B(n45), .Z(\ab[1][7] ) );
  NAND2_E U87 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U88 ( .A(n44), .B(n52), .Z(PRODUCT[0]) );
  NOR2_D U89 ( .A(B[3]), .B(n41), .Z(\ab[3][3] ) );
  INVERT_I U90 ( .A(B[6]), .Z(n46) );
  NAND2_E U91 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][2] ), .Z(n37) );
  INVERT_H U93 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U94 ( .A(n29), .B(n46), .Z(\ab[2][6] ) );
  INVERT_H U95 ( .A(\ab[2][6] ), .Z(n39) );
  AND2_H U96 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U97 ( .A(A[2]), .Z(n42) );
  INVERT_H U98 ( .A(A[1]), .Z(n43) );
  XOR2_C U99 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U100 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U101 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U102 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U103 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U104 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U105 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U106 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U107 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U108 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U109 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U110 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U111 ( .A(\CARRYB[3][7] ), .Z(n40) );
endmodule


module dsp_slice_62 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_62_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_62_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_61_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_61_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_E U3 ( .A(n4), .Z(n27) );
  AO21_F U4 ( .A1(n32), .A2(n17), .B(n6), .Z(n1) );
  AO21_F U5 ( .A1(n34), .A2(n56), .B(n26), .Z(n2) );
  XOR2_B U6 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U7 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U8 ( .A(n54), .Z(n3) );
  OA21_H U9 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U10 ( .A(n41), .B(n29), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U12 ( .A(n57), .Z(n4) );
  INVERT_H U13 ( .A(n46), .Z(n5) );
  INVERT_H U14 ( .A(n5), .Z(n6) );
  AND2_I U15 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U16 ( .A(n18), .Z(n16) );
  INVERT_E U17 ( .A(n19), .Z(n7) );
  INVERT_H U18 ( .A(n7), .Z(n8) );
  INVERT_E U19 ( .A(n21), .Z(n9) );
  INVERT_H U20 ( .A(n9), .Z(n10) );
  INVERT_E U21 ( .A(n27), .Z(n25) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  INVERT_E U24 ( .A(n47), .Z(n32) );
  INVERT_E U25 ( .A(n58), .Z(n34) );
  INVERT_H U26 ( .A(n13), .Z(n14) );
  INVERT_E U27 ( .A(n15), .Z(n13) );
  NAND2_E U28 ( .A(n33), .B(n14), .Z(n52) );
  AO21_E U29 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U30 ( .A(n55), .B(n11), .Z(SUM[4]) );
  NOR2_C U31 ( .A(n8), .B(n53), .Z(n55) );
  XOR2_B U32 ( .A(B[8]), .B(A[8]), .Z(n41) );
  INVERT_D U33 ( .A(B[2]), .Z(n36) );
  CLKI_O U34 ( .A(n28), .Z(n29) );
  INVERT_H U35 ( .A(n2), .Z(n11) );
  INVERT_H U36 ( .A(n1), .Z(n12) );
  AND2_H U37 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_D U38 ( .A(n51), .Z(n15) );
  INVERT_F U39 ( .A(n16), .Z(n17) );
  OA21_F U40 ( .A1(n49), .A2(n22), .B(n14), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n18) );
  INVERT_D U42 ( .A(n3), .Z(n19) );
  INVERT_F U43 ( .A(n8), .Z(n20) );
  INVERT_D U44 ( .A(n50), .Z(n21) );
  INVERT_F U45 ( .A(n10), .Z(n22) );
  OA21_F U46 ( .A1(n53), .A2(n11), .B(n20), .Z(n50) );
  NOR2_E U47 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_E U48 ( .A(n36), .Z(n23) );
  INVERT_H U49 ( .A(n23), .Z(n24) );
  INVERT_F U50 ( .A(n25), .Z(n26) );
  OA21_F U51 ( .A1(n42), .A2(n12), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n12), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n17), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n6), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n22), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n24), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n24), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_61_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] , \A1[0] , \A2[9] ,
         \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] , \A2[2] , n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n22), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n17), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_61_DW01_add_1 FS_1 ( .A({n36, n30, n28, n25, \A1[5] , \A1[4] , n23, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n11, n32, \A2[6] , n33, n19, 
        n24, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n9), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n7), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n37), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n31), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n3), .B(\CARRYB[2][6] ), .CIN(n5), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n13), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n20), .B(n15), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n20) );
  NOR2_D U5 ( .A(B[6]), .B(n37), .Z(n3) );
  NOR2_D U6 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  NOR2_D U7 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U8 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_H U9 ( .A(\A2[3] ), .Z(n24) );
  NAND2_E U10 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n4) );
  INVERT_H U12 ( .A(n4), .Z(n5) );
  INVERT_D U13 ( .A(\CARRYB[1][2] ), .Z(n6) );
  INVERT_E U14 ( .A(n6), .Z(n7) );
  INVERT_D U15 ( .A(\CARRYB[1][6] ), .Z(n8) );
  INVERT_E U16 ( .A(n8), .Z(n9) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n10) );
  INVERT_H U18 ( .A(n10), .Z(n11) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U20 ( .A(\CARRYB[1][1] ), .Z(n12) );
  INVERT_E U21 ( .A(n12), .Z(n13) );
  AND2_H U22 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U23 ( .A(\CARRYB[1][3] ), .Z(n14) );
  INVERT_E U24 ( .A(n14), .Z(n15) );
  AND2_H U25 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U26 ( .A(A[2]), .Z(n38) );
  INVERT_I U27 ( .A(n29), .Z(n30) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U29 ( .A(\CARRYB[1][4] ), .Z(n16) );
  INVERT_E U30 ( .A(n16), .Z(n17) );
  INVERT_H U31 ( .A(\A2[4] ), .Z(n18) );
  INVERT_H U32 ( .A(n18), .Z(n19) );
  AND2_I U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U34 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U35 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  NOR2_D U36 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  INVERT_N U37 ( .A(ZA), .Z(n37) );
  INVERT_D U38 ( .A(\CARRYB[1][0] ), .Z(n21) );
  INVERT_E U39 ( .A(n21), .Z(n22) );
  AND2_H U40 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_D U41 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U42 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  INVERT_H U43 ( .A(n2), .Z(n23) );
  INVERT_I U44 ( .A(B[0]), .Z(n48) );
  NOR2_E U45 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  NOR2_E U46 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  NOR2_E U47 ( .A(n26), .B(n39), .Z(\ab[1][4] ) );
  INVERT_M U48 ( .A(A[1]), .Z(n39) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U54 ( .A(n40), .B(n47), .Z(\ab[0][1] ) );
  NOR2_E U55 ( .A(n45), .B(n40), .Z(\ab[0][3] ) );
  NOR2_E U56 ( .A(n40), .B(n46), .Z(\ab[0][2] ) );
  INVERT_M U57 ( .A(A[0]), .Z(n40) );
  INVERT_I U58 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U59 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_H U60 ( .A(B[4]), .Z(n26) );
  INVERT_H U61 ( .A(B[4]), .Z(n44) );
  INVERT_I U62 ( .A(B[2]), .Z(n46) );
  INVERT_H U63 ( .A(\A1[7] ), .Z(n27) );
  INVERT_I U64 ( .A(n27), .Z(n28) );
  NOR2_E U65 ( .A(n42), .B(n39), .Z(\ab[1][6] ) );
  INVERT_H U66 ( .A(\A1[8] ), .Z(n29) );
  NOR2_D U67 ( .A(n38), .B(n26), .Z(\ab[2][4] ) );
  AND2_H U68 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U69 ( .A(n43), .B(n40), .Z(\ab[0][5] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][5] ), .Z(n31) );
  INVERT_I U71 ( .A(B[5]), .Z(n43) );
  NOR2_E U72 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U73 ( .A(n42), .B(n40), .Z(\ab[0][6] ) );
  AND2_H U74 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U75 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U76 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n41) );
  NOR2_D U79 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U81 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  NAND2_E U82 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U83 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U84 ( .A(\A2[5] ), .Z(n33) );
  NOR2_D U85 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U86 ( .A(B[6]), .Z(n42) );
  OR2_I U87 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  AND2_H U88 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U89 ( .A(n48), .B(n40), .Z(PRODUCT[0]) );
  INVERT_H U90 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U91 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U92 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U93 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U94 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U97 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U98 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U99 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U100 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U101 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U102 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U103 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U104 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U105 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U106 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_61 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_61_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_61_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_I U7 ( .A(n4), .Z(n5) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_60_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_60_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n22), .Z(n20) );
  INVERT_D U3 ( .A(B[2]), .Z(n29) );
  INVERT_E U4 ( .A(n3), .Z(n19) );
  AO21_F U5 ( .A1(n24), .A2(n11), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n27), .A2(n49), .B(n18), .Z(n2) );
  XOR2_B U7 ( .A(n30), .B(n31), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n21), .B(B[8]), .Z(n33) );
  XOR2_B U9 ( .A(n34), .B(n21), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n50) );
  INVERT_D U11 ( .A(n50), .Z(n3) );
  INVERT_H U12 ( .A(n39), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n39) );
  INVERT_E U15 ( .A(n12), .Z(n10) );
  INVERT_E U16 ( .A(n13), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n19), .Z(n17) );
  NAND2BAL_E U19 ( .A(n23), .B(n36), .Z(n37) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n36) );
  NAND2BAL_E U21 ( .A(n25), .B(n44), .Z(n45) );
  NAND2_F U22 ( .A(B[5]), .B(A[5]), .Z(n44) );
  INVERT_E U23 ( .A(n40), .Z(n24) );
  INVERT_E U24 ( .A(n51), .Z(n27) );
  INVERT_F U25 ( .A(n47), .Z(n26) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n47) );
  AO21_E U27 ( .A1(n21), .A2(A[8]), .B(n33), .Z(n31) );
  XNOR2_C U28 ( .A(n48), .B(n8), .Z(SUM[4]) );
  NOR2_C U29 ( .A(n26), .B(n46), .Z(n48) );
  XOR2_B U30 ( .A(B[8]), .B(A[8]), .Z(n34) );
  CLKI_O U31 ( .A(n20), .Z(n21) );
  INVERT_H U32 ( .A(n2), .Z(n8) );
  INVERT_H U33 ( .A(n1), .Z(n9) );
  INVERT_F U34 ( .A(n10), .Z(n11) );
  OA21_F U35 ( .A1(n42), .A2(n14), .B(n44), .Z(n38) );
  INVERT_D U36 ( .A(n38), .Z(n12) );
  INVERT_D U37 ( .A(n43), .Z(n13) );
  INVERT_F U38 ( .A(n7), .Z(n14) );
  OA21_F U39 ( .A1(n46), .A2(n8), .B(n47), .Z(n43) );
  NOR2_E U40 ( .A(B[4]), .B(A[4]), .Z(n46) );
  INVERT_E U41 ( .A(n29), .Z(n15) );
  INVERT_H U42 ( .A(n15), .Z(n16) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  OA21_F U44 ( .A1(n35), .A2(n9), .B(n36), .Z(n32) );
  INVERT_D U45 ( .A(n32), .Z(n22) );
  XOR2_B U46 ( .A(n49), .B(n52), .Z(SUM[3]) );
  NOR2_C U47 ( .A(n18), .B(n51), .Z(n52) );
  NOR2_E U48 ( .A(B[3]), .B(A[3]), .Z(n51) );
  XOR2_B U49 ( .A(n37), .B(n9), .Z(SUM[7]) );
  INVERT_E U50 ( .A(n35), .Z(n23) );
  NOR2_E U51 ( .A(B[7]), .B(A[7]), .Z(n35) );
  XOR2_B U52 ( .A(n41), .B(n11), .Z(SUM[6]) );
  NOR2_C U53 ( .A(n5), .B(n40), .Z(n41) );
  NOR2_E U54 ( .A(B[6]), .B(A[6]), .Z(n40) );
  XOR2_B U55 ( .A(n45), .B(n14), .Z(SUM[5]) );
  INVERT_E U56 ( .A(n42), .Z(n25) );
  NOR2_E U57 ( .A(B[5]), .B(A[5]), .Z(n42) );
  NOR2_F U58 ( .A(n16), .B(n28), .Z(n49) );
  INVERT_H U59 ( .A(A[2]), .Z(n28) );
  XOR2_B U60 ( .A(B[9]), .B(A[9]), .Z(n30) );
  AOI21_A U61 ( .A1(n16), .A2(n28), .B(n49), .Z(SUM[2]) );
endmodule


module dsp_slice_60_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n8), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n12), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n16), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_60_DW01_add_1 FS_1 ( .A({n40, n34, n31, n32, \A1[5] , \A1[4] , n21, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n6, n36, \A2[6] , n35, n19, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n39), .B(n4), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n45), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n17), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_C S2_2_2 ( .A(\ab[2][2] ), .B(n37), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n32) );
  INVERT_H U3 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U4 ( .A(B[1]), .B(n41), .Z(\ab[3][1] ) );
  NOR2_D U5 ( .A(B[0]), .B(n41), .Z(\ab[3][0] ) );
  XNOR2_C U6 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_J U7 ( .A(n43), .Z(n23) );
  NOR2_D U8 ( .A(B[5]), .B(n41), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n41), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n41) );
  INVERT_I U11 ( .A(n18), .Z(n19) );
  INVERT_F U12 ( .A(n20), .Z(n18) );
  NOR2_D U13 ( .A(A[2]), .B(n45), .Z(\ab[2][7] ) );
  INVERT_D U14 ( .A(\CARRYB[1][6] ), .Z(n3) );
  INVERT_E U15 ( .A(n3), .Z(n4) );
  NAND2BAL_E U16 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n5) );
  INVERT_H U18 ( .A(n5), .Z(n6) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_I U21 ( .A(n33), .Z(n34) );
  AND2_H U22 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U23 ( .A(\CARRYB[1][0] ), .Z(n7) );
  INVERT_E U24 ( .A(n7), .Z(n8) );
  AND2_H U25 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U26 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U27 ( .A(n9), .Z(n10) );
  AND2_H U28 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U29 ( .A(\CARRYB[1][3] ), .Z(n11) );
  INVERT_E U30 ( .A(n11), .Z(n12) );
  AND2_H U31 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U32 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U33 ( .A(n13), .Z(n14) );
  AND2_H U34 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U35 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U36 ( .A(n15), .Z(n16) );
  AND2_H U37 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U38 ( .A(\ab[3][6] ), .Z(n17) );
  INVERT_I U39 ( .A(n23), .Z(n24) );
  BUFFER_H U40 ( .A(\A2[4] ), .Z(n20) );
  AND2_H U41 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U42 ( .A(n2), .Z(n21) );
  NOR2_E U43 ( .A(n46), .B(n25), .Z(\ab[1][6] ) );
  INVERT_I U44 ( .A(n23), .Z(n25) );
  XOR2_D U45 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_K U46 ( .A(n27), .Z(n29) );
  NOR2_D U47 ( .A(n29), .B(n52), .Z(\ab[2][0] ) );
  NOR2_E U48 ( .A(n25), .B(n52), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n52) );
  NOR2_D U50 ( .A(n28), .B(n51), .Z(\ab[2][1] ) );
  NOR2_E U51 ( .A(n26), .B(n51), .Z(\ab[1][1] ) );
  INVERT_I U52 ( .A(B[1]), .Z(n51) );
  NOR2_E U53 ( .A(n47), .B(n24), .Z(\ab[1][5] ) );
  NOR2_D U54 ( .A(n29), .B(n47), .Z(\ab[2][5] ) );
  INVERT_I U55 ( .A(B[5]), .Z(n47) );
  NOR2_E U56 ( .A(n48), .B(n25), .Z(\ab[1][4] ) );
  NOR2_D U57 ( .A(n29), .B(n48), .Z(\ab[2][4] ) );
  INVERT_I U58 ( .A(B[4]), .Z(n48) );
  NOR2_E U59 ( .A(n49), .B(n24), .Z(\ab[1][3] ) );
  NOR2_D U60 ( .A(n29), .B(n49), .Z(\ab[2][3] ) );
  INVERT_I U61 ( .A(B[3]), .Z(n49) );
  NOR2_C U62 ( .A(n28), .B(n50), .Z(\ab[2][2] ) );
  NOR2_E U63 ( .A(n24), .B(n50), .Z(\ab[1][2] ) );
  INVERT_I U64 ( .A(B[2]), .Z(n50) );
  INVERT_F U65 ( .A(n23), .Z(n26) );
  INVERT_I U66 ( .A(n42), .Z(n27) );
  INVERT_H U67 ( .A(n27), .Z(n28) );
  NOR2_E U68 ( .A(n48), .B(n44), .Z(\ab[0][4] ) );
  NOR2_E U69 ( .A(n47), .B(n44), .Z(\ab[0][5] ) );
  NOR2_E U70 ( .A(n49), .B(n44), .Z(\ab[0][3] ) );
  NOR2_E U71 ( .A(n44), .B(n50), .Z(\ab[0][2] ) );
  NOR2_E U72 ( .A(n44), .B(n51), .Z(\ab[0][1] ) );
  NOR2_E U73 ( .A(n46), .B(n44), .Z(\ab[0][6] ) );
  INVERT_M U74 ( .A(A[0]), .Z(n44) );
  AND2_H U75 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U76 ( .A(\A2[5] ), .Z(n35) );
  INVERT_I U77 ( .A(\A2[7] ), .Z(n36) );
  INVERT_H U78 ( .A(\A1[7] ), .Z(n30) );
  INVERT_I U79 ( .A(n30), .Z(n31) );
  INVERT_H U80 ( .A(\A1[8] ), .Z(n33) );
  NOR2_D U81 ( .A(n45), .B(n41), .Z(\ab[3][7] ) );
  NOR2_E U82 ( .A(A[0]), .B(n45), .Z(\ab[0][7] ) );
  INVERT_K U83 ( .A(ZB), .Z(n45) );
  NOR2_D U84 ( .A(B[4]), .B(n41), .Z(\ab[3][4] ) );
  NOR2_D U85 ( .A(B[2]), .B(n41), .Z(\ab[3][2] ) );
  OR2_I U86 ( .A(A[1]), .B(n45), .Z(\ab[1][7] ) );
  NAND2_E U87 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U88 ( .A(n44), .B(n52), .Z(PRODUCT[0]) );
  NOR2_D U89 ( .A(B[3]), .B(n41), .Z(\ab[3][3] ) );
  INVERT_I U90 ( .A(B[6]), .Z(n46) );
  NAND2_E U91 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][2] ), .Z(n37) );
  INVERT_H U93 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U94 ( .A(n29), .B(n46), .Z(\ab[2][6] ) );
  INVERT_H U95 ( .A(\ab[2][6] ), .Z(n39) );
  AND2_H U96 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U97 ( .A(A[2]), .Z(n42) );
  INVERT_H U98 ( .A(A[1]), .Z(n43) );
  XOR2_C U99 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U100 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U101 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U102 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U103 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U104 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U105 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U106 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U107 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U108 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U109 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U110 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U111 ( .A(\CARRYB[3][7] ), .Z(n40) );
endmodule


module dsp_slice_60 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_60_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_60_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_59_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_59_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_E U3 ( .A(n4), .Z(n27) );
  AO21_F U4 ( .A1(n32), .A2(n17), .B(n6), .Z(n1) );
  AO21_F U5 ( .A1(n34), .A2(n56), .B(n26), .Z(n2) );
  XOR2_B U6 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U7 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U8 ( .A(n54), .Z(n3) );
  OA21_H U9 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U10 ( .A(n41), .B(n29), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U12 ( .A(n57), .Z(n4) );
  INVERT_H U13 ( .A(n46), .Z(n5) );
  INVERT_H U14 ( .A(n5), .Z(n6) );
  AND2_I U15 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U16 ( .A(n18), .Z(n16) );
  INVERT_E U17 ( .A(n19), .Z(n7) );
  INVERT_H U18 ( .A(n7), .Z(n8) );
  INVERT_E U19 ( .A(n21), .Z(n9) );
  INVERT_H U20 ( .A(n9), .Z(n10) );
  INVERT_E U21 ( .A(n27), .Z(n25) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  INVERT_E U24 ( .A(n47), .Z(n32) );
  INVERT_E U25 ( .A(n58), .Z(n34) );
  INVERT_H U26 ( .A(n13), .Z(n14) );
  INVERT_E U27 ( .A(n15), .Z(n13) );
  NAND2_E U28 ( .A(n33), .B(n14), .Z(n52) );
  AO21_E U29 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U30 ( .A(n55), .B(n11), .Z(SUM[4]) );
  NOR2_C U31 ( .A(n8), .B(n53), .Z(n55) );
  XOR2_B U32 ( .A(B[8]), .B(A[8]), .Z(n41) );
  INVERT_D U33 ( .A(B[2]), .Z(n36) );
  CLKI_O U34 ( .A(n28), .Z(n29) );
  INVERT_H U35 ( .A(n2), .Z(n11) );
  INVERT_H U36 ( .A(n1), .Z(n12) );
  AND2_H U37 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_D U38 ( .A(n51), .Z(n15) );
  INVERT_F U39 ( .A(n16), .Z(n17) );
  OA21_F U40 ( .A1(n49), .A2(n22), .B(n14), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n18) );
  INVERT_D U42 ( .A(n3), .Z(n19) );
  INVERT_F U43 ( .A(n8), .Z(n20) );
  INVERT_D U44 ( .A(n50), .Z(n21) );
  INVERT_F U45 ( .A(n10), .Z(n22) );
  OA21_F U46 ( .A1(n53), .A2(n11), .B(n20), .Z(n50) );
  NOR2_E U47 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_E U48 ( .A(n36), .Z(n23) );
  INVERT_H U49 ( .A(n23), .Z(n24) );
  INVERT_F U50 ( .A(n25), .Z(n26) );
  OA21_F U51 ( .A1(n42), .A2(n12), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n12), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n17), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n6), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n22), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n24), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n24), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_59_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] , \A1[0] , \A2[9] ,
         \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] , \A2[2] , n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n22), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n17), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_59_DW01_add_1 FS_1 ( .A({n36, n30, n28, n25, \A1[5] , \A1[4] , n23, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n11, n32, \A2[6] , n33, n19, 
        n24, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n9), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n7), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n37), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n31), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n3), .B(\CARRYB[2][6] ), .CIN(n5), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n13), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n20), .B(n15), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n20) );
  NOR2_D U5 ( .A(B[6]), .B(n37), .Z(n3) );
  NOR2_D U6 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  NOR2_D U7 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U8 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_H U9 ( .A(\A2[3] ), .Z(n24) );
  NAND2_E U10 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n4) );
  INVERT_H U12 ( .A(n4), .Z(n5) );
  INVERT_D U13 ( .A(\CARRYB[1][2] ), .Z(n6) );
  INVERT_E U14 ( .A(n6), .Z(n7) );
  INVERT_D U15 ( .A(\CARRYB[1][6] ), .Z(n8) );
  INVERT_E U16 ( .A(n8), .Z(n9) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n10) );
  INVERT_H U18 ( .A(n10), .Z(n11) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U20 ( .A(\CARRYB[1][1] ), .Z(n12) );
  INVERT_E U21 ( .A(n12), .Z(n13) );
  AND2_H U22 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U23 ( .A(\CARRYB[1][3] ), .Z(n14) );
  INVERT_E U24 ( .A(n14), .Z(n15) );
  AND2_H U25 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U26 ( .A(A[2]), .Z(n38) );
  INVERT_I U27 ( .A(n29), .Z(n30) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U29 ( .A(\CARRYB[1][4] ), .Z(n16) );
  INVERT_E U30 ( .A(n16), .Z(n17) );
  INVERT_H U31 ( .A(\A2[4] ), .Z(n18) );
  INVERT_H U32 ( .A(n18), .Z(n19) );
  AND2_I U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U34 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U35 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  NOR2_D U36 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  INVERT_N U37 ( .A(ZA), .Z(n37) );
  INVERT_D U38 ( .A(\CARRYB[1][0] ), .Z(n21) );
  INVERT_E U39 ( .A(n21), .Z(n22) );
  AND2_H U40 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_D U41 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U42 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  INVERT_H U43 ( .A(n2), .Z(n23) );
  INVERT_I U44 ( .A(B[0]), .Z(n48) );
  NOR2_E U45 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  NOR2_E U46 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  NOR2_E U47 ( .A(n26), .B(n39), .Z(\ab[1][4] ) );
  INVERT_M U48 ( .A(A[1]), .Z(n39) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U54 ( .A(n40), .B(n47), .Z(\ab[0][1] ) );
  NOR2_E U55 ( .A(n45), .B(n40), .Z(\ab[0][3] ) );
  NOR2_E U56 ( .A(n40), .B(n46), .Z(\ab[0][2] ) );
  INVERT_M U57 ( .A(A[0]), .Z(n40) );
  INVERT_I U58 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U59 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_H U60 ( .A(B[4]), .Z(n26) );
  INVERT_H U61 ( .A(B[4]), .Z(n44) );
  INVERT_I U62 ( .A(B[2]), .Z(n46) );
  INVERT_H U63 ( .A(\A1[7] ), .Z(n27) );
  INVERT_I U64 ( .A(n27), .Z(n28) );
  NOR2_E U65 ( .A(n42), .B(n39), .Z(\ab[1][6] ) );
  INVERT_H U66 ( .A(\A1[8] ), .Z(n29) );
  NOR2_D U67 ( .A(n38), .B(n26), .Z(\ab[2][4] ) );
  AND2_H U68 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U69 ( .A(n43), .B(n40), .Z(\ab[0][5] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][5] ), .Z(n31) );
  INVERT_I U71 ( .A(B[5]), .Z(n43) );
  NOR2_E U72 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U73 ( .A(n42), .B(n40), .Z(\ab[0][6] ) );
  AND2_H U74 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U75 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U76 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n41) );
  NOR2_D U79 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U81 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  NAND2_E U82 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U83 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U84 ( .A(\A2[5] ), .Z(n33) );
  NOR2_D U85 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U86 ( .A(B[6]), .Z(n42) );
  OR2_I U87 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  AND2_H U88 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U89 ( .A(n48), .B(n40), .Z(PRODUCT[0]) );
  INVERT_H U90 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U91 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U92 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U93 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U94 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U97 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U98 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U99 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U100 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U101 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U102 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U103 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U104 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U105 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U106 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_59 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_59_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_59_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_I U7 ( .A(n4), .Z(n5) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_58_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_58_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n22), .Z(n20) );
  INVERT_D U3 ( .A(B[2]), .Z(n29) );
  INVERT_E U4 ( .A(n3), .Z(n19) );
  AO21_F U5 ( .A1(n24), .A2(n11), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n27), .A2(n49), .B(n18), .Z(n2) );
  XOR2_B U7 ( .A(n30), .B(n31), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n21), .B(B[8]), .Z(n33) );
  XOR2_B U9 ( .A(n34), .B(n21), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n50) );
  INVERT_D U11 ( .A(n50), .Z(n3) );
  INVERT_H U12 ( .A(n39), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n39) );
  INVERT_E U15 ( .A(n12), .Z(n10) );
  INVERT_E U16 ( .A(n13), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n19), .Z(n17) );
  NAND2BAL_E U19 ( .A(n23), .B(n36), .Z(n37) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n36) );
  NAND2BAL_E U21 ( .A(n25), .B(n44), .Z(n45) );
  NAND2_F U22 ( .A(B[5]), .B(A[5]), .Z(n44) );
  INVERT_E U23 ( .A(n40), .Z(n24) );
  INVERT_E U24 ( .A(n51), .Z(n27) );
  INVERT_F U25 ( .A(n47), .Z(n26) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n47) );
  AO21_E U27 ( .A1(n21), .A2(A[8]), .B(n33), .Z(n31) );
  XNOR2_C U28 ( .A(n48), .B(n8), .Z(SUM[4]) );
  NOR2_C U29 ( .A(n26), .B(n46), .Z(n48) );
  XOR2_B U30 ( .A(B[8]), .B(A[8]), .Z(n34) );
  CLKI_O U31 ( .A(n20), .Z(n21) );
  INVERT_H U32 ( .A(n2), .Z(n8) );
  INVERT_H U33 ( .A(n1), .Z(n9) );
  INVERT_F U34 ( .A(n10), .Z(n11) );
  OA21_F U35 ( .A1(n42), .A2(n14), .B(n44), .Z(n38) );
  INVERT_D U36 ( .A(n38), .Z(n12) );
  INVERT_D U37 ( .A(n43), .Z(n13) );
  INVERT_F U38 ( .A(n7), .Z(n14) );
  OA21_F U39 ( .A1(n46), .A2(n8), .B(n47), .Z(n43) );
  NOR2_E U40 ( .A(B[4]), .B(A[4]), .Z(n46) );
  INVERT_E U41 ( .A(n29), .Z(n15) );
  INVERT_H U42 ( .A(n15), .Z(n16) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  OA21_F U44 ( .A1(n35), .A2(n9), .B(n36), .Z(n32) );
  INVERT_D U45 ( .A(n32), .Z(n22) );
  XOR2_B U46 ( .A(n49), .B(n52), .Z(SUM[3]) );
  NOR2_C U47 ( .A(n18), .B(n51), .Z(n52) );
  NOR2_E U48 ( .A(B[3]), .B(A[3]), .Z(n51) );
  XOR2_B U49 ( .A(n37), .B(n9), .Z(SUM[7]) );
  INVERT_E U50 ( .A(n35), .Z(n23) );
  NOR2_E U51 ( .A(B[7]), .B(A[7]), .Z(n35) );
  XOR2_B U52 ( .A(n41), .B(n11), .Z(SUM[6]) );
  NOR2_C U53 ( .A(n5), .B(n40), .Z(n41) );
  NOR2_E U54 ( .A(B[6]), .B(A[6]), .Z(n40) );
  XOR2_B U55 ( .A(n45), .B(n14), .Z(SUM[5]) );
  INVERT_E U56 ( .A(n42), .Z(n25) );
  NOR2_E U57 ( .A(B[5]), .B(A[5]), .Z(n42) );
  NOR2_F U58 ( .A(n16), .B(n28), .Z(n49) );
  INVERT_H U59 ( .A(A[2]), .Z(n28) );
  XOR2_B U60 ( .A(B[9]), .B(A[9]), .Z(n30) );
  AOI21_A U61 ( .A1(n16), .A2(n28), .B(n49), .Z(SUM[2]) );
endmodule


module dsp_slice_58_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n8), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n12), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n16), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_58_DW01_add_1 FS_1 ( .A({n40, n34, n31, n32, \A1[5] , \A1[4] , n21, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n6, n36, \A2[6] , n35, n19, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n39), .B(n4), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n45), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n17), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_C S2_2_2 ( .A(\ab[2][2] ), .B(n37), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n32) );
  INVERT_H U3 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U4 ( .A(B[1]), .B(n41), .Z(\ab[3][1] ) );
  NOR2_D U5 ( .A(B[0]), .B(n41), .Z(\ab[3][0] ) );
  XNOR2_C U6 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_J U7 ( .A(n43), .Z(n23) );
  NOR2_D U8 ( .A(B[5]), .B(n41), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n41), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n41) );
  INVERT_I U11 ( .A(n18), .Z(n19) );
  INVERT_F U12 ( .A(n20), .Z(n18) );
  NOR2_D U13 ( .A(A[2]), .B(n45), .Z(\ab[2][7] ) );
  INVERT_D U14 ( .A(\CARRYB[1][6] ), .Z(n3) );
  INVERT_E U15 ( .A(n3), .Z(n4) );
  NAND2BAL_E U16 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n5) );
  INVERT_H U18 ( .A(n5), .Z(n6) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_I U21 ( .A(n33), .Z(n34) );
  AND2_H U22 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U23 ( .A(\CARRYB[1][0] ), .Z(n7) );
  INVERT_E U24 ( .A(n7), .Z(n8) );
  AND2_H U25 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U26 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U27 ( .A(n9), .Z(n10) );
  AND2_H U28 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U29 ( .A(\CARRYB[1][3] ), .Z(n11) );
  INVERT_E U30 ( .A(n11), .Z(n12) );
  AND2_H U31 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U32 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U33 ( .A(n13), .Z(n14) );
  AND2_H U34 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U35 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U36 ( .A(n15), .Z(n16) );
  AND2_H U37 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U38 ( .A(\ab[3][6] ), .Z(n17) );
  INVERT_I U39 ( .A(n23), .Z(n24) );
  BUFFER_H U40 ( .A(\A2[4] ), .Z(n20) );
  AND2_H U41 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U42 ( .A(n2), .Z(n21) );
  NOR2_E U43 ( .A(n46), .B(n25), .Z(\ab[1][6] ) );
  INVERT_I U44 ( .A(n23), .Z(n25) );
  XOR2_D U45 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_K U46 ( .A(n27), .Z(n29) );
  NOR2_D U47 ( .A(n29), .B(n52), .Z(\ab[2][0] ) );
  NOR2_E U48 ( .A(n25), .B(n52), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n52) );
  NOR2_D U50 ( .A(n28), .B(n51), .Z(\ab[2][1] ) );
  NOR2_E U51 ( .A(n26), .B(n51), .Z(\ab[1][1] ) );
  INVERT_I U52 ( .A(B[1]), .Z(n51) );
  NOR2_E U53 ( .A(n47), .B(n24), .Z(\ab[1][5] ) );
  NOR2_D U54 ( .A(n29), .B(n47), .Z(\ab[2][5] ) );
  INVERT_I U55 ( .A(B[5]), .Z(n47) );
  NOR2_E U56 ( .A(n48), .B(n25), .Z(\ab[1][4] ) );
  NOR2_D U57 ( .A(n29), .B(n48), .Z(\ab[2][4] ) );
  INVERT_I U58 ( .A(B[4]), .Z(n48) );
  NOR2_E U59 ( .A(n49), .B(n24), .Z(\ab[1][3] ) );
  NOR2_D U60 ( .A(n29), .B(n49), .Z(\ab[2][3] ) );
  INVERT_I U61 ( .A(B[3]), .Z(n49) );
  NOR2_C U62 ( .A(n28), .B(n50), .Z(\ab[2][2] ) );
  NOR2_E U63 ( .A(n24), .B(n50), .Z(\ab[1][2] ) );
  INVERT_I U64 ( .A(B[2]), .Z(n50) );
  INVERT_F U65 ( .A(n23), .Z(n26) );
  INVERT_I U66 ( .A(n42), .Z(n27) );
  INVERT_H U67 ( .A(n27), .Z(n28) );
  NOR2_E U68 ( .A(n48), .B(n44), .Z(\ab[0][4] ) );
  NOR2_E U69 ( .A(n47), .B(n44), .Z(\ab[0][5] ) );
  NOR2_E U70 ( .A(n49), .B(n44), .Z(\ab[0][3] ) );
  NOR2_E U71 ( .A(n44), .B(n50), .Z(\ab[0][2] ) );
  NOR2_E U72 ( .A(n44), .B(n51), .Z(\ab[0][1] ) );
  NOR2_E U73 ( .A(n46), .B(n44), .Z(\ab[0][6] ) );
  INVERT_M U74 ( .A(A[0]), .Z(n44) );
  AND2_H U75 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U76 ( .A(\A2[5] ), .Z(n35) );
  INVERT_I U77 ( .A(\A2[7] ), .Z(n36) );
  INVERT_H U78 ( .A(\A1[7] ), .Z(n30) );
  INVERT_I U79 ( .A(n30), .Z(n31) );
  INVERT_H U80 ( .A(\A1[8] ), .Z(n33) );
  NOR2_D U81 ( .A(n45), .B(n41), .Z(\ab[3][7] ) );
  NOR2_E U82 ( .A(A[0]), .B(n45), .Z(\ab[0][7] ) );
  INVERT_K U83 ( .A(ZB), .Z(n45) );
  NOR2_D U84 ( .A(B[4]), .B(n41), .Z(\ab[3][4] ) );
  NOR2_D U85 ( .A(B[2]), .B(n41), .Z(\ab[3][2] ) );
  OR2_I U86 ( .A(A[1]), .B(n45), .Z(\ab[1][7] ) );
  NAND2_E U87 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U88 ( .A(n44), .B(n52), .Z(PRODUCT[0]) );
  NOR2_D U89 ( .A(B[3]), .B(n41), .Z(\ab[3][3] ) );
  INVERT_I U90 ( .A(B[6]), .Z(n46) );
  NAND2_E U91 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][2] ), .Z(n37) );
  INVERT_H U93 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U94 ( .A(n29), .B(n46), .Z(\ab[2][6] ) );
  INVERT_H U95 ( .A(\ab[2][6] ), .Z(n39) );
  AND2_H U96 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U97 ( .A(A[2]), .Z(n42) );
  INVERT_H U98 ( .A(A[1]), .Z(n43) );
  XOR2_C U99 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U100 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U101 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U102 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U103 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U104 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U105 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U106 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U107 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U108 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U109 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U110 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U111 ( .A(\CARRYB[3][7] ), .Z(n40) );
endmodule


module dsp_slice_58 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_58_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_58_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_57_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_57_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_E U3 ( .A(n4), .Z(n27) );
  AO21_F U4 ( .A1(n32), .A2(n17), .B(n6), .Z(n1) );
  AO21_F U5 ( .A1(n34), .A2(n56), .B(n26), .Z(n2) );
  XOR2_B U6 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U7 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U8 ( .A(n54), .Z(n3) );
  OA21_H U9 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U10 ( .A(n41), .B(n29), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U12 ( .A(n57), .Z(n4) );
  INVERT_H U13 ( .A(n46), .Z(n5) );
  INVERT_H U14 ( .A(n5), .Z(n6) );
  AND2_I U15 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U16 ( .A(n18), .Z(n16) );
  INVERT_E U17 ( .A(n19), .Z(n7) );
  INVERT_H U18 ( .A(n7), .Z(n8) );
  INVERT_E U19 ( .A(n21), .Z(n9) );
  INVERT_H U20 ( .A(n9), .Z(n10) );
  INVERT_E U21 ( .A(n27), .Z(n25) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  INVERT_E U24 ( .A(n47), .Z(n32) );
  INVERT_E U25 ( .A(n58), .Z(n34) );
  INVERT_H U26 ( .A(n13), .Z(n14) );
  INVERT_E U27 ( .A(n15), .Z(n13) );
  NAND2_E U28 ( .A(n33), .B(n14), .Z(n52) );
  AO21_E U29 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U30 ( .A(n55), .B(n11), .Z(SUM[4]) );
  NOR2_C U31 ( .A(n8), .B(n53), .Z(n55) );
  XOR2_B U32 ( .A(B[8]), .B(A[8]), .Z(n41) );
  INVERT_D U33 ( .A(B[2]), .Z(n36) );
  CLKI_O U34 ( .A(n28), .Z(n29) );
  INVERT_H U35 ( .A(n2), .Z(n11) );
  INVERT_H U36 ( .A(n1), .Z(n12) );
  AND2_H U37 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_D U38 ( .A(n51), .Z(n15) );
  INVERT_F U39 ( .A(n16), .Z(n17) );
  OA21_F U40 ( .A1(n49), .A2(n22), .B(n14), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n18) );
  INVERT_D U42 ( .A(n3), .Z(n19) );
  INVERT_F U43 ( .A(n8), .Z(n20) );
  INVERT_D U44 ( .A(n50), .Z(n21) );
  INVERT_F U45 ( .A(n10), .Z(n22) );
  OA21_F U46 ( .A1(n53), .A2(n11), .B(n20), .Z(n50) );
  NOR2_E U47 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_E U48 ( .A(n36), .Z(n23) );
  INVERT_H U49 ( .A(n23), .Z(n24) );
  INVERT_F U50 ( .A(n25), .Z(n26) );
  OA21_F U51 ( .A1(n42), .A2(n12), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n12), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n17), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n6), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n22), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n24), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n24), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_57_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] , \A1[0] , \A2[9] ,
         \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] , \A2[2] , n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n22), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n17), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_57_DW01_add_1 FS_1 ( .A({n36, n30, n28, n25, \A1[5] , \A1[4] , n23, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n11, n32, \A2[6] , n33, n19, 
        n24, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n9), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n7), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n37), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n31), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n3), .B(\CARRYB[2][6] ), .CIN(n5), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n13), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n20), .B(n15), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n20) );
  NOR2_D U5 ( .A(B[6]), .B(n37), .Z(n3) );
  NOR2_D U6 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  NOR2_D U7 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U8 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_H U9 ( .A(\A2[3] ), .Z(n24) );
  NAND2_E U10 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n4) );
  INVERT_H U12 ( .A(n4), .Z(n5) );
  INVERT_D U13 ( .A(\CARRYB[1][2] ), .Z(n6) );
  INVERT_E U14 ( .A(n6), .Z(n7) );
  INVERT_D U15 ( .A(\CARRYB[1][6] ), .Z(n8) );
  INVERT_E U16 ( .A(n8), .Z(n9) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n10) );
  INVERT_H U18 ( .A(n10), .Z(n11) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U20 ( .A(\CARRYB[1][1] ), .Z(n12) );
  INVERT_E U21 ( .A(n12), .Z(n13) );
  AND2_H U22 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U23 ( .A(\CARRYB[1][3] ), .Z(n14) );
  INVERT_E U24 ( .A(n14), .Z(n15) );
  AND2_H U25 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U26 ( .A(A[2]), .Z(n38) );
  INVERT_I U27 ( .A(n29), .Z(n30) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U29 ( .A(\CARRYB[1][4] ), .Z(n16) );
  INVERT_E U30 ( .A(n16), .Z(n17) );
  INVERT_H U31 ( .A(\A2[4] ), .Z(n18) );
  INVERT_H U32 ( .A(n18), .Z(n19) );
  AND2_I U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U34 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U35 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  NOR2_D U36 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  INVERT_N U37 ( .A(ZA), .Z(n37) );
  INVERT_D U38 ( .A(\CARRYB[1][0] ), .Z(n21) );
  INVERT_E U39 ( .A(n21), .Z(n22) );
  AND2_H U40 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_D U41 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U42 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  INVERT_H U43 ( .A(n2), .Z(n23) );
  INVERT_I U44 ( .A(B[0]), .Z(n48) );
  NOR2_E U45 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  NOR2_E U46 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  NOR2_E U47 ( .A(n26), .B(n39), .Z(\ab[1][4] ) );
  INVERT_M U48 ( .A(A[1]), .Z(n39) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U54 ( .A(n40), .B(n47), .Z(\ab[0][1] ) );
  NOR2_E U55 ( .A(n45), .B(n40), .Z(\ab[0][3] ) );
  NOR2_E U56 ( .A(n40), .B(n46), .Z(\ab[0][2] ) );
  INVERT_M U57 ( .A(A[0]), .Z(n40) );
  INVERT_I U58 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U59 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_H U60 ( .A(B[4]), .Z(n26) );
  INVERT_H U61 ( .A(B[4]), .Z(n44) );
  INVERT_I U62 ( .A(B[2]), .Z(n46) );
  INVERT_H U63 ( .A(\A1[7] ), .Z(n27) );
  INVERT_I U64 ( .A(n27), .Z(n28) );
  NOR2_E U65 ( .A(n42), .B(n39), .Z(\ab[1][6] ) );
  INVERT_H U66 ( .A(\A1[8] ), .Z(n29) );
  NOR2_D U67 ( .A(n38), .B(n26), .Z(\ab[2][4] ) );
  AND2_H U68 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U69 ( .A(n43), .B(n40), .Z(\ab[0][5] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][5] ), .Z(n31) );
  INVERT_I U71 ( .A(B[5]), .Z(n43) );
  NOR2_E U72 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U73 ( .A(n42), .B(n40), .Z(\ab[0][6] ) );
  AND2_H U74 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U75 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U76 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n41) );
  NOR2_D U79 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U81 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  NAND2_E U82 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U83 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U84 ( .A(\A2[5] ), .Z(n33) );
  NOR2_D U85 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U86 ( .A(B[6]), .Z(n42) );
  OR2_I U87 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  AND2_H U88 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U89 ( .A(n48), .B(n40), .Z(PRODUCT[0]) );
  INVERT_H U90 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U91 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U92 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U93 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U94 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U97 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U98 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U99 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U100 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U101 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U102 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U103 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U104 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U105 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U106 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_57 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_57_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_57_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_I U7 ( .A(n4), .Z(n5) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_56_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_56_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n22), .Z(n20) );
  INVERT_D U3 ( .A(B[2]), .Z(n29) );
  INVERT_E U4 ( .A(n3), .Z(n19) );
  AO21_F U5 ( .A1(n24), .A2(n11), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n27), .A2(n49), .B(n18), .Z(n2) );
  XOR2_B U7 ( .A(n30), .B(n31), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n21), .B(B[8]), .Z(n33) );
  XOR2_B U9 ( .A(n34), .B(n21), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n50) );
  INVERT_D U11 ( .A(n50), .Z(n3) );
  INVERT_H U12 ( .A(n39), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n39) );
  INVERT_E U15 ( .A(n12), .Z(n10) );
  INVERT_E U16 ( .A(n13), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n19), .Z(n17) );
  NAND2BAL_E U19 ( .A(n23), .B(n36), .Z(n37) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n36) );
  NAND2BAL_E U21 ( .A(n25), .B(n44), .Z(n45) );
  NAND2_F U22 ( .A(B[5]), .B(A[5]), .Z(n44) );
  INVERT_E U23 ( .A(n40), .Z(n24) );
  INVERT_E U24 ( .A(n51), .Z(n27) );
  INVERT_F U25 ( .A(n47), .Z(n26) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n47) );
  AO21_E U27 ( .A1(n21), .A2(A[8]), .B(n33), .Z(n31) );
  XNOR2_C U28 ( .A(n48), .B(n8), .Z(SUM[4]) );
  NOR2_C U29 ( .A(n26), .B(n46), .Z(n48) );
  XOR2_B U30 ( .A(B[8]), .B(A[8]), .Z(n34) );
  CLKI_O U31 ( .A(n20), .Z(n21) );
  INVERT_H U32 ( .A(n2), .Z(n8) );
  INVERT_H U33 ( .A(n1), .Z(n9) );
  INVERT_F U34 ( .A(n10), .Z(n11) );
  OA21_F U35 ( .A1(n42), .A2(n14), .B(n44), .Z(n38) );
  INVERT_D U36 ( .A(n38), .Z(n12) );
  INVERT_D U37 ( .A(n43), .Z(n13) );
  INVERT_F U38 ( .A(n7), .Z(n14) );
  OA21_F U39 ( .A1(n46), .A2(n8), .B(n47), .Z(n43) );
  NOR2_E U40 ( .A(B[4]), .B(A[4]), .Z(n46) );
  INVERT_E U41 ( .A(n29), .Z(n15) );
  INVERT_H U42 ( .A(n15), .Z(n16) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  OA21_F U44 ( .A1(n35), .A2(n9), .B(n36), .Z(n32) );
  INVERT_D U45 ( .A(n32), .Z(n22) );
  XOR2_B U46 ( .A(n49), .B(n52), .Z(SUM[3]) );
  NOR2_C U47 ( .A(n18), .B(n51), .Z(n52) );
  NOR2_E U48 ( .A(B[3]), .B(A[3]), .Z(n51) );
  XOR2_B U49 ( .A(n37), .B(n9), .Z(SUM[7]) );
  INVERT_E U50 ( .A(n35), .Z(n23) );
  NOR2_E U51 ( .A(B[7]), .B(A[7]), .Z(n35) );
  XOR2_B U52 ( .A(n41), .B(n11), .Z(SUM[6]) );
  NOR2_C U53 ( .A(n5), .B(n40), .Z(n41) );
  NOR2_E U54 ( .A(B[6]), .B(A[6]), .Z(n40) );
  XOR2_B U55 ( .A(n45), .B(n14), .Z(SUM[5]) );
  INVERT_E U56 ( .A(n42), .Z(n25) );
  NOR2_E U57 ( .A(B[5]), .B(A[5]), .Z(n42) );
  NOR2_F U58 ( .A(n16), .B(n28), .Z(n49) );
  INVERT_H U59 ( .A(A[2]), .Z(n28) );
  XOR2_B U60 ( .A(B[9]), .B(A[9]), .Z(n30) );
  AOI21_A U61 ( .A1(n16), .A2(n28), .B(n49), .Z(SUM[2]) );
endmodule


module dsp_slice_56_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n8), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n12), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n16), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_56_DW01_add_1 FS_1 ( .A({n40, n34, n31, n32, \A1[5] , \A1[4] , n21, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n6, n36, \A2[6] , n35, n19, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n39), .B(n4), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n45), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n17), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_C S2_2_2 ( .A(\ab[2][2] ), .B(n37), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n32) );
  INVERT_H U3 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U4 ( .A(B[1]), .B(n41), .Z(\ab[3][1] ) );
  NOR2_D U5 ( .A(B[0]), .B(n41), .Z(\ab[3][0] ) );
  XNOR2_C U6 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_J U7 ( .A(n43), .Z(n23) );
  NOR2_D U8 ( .A(B[5]), .B(n41), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n41), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n41) );
  INVERT_I U11 ( .A(n18), .Z(n19) );
  INVERT_F U12 ( .A(n20), .Z(n18) );
  NOR2_D U13 ( .A(A[2]), .B(n45), .Z(\ab[2][7] ) );
  INVERT_D U14 ( .A(\CARRYB[1][6] ), .Z(n3) );
  INVERT_E U15 ( .A(n3), .Z(n4) );
  NAND2BAL_E U16 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n5) );
  INVERT_H U18 ( .A(n5), .Z(n6) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_I U21 ( .A(n33), .Z(n34) );
  AND2_H U22 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U23 ( .A(\CARRYB[1][0] ), .Z(n7) );
  INVERT_E U24 ( .A(n7), .Z(n8) );
  AND2_H U25 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U26 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U27 ( .A(n9), .Z(n10) );
  AND2_H U28 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U29 ( .A(\CARRYB[1][3] ), .Z(n11) );
  INVERT_E U30 ( .A(n11), .Z(n12) );
  AND2_H U31 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U32 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U33 ( .A(n13), .Z(n14) );
  AND2_H U34 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U35 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U36 ( .A(n15), .Z(n16) );
  AND2_H U37 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U38 ( .A(\ab[3][6] ), .Z(n17) );
  INVERT_I U39 ( .A(n23), .Z(n24) );
  BUFFER_H U40 ( .A(\A2[4] ), .Z(n20) );
  AND2_H U41 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U42 ( .A(n2), .Z(n21) );
  NOR2_E U43 ( .A(n46), .B(n25), .Z(\ab[1][6] ) );
  INVERT_I U44 ( .A(n23), .Z(n25) );
  XOR2_D U45 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_K U46 ( .A(n27), .Z(n29) );
  NOR2_D U47 ( .A(n29), .B(n52), .Z(\ab[2][0] ) );
  NOR2_E U48 ( .A(n25), .B(n52), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n52) );
  NOR2_D U50 ( .A(n28), .B(n51), .Z(\ab[2][1] ) );
  NOR2_E U51 ( .A(n26), .B(n51), .Z(\ab[1][1] ) );
  INVERT_I U52 ( .A(B[1]), .Z(n51) );
  NOR2_E U53 ( .A(n47), .B(n24), .Z(\ab[1][5] ) );
  NOR2_D U54 ( .A(n29), .B(n47), .Z(\ab[2][5] ) );
  INVERT_I U55 ( .A(B[5]), .Z(n47) );
  NOR2_E U56 ( .A(n48), .B(n25), .Z(\ab[1][4] ) );
  NOR2_D U57 ( .A(n29), .B(n48), .Z(\ab[2][4] ) );
  INVERT_I U58 ( .A(B[4]), .Z(n48) );
  NOR2_E U59 ( .A(n49), .B(n24), .Z(\ab[1][3] ) );
  NOR2_D U60 ( .A(n29), .B(n49), .Z(\ab[2][3] ) );
  INVERT_I U61 ( .A(B[3]), .Z(n49) );
  NOR2_C U62 ( .A(n28), .B(n50), .Z(\ab[2][2] ) );
  NOR2_E U63 ( .A(n24), .B(n50), .Z(\ab[1][2] ) );
  INVERT_I U64 ( .A(B[2]), .Z(n50) );
  INVERT_F U65 ( .A(n23), .Z(n26) );
  INVERT_I U66 ( .A(n42), .Z(n27) );
  INVERT_H U67 ( .A(n27), .Z(n28) );
  NOR2_E U68 ( .A(n48), .B(n44), .Z(\ab[0][4] ) );
  NOR2_E U69 ( .A(n47), .B(n44), .Z(\ab[0][5] ) );
  NOR2_E U70 ( .A(n49), .B(n44), .Z(\ab[0][3] ) );
  NOR2_E U71 ( .A(n44), .B(n50), .Z(\ab[0][2] ) );
  NOR2_E U72 ( .A(n44), .B(n51), .Z(\ab[0][1] ) );
  NOR2_E U73 ( .A(n46), .B(n44), .Z(\ab[0][6] ) );
  INVERT_M U74 ( .A(A[0]), .Z(n44) );
  AND2_H U75 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U76 ( .A(\A2[5] ), .Z(n35) );
  INVERT_I U77 ( .A(\A2[7] ), .Z(n36) );
  INVERT_H U78 ( .A(\A1[7] ), .Z(n30) );
  INVERT_I U79 ( .A(n30), .Z(n31) );
  INVERT_H U80 ( .A(\A1[8] ), .Z(n33) );
  NOR2_D U81 ( .A(n45), .B(n41), .Z(\ab[3][7] ) );
  NOR2_E U82 ( .A(A[0]), .B(n45), .Z(\ab[0][7] ) );
  INVERT_K U83 ( .A(ZB), .Z(n45) );
  NOR2_D U84 ( .A(B[4]), .B(n41), .Z(\ab[3][4] ) );
  NOR2_D U85 ( .A(B[2]), .B(n41), .Z(\ab[3][2] ) );
  OR2_I U86 ( .A(A[1]), .B(n45), .Z(\ab[1][7] ) );
  NAND2_E U87 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U88 ( .A(n44), .B(n52), .Z(PRODUCT[0]) );
  NOR2_D U89 ( .A(B[3]), .B(n41), .Z(\ab[3][3] ) );
  INVERT_I U90 ( .A(B[6]), .Z(n46) );
  NAND2_E U91 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][2] ), .Z(n37) );
  INVERT_H U93 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U94 ( .A(n29), .B(n46), .Z(\ab[2][6] ) );
  INVERT_H U95 ( .A(\ab[2][6] ), .Z(n39) );
  AND2_H U96 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U97 ( .A(A[2]), .Z(n42) );
  INVERT_H U98 ( .A(A[1]), .Z(n43) );
  XOR2_C U99 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U100 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U101 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U102 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U103 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U104 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U105 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U106 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U107 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U108 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U109 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U110 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U111 ( .A(\CARRYB[3][7] ), .Z(n40) );
endmodule


module dsp_slice_56 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_56_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_56_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_55_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_55_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n29), .Z(n27) );
  INVERT_D U3 ( .A(B[2]), .Z(n35) );
  AO21_F U4 ( .A1(n31), .A2(n15), .B(n5), .Z(n1) );
  AO21_F U5 ( .A1(n33), .A2(n55), .B(n26), .Z(n2) );
  AND2_H U6 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_D U7 ( .A(n53), .Z(n3) );
  OA21_H U8 ( .A1(A[8]), .A2(n28), .B(B[8]), .Z(n39) );
  XOR2_B U9 ( .A(n40), .B(n28), .Z(SUM[8]) );
  INVERT_H U10 ( .A(n45), .Z(n4) );
  INVERT_H U11 ( .A(n4), .Z(n5) );
  AND2_I U12 ( .A(B[6]), .B(A[6]), .Z(n45) );
  INVERT_E U13 ( .A(n16), .Z(n14) );
  INVERT_E U14 ( .A(n17), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  INVERT_E U16 ( .A(n19), .Z(n8) );
  INVERT_H U17 ( .A(n8), .Z(n9) );
  INVERT_F U18 ( .A(n23), .Z(n21) );
  BUFFER_H U19 ( .A(n52), .Z(n23) );
  NAND2BAL_E U20 ( .A(n30), .B(n42), .Z(n43) );
  NAND2_F U21 ( .A(B[7]), .B(A[7]), .Z(n42) );
  NAND2BAL_E U22 ( .A(n32), .B(n50), .Z(n51) );
  NAND2_F U23 ( .A(B[5]), .B(A[5]), .Z(n50) );
  INVERT_E U24 ( .A(n46), .Z(n31) );
  INVERT_E U25 ( .A(n57), .Z(n33) );
  XOR2_E U26 ( .A(B[9]), .B(A[9]), .Z(n36) );
  INVERT_D U27 ( .A(n37), .Z(n10) );
  INVERT_E U28 ( .A(n10), .Z(n11) );
  AO21_E U29 ( .A1(n28), .A2(A[8]), .B(n39), .Z(n37) );
  XOR2_C U30 ( .A(n36), .B(n11), .Z(SUM[9]) );
  XNOR2_C U31 ( .A(n54), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n7), .B(n22), .Z(n54) );
  NAND2_E U33 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U34 ( .A(B[8]), .B(A[8]), .Z(n40) );
  CLKI_O U35 ( .A(n27), .Z(n28) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_H U37 ( .A(n2), .Z(n12) );
  INVERT_H U38 ( .A(n1), .Z(n13) );
  INVERT_F U39 ( .A(n14), .Z(n15) );
  OA21_F U40 ( .A1(n48), .A2(n20), .B(n50), .Z(n44) );
  INVERT_D U41 ( .A(n44), .Z(n16) );
  INVERT_D U42 ( .A(n3), .Z(n17) );
  INVERT_F U43 ( .A(n7), .Z(n18) );
  INVERT_D U44 ( .A(n49), .Z(n19) );
  INVERT_F U45 ( .A(n9), .Z(n20) );
  OA21_F U46 ( .A1(n22), .A2(n12), .B(n18), .Z(n49) );
  INVERT_F U47 ( .A(n21), .Z(n22) );
  INVERT_E U48 ( .A(n35), .Z(n24) );
  INVERT_H U49 ( .A(n24), .Z(n25) );
  INVERT_F U50 ( .A(n56), .Z(n26) );
  OA21_F U51 ( .A1(n41), .A2(n13), .B(n42), .Z(n38) );
  INVERT_D U52 ( .A(n38), .Z(n29) );
  XOR2_B U53 ( .A(n55), .B(n58), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n57), .Z(n58) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n57) );
  XOR2_B U56 ( .A(n43), .B(n13), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n41), .Z(n30) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n41) );
  XOR2_B U59 ( .A(n47), .B(n15), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n5), .B(n46), .Z(n47) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n46) );
  XOR2_B U62 ( .A(n51), .B(n20), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n48), .Z(n32) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n48) );
  NOR2_F U65 ( .A(n25), .B(n34), .Z(n55) );
  INVERT_H U66 ( .A(A[2]), .Z(n34) );
  AOI21_A U67 ( .A1(n25), .A2(n34), .B(n55), .Z(SUM[2]) );
endmodule


module dsp_slice_55_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_55_DW01_add_1 FS_1 ( .A({n31, n15, n21, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n26, \A2[6] , 
        n27, \A2[4] , n9, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_D S14_7 ( .A(n32), .B(n19), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S3_2_6 ( .A(n30), .B(\CARRYB[1][6] ), .CIN(n29), .COUT(\CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n5), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n25), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n24), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n23), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n22), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n28) );
  NOR2_D U3 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  NOR2_D U4 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NOR2_D U5 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U6 ( .A(n19), .B(n32), .Z(\ab[3][7] ) );
  INVERT_N U7 ( .A(ZA), .Z(n32) );
  INVERT_E U8 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U9 ( .A(n2), .Z(n3) );
  INVERT_F U10 ( .A(B[6]), .Z(n18) );
  INVERT_D U11 ( .A(\CARRYB[1][2] ), .Z(n4) );
  INVERT_E U12 ( .A(n4), .Z(n5) );
  AND2_I U13 ( .A(\ab[1][6] ), .B(n13), .Z(\CARRYB[1][6] ) );
  INVERT_H U14 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  AND2_I U16 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U17 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  AND2_H U18 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  AND2_H U19 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_I U20 ( .A(n8), .Z(n9) );
  CLKI_O U21 ( .A(n14), .Z(n15) );
  AND2_H U22 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U23 ( .A(n33), .B(n39), .Z(\ab[2][2] ) );
  NOR2_D U24 ( .A(n33), .B(n37), .Z(\ab[2][4] ) );
  INVERT_H U25 ( .A(\A2[3] ), .Z(n8) );
  AND2_I U26 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  XOR2_D U27 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U28 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U29 ( .A(n10), .Z(n11) );
  AND2_H U30 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U31 ( .A(A[2]), .Z(n33) );
  NOR2_D U32 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  XOR2_D U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  AND2_J U34 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_E U35 ( .A(\ab[0][7] ), .Z(n12) );
  INVERT_H U36 ( .A(n12), .Z(n13) );
  XOR2_B U37 ( .A(n13), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_E U38 ( .A(n17), .B(n34), .Z(\ab[1][6] ) );
  CLKI_K U39 ( .A(\A1[8] ), .Z(n14) );
  XOR2_B U40 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  INVERT_I U41 ( .A(B[4]), .Z(n37) );
  NOR2_D U42 ( .A(n33), .B(n38), .Z(\ab[2][3] ) );
  INVERT_I U43 ( .A(B[3]), .Z(n38) );
  INVERT_F U44 ( .A(n18), .Z(n16) );
  INVERT_I U45 ( .A(n16), .Z(n17) );
  INVERT_K U46 ( .A(ZB), .Z(n19) );
  NOR2_E U47 ( .A(n37), .B(n35), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n35), .B(n39), .Z(\ab[0][2] ) );
  NOR2_E U49 ( .A(n38), .B(n35), .Z(\ab[0][3] ) );
  NOR2_E U50 ( .A(n36), .B(n35), .Z(\ab[0][5] ) );
  NOR2_E U51 ( .A(n17), .B(n35), .Z(\ab[0][6] ) );
  INVERT_M U52 ( .A(A[0]), .Z(n35) );
  NOR2_E U53 ( .A(n38), .B(n34), .Z(\ab[1][3] ) );
  NOR2_E U54 ( .A(n34), .B(n39), .Z(\ab[1][2] ) );
  NOR2_E U55 ( .A(n41), .B(n34), .Z(\ab[1][0] ) );
  NOR2_E U56 ( .A(n37), .B(n34), .Z(\ab[1][4] ) );
  NOR2_E U57 ( .A(n36), .B(n34), .Z(\ab[1][5] ) );
  INVERT_M U58 ( .A(A[1]), .Z(n34) );
  INVERT_I U59 ( .A(\A2[7] ), .Z(n26) );
  INVERT_H U60 ( .A(\A1[7] ), .Z(n20) );
  INVERT_I U61 ( .A(n20), .Z(n21) );
  NOR2_D U62 ( .A(n33), .B(n41), .Z(\ab[2][0] ) );
  INVERT_I U63 ( .A(B[0]), .Z(n41) );
  INVERT_I U64 ( .A(B[5]), .Z(n36) );
  NOR2_D U65 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  BUFFER_H U66 ( .A(\CARRYB[1][0] ), .Z(n22) );
  NOR2_E U67 ( .A(n40), .B(n35), .Z(\ab[0][1] ) );
  AND2_H U68 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  BUFFER_H U69 ( .A(\CARRYB[1][4] ), .Z(n23) );
  INVERT_I U70 ( .A(B[2]), .Z(n39) );
  BUFFER_H U71 ( .A(\CARRYB[1][5] ), .Z(n24) );
  NOR2_D U72 ( .A(n33), .B(n36), .Z(\ab[2][5] ) );
  BUFFER_H U73 ( .A(\CARRYB[1][1] ), .Z(n25) );
  INVERT_I U74 ( .A(B[1]), .Z(n40) );
  NOR2_E U75 ( .A(n40), .B(n34), .Z(\ab[1][1] ) );
  NOR2_C U76 ( .A(n33), .B(n40), .Z(\ab[2][1] ) );
  AND2_H U77 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  NOR2_D U78 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  NOR2_C U79 ( .A(A[2]), .B(n19), .Z(\ab[2][7] ) );
  NAND2_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_L U81 ( .A(\A2[5] ), .Z(n27) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U83 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  OR2_I U84 ( .A(A[1]), .B(n19), .Z(\ab[1][7] ) );
  AND2_H U85 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U86 ( .A(n41), .B(n35), .Z(PRODUCT[0]) );
  INVERT_H U87 ( .A(\ab[1][7] ), .Z(n29) );
  OR2_J U88 ( .A(n33), .B(n17), .Z(\ab[2][6] ) );
  INVERT_H U89 ( .A(\ab[2][6] ), .Z(n30) );
  NOR2_C U90 ( .A(A[0]), .B(n19), .Z(\ab[0][7] ) );
  XOR2_C U91 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U92 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U93 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U94 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U95 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U96 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U97 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U98 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U99 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_55 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_55_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_55_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_I U6 ( .A(n12), .Z(n13) );
  INVERT_I U7 ( .A(n4), .Z(n5) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_54_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_54_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_54_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_54_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_54 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_54_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_54_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_53_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_53_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n26), .Z(n24) );
  INVERT_E U3 ( .A(n3), .Z(n23) );
  AO21_F U4 ( .A1(n28), .A2(n13), .B(n7), .Z(n1) );
  NOR2_D U5 ( .A(B[4]), .B(A[4]), .Z(n49) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n22), .Z(n2) );
  INVERT_H U7 ( .A(n50), .Z(n4) );
  XOR2_B U8 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n25), .B(B[8]), .Z(n36) );
  XOR2_B U10 ( .A(n37), .B(n25), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U12 ( .A(n53), .Z(n3) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  INVERT_H U14 ( .A(n42), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U17 ( .A(n14), .Z(n12) );
  INVERT_E U18 ( .A(n15), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n49), .Z(n17) );
  INVERT_E U21 ( .A(n23), .Z(n21) );
  NAND2BAL_E U22 ( .A(n27), .B(n39), .Z(n40) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n39) );
  NAND2BAL_E U24 ( .A(n29), .B(n47), .Z(n48) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_E U26 ( .A(n43), .Z(n28) );
  INVERT_E U27 ( .A(n54), .Z(n30) );
  AO21_E U28 ( .A1(n25), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n10), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n4), .B(n18), .Z(n51) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  INVERT_D U32 ( .A(B[2]), .Z(n32) );
  CLKI_O U33 ( .A(n24), .Z(n25) );
  INVERT_H U34 ( .A(n2), .Z(n10) );
  INVERT_H U35 ( .A(n1), .Z(n11) );
  INVERT_F U36 ( .A(n12), .Z(n13) );
  OA21_F U37 ( .A1(n45), .A2(n16), .B(n47), .Z(n41) );
  INVERT_D U38 ( .A(n41), .Z(n14) );
  NAND2BAL_E U39 ( .A(B[4]), .B(A[4]), .Z(n50) );
  INVERT_D U40 ( .A(n46), .Z(n15) );
  INVERT_F U41 ( .A(n9), .Z(n16) );
  OA21_F U42 ( .A1(n18), .A2(n10), .B(n5), .Z(n46) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  INVERT_E U44 ( .A(n32), .Z(n19) );
  INVERT_H U45 ( .A(n19), .Z(n20) );
  INVERT_F U46 ( .A(n21), .Z(n22) );
  OA21_F U47 ( .A1(n38), .A2(n11), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n26) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n22), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n11), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n27) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n13), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n7), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n16), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n29) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n20), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n20), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_53_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_53_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n16, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n10), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n14), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  OR2_I U14 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U15 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U16 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U17 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U18 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U19 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U20 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  INVERT_D U21 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U22 ( .A(n5), .Z(n6) );
  NAND2BAL_E U23 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U24 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U25 ( .A(n7), .Z(n8) );
  AND2_I U26 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U27 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U28 ( .A(\CARRYB[1][0] ), .Z(n9) );
  INVERT_E U29 ( .A(n9), .Z(n10) );
  AND2_H U30 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U32 ( .A(n11), .Z(n12) );
  AND2_H U33 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n13) );
  INVERT_E U35 ( .A(n13), .Z(n14) );
  AND2_H U36 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_H U37 ( .A(\A2[4] ), .Z(n15) );
  INVERT_H U38 ( .A(n15), .Z(n16) );
  AND2_I U39 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U40 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_53 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_53_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_53_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_52_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_52_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_52_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_52_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_52 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_52_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_52_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_51_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_51_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n26), .Z(n24) );
  INVERT_E U3 ( .A(n3), .Z(n23) );
  AO21_F U4 ( .A1(n28), .A2(n13), .B(n7), .Z(n1) );
  NOR2_D U5 ( .A(B[4]), .B(A[4]), .Z(n49) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n22), .Z(n2) );
  INVERT_H U7 ( .A(n50), .Z(n4) );
  XOR2_B U8 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n25), .B(B[8]), .Z(n36) );
  XOR2_B U10 ( .A(n37), .B(n25), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U12 ( .A(n53), .Z(n3) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  INVERT_H U14 ( .A(n42), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U17 ( .A(n14), .Z(n12) );
  INVERT_E U18 ( .A(n15), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n49), .Z(n17) );
  INVERT_E U21 ( .A(n23), .Z(n21) );
  NAND2BAL_E U22 ( .A(n27), .B(n39), .Z(n40) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n39) );
  NAND2BAL_E U24 ( .A(n29), .B(n47), .Z(n48) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_E U26 ( .A(n43), .Z(n28) );
  INVERT_E U27 ( .A(n54), .Z(n30) );
  AO21_E U28 ( .A1(n25), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n10), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n4), .B(n18), .Z(n51) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  INVERT_D U32 ( .A(B[2]), .Z(n32) );
  CLKI_O U33 ( .A(n24), .Z(n25) );
  INVERT_H U34 ( .A(n2), .Z(n10) );
  INVERT_H U35 ( .A(n1), .Z(n11) );
  INVERT_F U36 ( .A(n12), .Z(n13) );
  OA21_F U37 ( .A1(n45), .A2(n16), .B(n47), .Z(n41) );
  INVERT_D U38 ( .A(n41), .Z(n14) );
  NAND2BAL_E U39 ( .A(B[4]), .B(A[4]), .Z(n50) );
  INVERT_D U40 ( .A(n46), .Z(n15) );
  INVERT_F U41 ( .A(n9), .Z(n16) );
  OA21_F U42 ( .A1(n18), .A2(n10), .B(n5), .Z(n46) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  INVERT_E U44 ( .A(n32), .Z(n19) );
  INVERT_H U45 ( .A(n19), .Z(n20) );
  INVERT_F U46 ( .A(n21), .Z(n22) );
  OA21_F U47 ( .A1(n38), .A2(n11), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n26) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n22), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n11), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n27) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n13), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n7), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n16), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n29) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n20), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n20), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_51_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_51_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n16, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n10), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n14), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  OR2_I U14 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U15 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U16 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U17 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U18 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U19 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U20 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  INVERT_D U21 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U22 ( .A(n5), .Z(n6) );
  NAND2BAL_E U23 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U24 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U25 ( .A(n7), .Z(n8) );
  AND2_I U26 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U27 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U28 ( .A(\CARRYB[1][0] ), .Z(n9) );
  INVERT_E U29 ( .A(n9), .Z(n10) );
  AND2_H U30 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U32 ( .A(n11), .Z(n12) );
  AND2_H U33 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n13) );
  INVERT_E U35 ( .A(n13), .Z(n14) );
  AND2_H U36 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_H U37 ( .A(\A2[4] ), .Z(n15) );
  INVERT_H U38 ( .A(n15), .Z(n16) );
  AND2_I U39 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U40 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_51 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_51_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_51_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_50_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_50_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_50_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_50_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_50 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_50_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_50_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_49_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_49_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n26), .Z(n24) );
  INVERT_E U3 ( .A(n3), .Z(n23) );
  AO21_F U4 ( .A1(n28), .A2(n13), .B(n7), .Z(n1) );
  NOR2_D U5 ( .A(B[4]), .B(A[4]), .Z(n49) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n22), .Z(n2) );
  INVERT_H U7 ( .A(n50), .Z(n4) );
  XOR2_B U8 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n25), .B(B[8]), .Z(n36) );
  XOR2_B U10 ( .A(n37), .B(n25), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U12 ( .A(n53), .Z(n3) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  INVERT_H U14 ( .A(n42), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U17 ( .A(n14), .Z(n12) );
  INVERT_E U18 ( .A(n15), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n49), .Z(n17) );
  INVERT_E U21 ( .A(n23), .Z(n21) );
  NAND2BAL_E U22 ( .A(n27), .B(n39), .Z(n40) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n39) );
  NAND2BAL_E U24 ( .A(n29), .B(n47), .Z(n48) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_E U26 ( .A(n43), .Z(n28) );
  INVERT_E U27 ( .A(n54), .Z(n30) );
  AO21_E U28 ( .A1(n25), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n10), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n4), .B(n18), .Z(n51) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  INVERT_D U32 ( .A(B[2]), .Z(n32) );
  CLKI_O U33 ( .A(n24), .Z(n25) );
  INVERT_H U34 ( .A(n2), .Z(n10) );
  INVERT_H U35 ( .A(n1), .Z(n11) );
  INVERT_F U36 ( .A(n12), .Z(n13) );
  OA21_F U37 ( .A1(n45), .A2(n16), .B(n47), .Z(n41) );
  INVERT_D U38 ( .A(n41), .Z(n14) );
  NAND2BAL_E U39 ( .A(B[4]), .B(A[4]), .Z(n50) );
  INVERT_D U40 ( .A(n46), .Z(n15) );
  INVERT_F U41 ( .A(n9), .Z(n16) );
  OA21_F U42 ( .A1(n18), .A2(n10), .B(n5), .Z(n46) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  INVERT_E U44 ( .A(n32), .Z(n19) );
  INVERT_H U45 ( .A(n19), .Z(n20) );
  INVERT_F U46 ( .A(n21), .Z(n22) );
  OA21_F U47 ( .A1(n38), .A2(n11), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n26) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n22), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n11), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n27) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n13), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n7), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n16), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n29) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n20), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n20), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_49_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_49_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n16, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n10), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n14), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  OR2_I U14 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U15 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U16 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U17 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U18 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U19 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U20 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  INVERT_D U21 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U22 ( .A(n5), .Z(n6) );
  NAND2BAL_E U23 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U24 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U25 ( .A(n7), .Z(n8) );
  AND2_I U26 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U27 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U28 ( .A(\CARRYB[1][0] ), .Z(n9) );
  INVERT_E U29 ( .A(n9), .Z(n10) );
  AND2_H U30 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U32 ( .A(n11), .Z(n12) );
  AND2_H U33 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n13) );
  INVERT_E U35 ( .A(n13), .Z(n14) );
  AND2_H U36 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_H U37 ( .A(\A2[4] ), .Z(n15) );
  INVERT_H U38 ( .A(n15), .Z(n16) );
  AND2_I U39 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U40 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_49 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_49_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_49_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_48_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_48_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_48_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_48_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_48 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_48_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_48_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_47_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_47_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n26), .Z(n24) );
  INVERT_E U3 ( .A(n3), .Z(n23) );
  AO21_F U4 ( .A1(n28), .A2(n13), .B(n7), .Z(n1) );
  NOR2_D U5 ( .A(B[4]), .B(A[4]), .Z(n49) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n22), .Z(n2) );
  INVERT_H U7 ( .A(n50), .Z(n4) );
  XOR2_B U8 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n25), .B(B[8]), .Z(n36) );
  XOR2_B U10 ( .A(n37), .B(n25), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U12 ( .A(n53), .Z(n3) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  INVERT_H U14 ( .A(n42), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U17 ( .A(n14), .Z(n12) );
  INVERT_E U18 ( .A(n15), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n49), .Z(n17) );
  INVERT_E U21 ( .A(n23), .Z(n21) );
  NAND2BAL_E U22 ( .A(n27), .B(n39), .Z(n40) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n39) );
  NAND2BAL_E U24 ( .A(n29), .B(n47), .Z(n48) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_E U26 ( .A(n43), .Z(n28) );
  INVERT_E U27 ( .A(n54), .Z(n30) );
  AO21_E U28 ( .A1(n25), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n10), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n4), .B(n18), .Z(n51) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  INVERT_D U32 ( .A(B[2]), .Z(n32) );
  CLKI_O U33 ( .A(n24), .Z(n25) );
  INVERT_H U34 ( .A(n2), .Z(n10) );
  INVERT_H U35 ( .A(n1), .Z(n11) );
  INVERT_F U36 ( .A(n12), .Z(n13) );
  OA21_F U37 ( .A1(n45), .A2(n16), .B(n47), .Z(n41) );
  INVERT_D U38 ( .A(n41), .Z(n14) );
  NAND2BAL_E U39 ( .A(B[4]), .B(A[4]), .Z(n50) );
  INVERT_D U40 ( .A(n46), .Z(n15) );
  INVERT_F U41 ( .A(n9), .Z(n16) );
  OA21_F U42 ( .A1(n18), .A2(n10), .B(n5), .Z(n46) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  INVERT_E U44 ( .A(n32), .Z(n19) );
  INVERT_H U45 ( .A(n19), .Z(n20) );
  INVERT_F U46 ( .A(n21), .Z(n22) );
  OA21_F U47 ( .A1(n38), .A2(n11), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n26) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n22), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n11), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n27) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n13), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n7), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n16), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n29) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n20), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n20), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_47_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_47_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n16, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n10), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n14), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  OR2_I U14 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U15 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U16 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U17 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U18 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U19 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U20 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  INVERT_D U21 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U22 ( .A(n5), .Z(n6) );
  NAND2BAL_E U23 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U24 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U25 ( .A(n7), .Z(n8) );
  AND2_I U26 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U27 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U28 ( .A(\CARRYB[1][0] ), .Z(n9) );
  INVERT_E U29 ( .A(n9), .Z(n10) );
  AND2_H U30 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U32 ( .A(n11), .Z(n12) );
  AND2_H U33 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n13) );
  INVERT_E U35 ( .A(n13), .Z(n14) );
  AND2_H U36 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_H U37 ( .A(\A2[4] ), .Z(n15) );
  INVERT_H U38 ( .A(n15), .Z(n16) );
  AND2_I U39 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U40 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_47 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_47_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_47_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_46_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_46_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_46_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_46_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_46 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_46_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_46_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_45_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_45_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n26), .Z(n24) );
  INVERT_E U3 ( .A(n3), .Z(n23) );
  AO21_F U4 ( .A1(n28), .A2(n13), .B(n7), .Z(n1) );
  NOR2_D U5 ( .A(B[4]), .B(A[4]), .Z(n49) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n22), .Z(n2) );
  INVERT_H U7 ( .A(n50), .Z(n4) );
  XOR2_B U8 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n25), .B(B[8]), .Z(n36) );
  XOR2_B U10 ( .A(n37), .B(n25), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U12 ( .A(n53), .Z(n3) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  INVERT_H U14 ( .A(n42), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U17 ( .A(n14), .Z(n12) );
  INVERT_E U18 ( .A(n15), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n49), .Z(n17) );
  INVERT_E U21 ( .A(n23), .Z(n21) );
  NAND2BAL_E U22 ( .A(n27), .B(n39), .Z(n40) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n39) );
  NAND2BAL_E U24 ( .A(n29), .B(n47), .Z(n48) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_E U26 ( .A(n43), .Z(n28) );
  INVERT_E U27 ( .A(n54), .Z(n30) );
  AO21_E U28 ( .A1(n25), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n10), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n4), .B(n18), .Z(n51) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  INVERT_D U32 ( .A(B[2]), .Z(n32) );
  CLKI_O U33 ( .A(n24), .Z(n25) );
  INVERT_H U34 ( .A(n2), .Z(n10) );
  INVERT_H U35 ( .A(n1), .Z(n11) );
  INVERT_F U36 ( .A(n12), .Z(n13) );
  OA21_F U37 ( .A1(n45), .A2(n16), .B(n47), .Z(n41) );
  INVERT_D U38 ( .A(n41), .Z(n14) );
  NAND2BAL_E U39 ( .A(B[4]), .B(A[4]), .Z(n50) );
  INVERT_D U40 ( .A(n46), .Z(n15) );
  INVERT_F U41 ( .A(n9), .Z(n16) );
  OA21_F U42 ( .A1(n18), .A2(n10), .B(n5), .Z(n46) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  INVERT_E U44 ( .A(n32), .Z(n19) );
  INVERT_H U45 ( .A(n19), .Z(n20) );
  INVERT_F U46 ( .A(n21), .Z(n22) );
  OA21_F U47 ( .A1(n38), .A2(n11), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n26) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n22), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n11), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n27) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n13), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n7), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n16), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n29) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n20), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n20), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_45_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_45_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n16, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n10), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n14), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  OR2_I U14 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U15 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U16 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U17 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U18 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U19 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U20 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  INVERT_D U21 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U22 ( .A(n5), .Z(n6) );
  NAND2BAL_E U23 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U24 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U25 ( .A(n7), .Z(n8) );
  AND2_I U26 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U27 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U28 ( .A(\CARRYB[1][0] ), .Z(n9) );
  INVERT_E U29 ( .A(n9), .Z(n10) );
  AND2_H U30 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U32 ( .A(n11), .Z(n12) );
  AND2_H U33 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n13) );
  INVERT_E U35 ( .A(n13), .Z(n14) );
  AND2_H U36 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_H U37 ( .A(\A2[4] ), .Z(n15) );
  INVERT_H U38 ( .A(n15), .Z(n16) );
  AND2_I U39 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U40 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_45 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_45_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_45_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_44_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_44_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_44_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_44_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_44 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_44_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_44_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_43_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_43_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n26), .Z(n24) );
  INVERT_E U3 ( .A(n3), .Z(n23) );
  AO21_F U4 ( .A1(n28), .A2(n13), .B(n7), .Z(n1) );
  NOR2_D U5 ( .A(B[4]), .B(A[4]), .Z(n49) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n22), .Z(n2) );
  INVERT_H U7 ( .A(n50), .Z(n4) );
  XOR2_B U8 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n25), .B(B[8]), .Z(n36) );
  XOR2_B U10 ( .A(n37), .B(n25), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U12 ( .A(n53), .Z(n3) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  INVERT_H U14 ( .A(n42), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U17 ( .A(n14), .Z(n12) );
  INVERT_E U18 ( .A(n15), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n49), .Z(n17) );
  INVERT_E U21 ( .A(n23), .Z(n21) );
  NAND2BAL_E U22 ( .A(n27), .B(n39), .Z(n40) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n39) );
  NAND2BAL_E U24 ( .A(n29), .B(n47), .Z(n48) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_E U26 ( .A(n43), .Z(n28) );
  INVERT_E U27 ( .A(n54), .Z(n30) );
  AO21_E U28 ( .A1(n25), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n10), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n4), .B(n18), .Z(n51) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  INVERT_D U32 ( .A(B[2]), .Z(n32) );
  CLKI_O U33 ( .A(n24), .Z(n25) );
  INVERT_H U34 ( .A(n2), .Z(n10) );
  INVERT_H U35 ( .A(n1), .Z(n11) );
  INVERT_F U36 ( .A(n12), .Z(n13) );
  OA21_F U37 ( .A1(n45), .A2(n16), .B(n47), .Z(n41) );
  INVERT_D U38 ( .A(n41), .Z(n14) );
  NAND2BAL_E U39 ( .A(B[4]), .B(A[4]), .Z(n50) );
  INVERT_D U40 ( .A(n46), .Z(n15) );
  INVERT_F U41 ( .A(n9), .Z(n16) );
  OA21_F U42 ( .A1(n18), .A2(n10), .B(n5), .Z(n46) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  INVERT_E U44 ( .A(n32), .Z(n19) );
  INVERT_H U45 ( .A(n19), .Z(n20) );
  INVERT_F U46 ( .A(n21), .Z(n22) );
  OA21_F U47 ( .A1(n38), .A2(n11), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n26) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n22), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n11), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n27) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n13), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n7), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n16), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n29) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n20), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n20), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_43_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_43_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n16, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n10), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n14), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  OR2_I U14 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U15 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U16 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U17 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U18 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U19 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U20 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  INVERT_D U21 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U22 ( .A(n5), .Z(n6) );
  NAND2BAL_E U23 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U24 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U25 ( .A(n7), .Z(n8) );
  AND2_I U26 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U27 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U28 ( .A(\CARRYB[1][0] ), .Z(n9) );
  INVERT_E U29 ( .A(n9), .Z(n10) );
  AND2_H U30 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U32 ( .A(n11), .Z(n12) );
  AND2_H U33 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n13) );
  INVERT_E U35 ( .A(n13), .Z(n14) );
  AND2_H U36 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_H U37 ( .A(\A2[4] ), .Z(n15) );
  INVERT_H U38 ( .A(n15), .Z(n16) );
  AND2_I U39 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U40 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_43 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_43_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_43_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_42_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_42_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_42_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_42_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_42 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_42_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_42_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_41_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_41_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n26), .Z(n24) );
  INVERT_E U3 ( .A(n3), .Z(n23) );
  AO21_F U4 ( .A1(n28), .A2(n13), .B(n7), .Z(n1) );
  NOR2_D U5 ( .A(B[4]), .B(A[4]), .Z(n49) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n22), .Z(n2) );
  INVERT_H U7 ( .A(n50), .Z(n4) );
  XOR2_B U8 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n25), .B(B[8]), .Z(n36) );
  XOR2_B U10 ( .A(n37), .B(n25), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U12 ( .A(n53), .Z(n3) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  INVERT_H U14 ( .A(n42), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U17 ( .A(n14), .Z(n12) );
  INVERT_E U18 ( .A(n15), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n49), .Z(n17) );
  INVERT_E U21 ( .A(n23), .Z(n21) );
  NAND2BAL_E U22 ( .A(n27), .B(n39), .Z(n40) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n39) );
  NAND2BAL_E U24 ( .A(n29), .B(n47), .Z(n48) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_E U26 ( .A(n43), .Z(n28) );
  INVERT_E U27 ( .A(n54), .Z(n30) );
  AO21_E U28 ( .A1(n25), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n10), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n4), .B(n18), .Z(n51) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  INVERT_D U32 ( .A(B[2]), .Z(n32) );
  CLKI_O U33 ( .A(n24), .Z(n25) );
  INVERT_H U34 ( .A(n2), .Z(n10) );
  INVERT_H U35 ( .A(n1), .Z(n11) );
  INVERT_F U36 ( .A(n12), .Z(n13) );
  OA21_F U37 ( .A1(n45), .A2(n16), .B(n47), .Z(n41) );
  INVERT_D U38 ( .A(n41), .Z(n14) );
  NAND2BAL_E U39 ( .A(B[4]), .B(A[4]), .Z(n50) );
  INVERT_D U40 ( .A(n46), .Z(n15) );
  INVERT_F U41 ( .A(n9), .Z(n16) );
  OA21_F U42 ( .A1(n18), .A2(n10), .B(n5), .Z(n46) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  INVERT_E U44 ( .A(n32), .Z(n19) );
  INVERT_H U45 ( .A(n19), .Z(n20) );
  INVERT_F U46 ( .A(n21), .Z(n22) );
  OA21_F U47 ( .A1(n38), .A2(n11), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n26) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n22), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n11), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n27) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n13), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n7), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n16), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n29) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n20), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n20), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_41_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_41_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n16, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n10), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n14), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  OR2_I U14 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U15 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U16 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U17 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U18 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U19 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U20 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  INVERT_D U21 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U22 ( .A(n5), .Z(n6) );
  NAND2BAL_E U23 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U24 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U25 ( .A(n7), .Z(n8) );
  AND2_I U26 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U27 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U28 ( .A(\CARRYB[1][0] ), .Z(n9) );
  INVERT_E U29 ( .A(n9), .Z(n10) );
  AND2_H U30 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U32 ( .A(n11), .Z(n12) );
  AND2_H U33 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n13) );
  INVERT_E U35 ( .A(n13), .Z(n14) );
  AND2_H U36 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_H U37 ( .A(\A2[4] ), .Z(n15) );
  INVERT_H U38 ( .A(n15), .Z(n16) );
  AND2_I U39 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U40 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_41 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_41_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_41_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_40_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_40_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_40_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_40_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_40 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_40_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_40_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_39_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_39_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n29), .Z(n27) );
  INVERT_D U3 ( .A(B[2]), .Z(n35) );
  AO21_F U4 ( .A1(n31), .A2(n15), .B(n5), .Z(n1) );
  AO21_F U5 ( .A1(n33), .A2(n55), .B(n26), .Z(n2) );
  AND2_H U6 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_D U7 ( .A(n53), .Z(n3) );
  OA21_H U8 ( .A1(A[8]), .A2(n28), .B(B[8]), .Z(n39) );
  XOR2_B U9 ( .A(n40), .B(n28), .Z(SUM[8]) );
  INVERT_H U10 ( .A(n45), .Z(n4) );
  INVERT_H U11 ( .A(n4), .Z(n5) );
  AND2_I U12 ( .A(B[6]), .B(A[6]), .Z(n45) );
  INVERT_E U13 ( .A(n16), .Z(n14) );
  INVERT_E U14 ( .A(n17), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  INVERT_E U16 ( .A(n19), .Z(n8) );
  INVERT_H U17 ( .A(n8), .Z(n9) );
  INVERT_F U18 ( .A(n23), .Z(n21) );
  BUFFER_H U19 ( .A(n52), .Z(n23) );
  NAND2BAL_E U20 ( .A(n30), .B(n42), .Z(n43) );
  NAND2_F U21 ( .A(B[7]), .B(A[7]), .Z(n42) );
  NAND2BAL_E U22 ( .A(n32), .B(n50), .Z(n51) );
  NAND2_F U23 ( .A(B[5]), .B(A[5]), .Z(n50) );
  INVERT_E U24 ( .A(n46), .Z(n31) );
  INVERT_E U25 ( .A(n57), .Z(n33) );
  XOR2_E U26 ( .A(B[9]), .B(A[9]), .Z(n36) );
  INVERT_D U27 ( .A(n37), .Z(n10) );
  INVERT_E U28 ( .A(n10), .Z(n11) );
  AO21_E U29 ( .A1(n28), .A2(A[8]), .B(n39), .Z(n37) );
  XOR2_C U30 ( .A(n36), .B(n11), .Z(SUM[9]) );
  XNOR2_C U31 ( .A(n54), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n7), .B(n22), .Z(n54) );
  NAND2_E U33 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U34 ( .A(B[8]), .B(A[8]), .Z(n40) );
  CLKI_O U35 ( .A(n27), .Z(n28) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_H U37 ( .A(n2), .Z(n12) );
  INVERT_H U38 ( .A(n1), .Z(n13) );
  INVERT_F U39 ( .A(n14), .Z(n15) );
  OA21_F U40 ( .A1(n48), .A2(n20), .B(n50), .Z(n44) );
  INVERT_D U41 ( .A(n44), .Z(n16) );
  INVERT_D U42 ( .A(n3), .Z(n17) );
  INVERT_F U43 ( .A(n7), .Z(n18) );
  INVERT_D U44 ( .A(n49), .Z(n19) );
  INVERT_F U45 ( .A(n9), .Z(n20) );
  OA21_F U46 ( .A1(n22), .A2(n12), .B(n18), .Z(n49) );
  INVERT_F U47 ( .A(n21), .Z(n22) );
  INVERT_E U48 ( .A(n35), .Z(n24) );
  INVERT_H U49 ( .A(n24), .Z(n25) );
  INVERT_F U50 ( .A(n56), .Z(n26) );
  OA21_F U51 ( .A1(n41), .A2(n13), .B(n42), .Z(n38) );
  INVERT_D U52 ( .A(n38), .Z(n29) );
  XOR2_B U53 ( .A(n55), .B(n58), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n57), .Z(n58) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n57) );
  XOR2_B U56 ( .A(n43), .B(n13), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n41), .Z(n30) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n41) );
  XOR2_B U59 ( .A(n47), .B(n15), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n5), .B(n46), .Z(n47) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n46) );
  XOR2_B U62 ( .A(n51), .B(n20), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n48), .Z(n32) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n48) );
  NOR2_F U65 ( .A(n25), .B(n34), .Z(n55) );
  INVERT_H U66 ( .A(A[2]), .Z(n34) );
  AOI21_A U67 ( .A1(n25), .A2(n34), .B(n55), .Z(SUM[2]) );
endmodule


module dsp_slice_39_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(\CARRYB[1][1] ), .CIN(\SUMB[1][2] ), 
        .COUT(\CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_39_DW01_add_1 FS_1 ( .A({n33, n19, n23, \A1[6] , \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n27, \A2[6] , 
        n30, \A2[4] , n9, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_D S14_7 ( .A(n34), .B(n38), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n28), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n26), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n25), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n24), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  NOR2_D U2 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U3 ( .A(B[2]), .B(n34), .Z(\ab[3][2] ) );
  NOR2_D U4 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  INVERT_N U6 ( .A(ZA), .Z(n34) );
  INVERT_E U7 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U8 ( .A(n2), .Z(n3) );
  INVERT_D U9 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U10 ( .A(n4), .Z(n5) );
  INVERT_J U11 ( .A(B[1]), .Z(n44) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U13 ( .A(n6), .Z(n7) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  AND2_H U16 ( .A(n15), .B(n13), .Z(\CARRYB[1][4] ) );
  AND2_H U17 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_I U18 ( .A(n8), .Z(n9) );
  CLKI_O U19 ( .A(n18), .Z(n19) );
  AND2_H U20 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U21 ( .A(n35), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U22 ( .A(n35), .B(n40), .Z(\ab[2][5] ) );
  INVERT_H U23 ( .A(\A2[3] ), .Z(n8) );
  AND2_I U24 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  XOR2_D U25 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U26 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U27 ( .A(n10), .Z(n11) );
  AND2_H U28 ( .A(\ab[1][3] ), .B(n21), .Z(\CARRYB[1][3] ) );
  INVERT_M U29 ( .A(A[2]), .Z(n35) );
  INVERT_I U30 ( .A(B[4]), .Z(n41) );
  INVERT_I U31 ( .A(B[5]), .Z(n40) );
  XOR2_D U32 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  AND2_J U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_B U34 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\SUMB[1][1] ) );
  NOR2_F U35 ( .A(n44), .B(n36), .Z(\ab[1][1] ) );
  INVERT_E U36 ( .A(\ab[0][5] ), .Z(n12) );
  INVERT_H U37 ( .A(n12), .Z(n13) );
  INVERT_E U38 ( .A(\ab[1][4] ), .Z(n14) );
  INVERT_H U39 ( .A(n14), .Z(n15) );
  INVERT_E U40 ( .A(\ab[1][5] ), .Z(n16) );
  INVERT_H U41 ( .A(n16), .Z(n17) );
  NOR2_E U42 ( .A(n45), .B(n36), .Z(\ab[1][0] ) );
  CLKI_K U43 ( .A(\A1[8] ), .Z(n18) );
  XOR2_B U44 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  INVERT_E U45 ( .A(\ab[0][4] ), .Z(n20) );
  INVERT_F U46 ( .A(n20), .Z(n21) );
  NOR2_C U47 ( .A(n41), .B(n37), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n42), .B(n36), .Z(\ab[1][3] ) );
  NOR2_D U49 ( .A(n35), .B(n42), .Z(\ab[2][3] ) );
  NOR2_E U50 ( .A(n42), .B(n37), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n42) );
  INVERT_M U52 ( .A(A[0]), .Z(n37) );
  INVERT_I U53 ( .A(\A2[7] ), .Z(n27) );
  NOR2_D U54 ( .A(n35), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U55 ( .A(B[0]), .Z(n45) );
  XOR2_D U56 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_E U57 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_H U58 ( .A(\A1[7] ), .Z(n22) );
  INVERT_I U59 ( .A(n22), .Z(n23) );
  NOR2_E U60 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  INVERT_M U61 ( .A(A[1]), .Z(n36) );
  NOR2_D U62 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  BUFFER_H U63 ( .A(\CARRYB[1][0] ), .Z(n24) );
  AND2_H U64 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_D U65 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  INVERT_K U66 ( .A(ZB), .Z(n38) );
  NOR2_E U67 ( .A(n44), .B(n37), .Z(\ab[0][1] ) );
  BUFFER_H U68 ( .A(\CARRYB[1][4] ), .Z(n25) );
  NOR2_C U69 ( .A(n41), .B(n36), .Z(\ab[1][4] ) );
  NOR2_C U70 ( .A(n40), .B(n37), .Z(\ab[0][5] ) );
  BUFFER_H U71 ( .A(\CARRYB[1][5] ), .Z(n26) );
  NOR2_E U72 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  NOR2_C U73 ( .A(n40), .B(n36), .Z(\ab[1][5] ) );
  NOR2_D U74 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  INVERT_I U75 ( .A(B[6]), .Z(n39) );
  NAND2_E U76 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NOR2_D U77 ( .A(n35), .B(n44), .Z(\ab[2][1] ) );
  AND2_I U78 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  NOR2_E U79 ( .A(n43), .B(n37), .Z(\ab[0][2] ) );
  BUFFER_H U80 ( .A(\CARRYB[1][2] ), .Z(n28) );
  INVERT_I U81 ( .A(B[2]), .Z(n43) );
  NOR2_E U82 ( .A(n43), .B(n36), .Z(\ab[1][2] ) );
  NOR2_C U83 ( .A(n35), .B(n43), .Z(\ab[2][2] ) );
  AND2_H U84 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U85 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NOR2_C U86 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  OR2_I U87 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U88 ( .A(\A2[5] ), .Z(n29) );
  INVERT_I U89 ( .A(n29), .Z(n30) );
  AND2_I U90 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U91 ( .A(n45), .B(n37), .Z(PRODUCT[0]) );
  INVERT_H U92 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U93 ( .A(n35), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U94 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U95 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U96 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U97 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U98 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U99 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(n21), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(n13), .B(n15), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_39 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_39_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_39_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_I U6 ( .A(n4), .Z(n5) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERTBAL_J U8 ( .A(n12), .Z(n13) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_38_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_38_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n25), .Z(n23) );
  INVERT_D U3 ( .A(B[2]), .Z(n32) );
  INVERT_E U4 ( .A(n3), .Z(n22) );
  AO21_F U5 ( .A1(n27), .A2(n14), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n21), .Z(n2) );
  XOR2_B U7 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n24), .B(B[8]), .Z(n36) );
  XOR2_B U9 ( .A(n37), .B(n24), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U11 ( .A(n53), .Z(n3) );
  INVERT_H U12 ( .A(n42), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U15 ( .A(n15), .Z(n13) );
  INVERT_E U16 ( .A(n16), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n22), .Z(n20) );
  NAND2BAL_E U19 ( .A(n26), .B(n39), .Z(n40) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n39) );
  INVERT_E U21 ( .A(n43), .Z(n27) );
  INVERT_E U22 ( .A(n54), .Z(n30) );
  INVERT_H U23 ( .A(n10), .Z(n11) );
  INVERT_E U24 ( .A(n12), .Z(n10) );
  INVERT_F U25 ( .A(n50), .Z(n29) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n50) );
  NAND2_E U27 ( .A(n28), .B(n11), .Z(n48) );
  AO21_E U28 ( .A1(n24), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n8), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n29), .B(n49), .Z(n51) );
  XOR2_C U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  CLKI_O U32 ( .A(n23), .Z(n24) );
  INVERT_H U33 ( .A(n2), .Z(n8) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  AND2_H U35 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_D U36 ( .A(n47), .Z(n12) );
  INVERT_F U37 ( .A(n13), .Z(n14) );
  OA21_F U38 ( .A1(n45), .A2(n17), .B(n11), .Z(n41) );
  INVERT_D U39 ( .A(n41), .Z(n15) );
  INVERT_D U40 ( .A(n46), .Z(n16) );
  INVERT_F U41 ( .A(n7), .Z(n17) );
  OA21_F U42 ( .A1(n49), .A2(n8), .B(n50), .Z(n46) );
  NOR2_E U43 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_E U44 ( .A(n32), .Z(n18) );
  INVERT_H U45 ( .A(n18), .Z(n19) );
  INVERT_F U46 ( .A(n20), .Z(n21) );
  OA21_F U47 ( .A1(n38), .A2(n9), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n25) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n21), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n9), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n26) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n14), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n5), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n17), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n28) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n19), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n19), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_38_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(\CARRYB[1][4] ), .CIN(\SUMB[1][5] ), 
        .COUT(\CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_38_DW01_add_1 FS_1 ( .A({n36, n29, n27, n25, \A1[5] , \A1[4] , n20, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n21, n32, \A2[6] , n31, n16, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n6), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n33), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n41), .B(n37), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n30), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n8), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n11), .B(n10), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_E S5_6 ( .A(n12), .B(\CARRYB[2][6] ), .CIN(n4), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n11) );
  NOR2_D U5 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U8 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n37), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  INVERT_N U11 ( .A(ZA), .Z(n37) );
  OR2_J U12 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_I U13 ( .A(n15), .Z(n16) );
  INVERT_F U14 ( .A(n17), .Z(n15) );
  INVERT_H U15 ( .A(\A2[8] ), .Z(n21) );
  NAND2_E U16 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_E U17 ( .A(\ab[2][7] ), .Z(n3) );
  INVERT_H U18 ( .A(n3), .Z(n4) );
  INVERT_D U19 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U20 ( .A(n5), .Z(n6) );
  NAND2BAL_E U21 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_I U22 ( .A(n40), .Z(n23) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U24 ( .A(\CARRYB[1][1] ), .Z(n7) );
  INVERT_E U25 ( .A(n7), .Z(n8) );
  AND2_H U26 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U27 ( .A(\CARRYB[1][3] ), .Z(n9) );
  INVERT_E U28 ( .A(n9), .Z(n10) );
  AND2_H U29 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U30 ( .A(A[2]), .Z(n38) );
  INVERT_I U31 ( .A(n28), .Z(n29) );
  AND2_H U32 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U33 ( .A(A[0]), .Z(n40) );
  INVERT_E U34 ( .A(\ab[3][6] ), .Z(n12) );
  INVERT_D U35 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_E U38 ( .A(n39), .B(n42), .Z(\ab[1][6] ) );
  NOR2_D U39 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U40 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  BUFFER_H U41 ( .A(\A2[4] ), .Z(n17) );
  AND2_H U42 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U43 ( .A(\ab[1][4] ), .Z(n18) );
  INVERT_H U44 ( .A(n18), .Z(n19) );
  INVERT_H U45 ( .A(n2), .Z(n20) );
  XOR2_D U46 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_E U47 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n48) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  INVERT_I U54 ( .A(B[2]), .Z(n46) );
  INVERT_M U55 ( .A(n23), .Z(n24) );
  NOR2_E U56 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U57 ( .A(n45), .B(n24), .Z(\ab[0][3] ) );
  NOR2_E U58 ( .A(n24), .B(n46), .Z(\ab[0][2] ) );
  NOR2_E U59 ( .A(n24), .B(n47), .Z(\ab[0][1] ) );
  NOR2_F U60 ( .A(n43), .B(n24), .Z(\ab[0][5] ) );
  INVERT_I U61 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U62 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_M U63 ( .A(A[1]), .Z(n39) );
  INVERT_I U64 ( .A(B[4]), .Z(n44) );
  INVERT_H U65 ( .A(\A1[7] ), .Z(n26) );
  INVERT_I U66 ( .A(n26), .Z(n27) );
  INVERT_H U67 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U68 ( .A(n38), .B(n44), .Z(\ab[2][4] ) );
  AND2_I U69 ( .A(n19), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_D U70 ( .A(n39), .B(n44), .Z(\ab[1][4] ) );
  BUFFER_H U71 ( .A(\CARRYB[1][5] ), .Z(n30) );
  INVERT_I U72 ( .A(B[5]), .Z(n43) );
  NOR2_E U73 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U74 ( .A(n42), .B(n24), .Z(\ab[0][6] ) );
  AND2_H U75 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U76 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U77 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U78 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U79 ( .A(ZB), .Z(n41) );
  NOR2_D U80 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U81 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U82 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  OR2_I U83 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  NAND2_E U84 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U85 ( .A(\A2[5] ), .Z(n31) );
  NOR2_D U86 ( .A(n24), .B(n48), .Z(PRODUCT[0]) );
  NOR2_D U87 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U88 ( .A(B[6]), .Z(n42) );
  NAND2_E U89 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U90 ( .A(\CARRYB[1][2] ), .Z(n33) );
  INVERT_H U91 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U92 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U93 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U94 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U95 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U96 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U97 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U98 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U100 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U101 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U102 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U103 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U104 ( .A(\ab[0][5] ), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U105 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U106 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U107 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_38 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n6, n7, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_38_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_38_DW02_mult_0 mult_32 ( .A({sample_out[3], n7, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n6) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_I U5 ( .A(n6), .Z(n7) );
  INVERT_I U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERTBAL_J U8 ( .A(n8), .Z(n9) );
  INVERT_H U9 ( .A(n4), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_37_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_37_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_D U3 ( .A(B[2]), .Z(n36) );
  INVERT_E U4 ( .A(n12), .Z(n10) );
  AO21_F U5 ( .A1(n32), .A2(n16), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n34), .A2(n56), .B(n27), .Z(n2) );
  XOR2_B U7 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U8 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U9 ( .A(n54), .Z(n3) );
  OA21_H U10 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U11 ( .A(n41), .B(n29), .Z(SUM[8]) );
  INVERT_H U12 ( .A(n46), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U15 ( .A(n17), .Z(n15) );
  INVERT_E U16 ( .A(n18), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n20), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n24), .Z(n22) );
  BUFFER_H U21 ( .A(n53), .Z(n24) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  NAND2BAL_E U24 ( .A(n33), .B(n51), .Z(n52) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_E U26 ( .A(n47), .Z(n32) );
  INVERT_E U27 ( .A(n58), .Z(n34) );
  AO21_E U28 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U29 ( .A(n55), .B(n13), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n7), .B(n23), .Z(n55) );
  INVERT_E U31 ( .A(n10), .Z(n11) );
  AND2_H U32 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U33 ( .A(n57), .Z(n12) );
  XOR2_B U34 ( .A(B[8]), .B(A[8]), .Z(n41) );
  CLKI_O U35 ( .A(n28), .Z(n29) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_H U37 ( .A(n2), .Z(n13) );
  INVERT_H U38 ( .A(n1), .Z(n14) );
  INVERT_F U39 ( .A(n15), .Z(n16) );
  OA21_F U40 ( .A1(n49), .A2(n21), .B(n51), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n17) );
  INVERT_D U42 ( .A(n3), .Z(n18) );
  INVERT_F U43 ( .A(n7), .Z(n19) );
  INVERT_D U44 ( .A(n50), .Z(n20) );
  INVERT_F U45 ( .A(n9), .Z(n21) );
  OA21_F U46 ( .A1(n23), .A2(n13), .B(n19), .Z(n50) );
  INVERT_F U47 ( .A(n22), .Z(n23) );
  INVERT_E U48 ( .A(n36), .Z(n25) );
  INVERT_H U49 ( .A(n25), .Z(n26) );
  INVERT_F U50 ( .A(n11), .Z(n27) );
  OA21_F U51 ( .A1(n42), .A2(n14), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n27), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n14), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n16), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n5), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n21), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n26), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n26), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_37_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n16), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n18), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n20), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_37_DW01_add_1 FS_1 ( .A({n34, n29, n26, n27, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n30, \A2[6] , 
        n31, \A2[4] , n12, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n33), .B(n6), .CIN(n32), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n4), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n35), .B(n39), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(n2), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n27) );
  NOR2_D U4 ( .A(B[0]), .B(n35), .Z(\ab[3][0] ) );
  NOR2_D U5 ( .A(B[1]), .B(n35), .Z(n2) );
  NOR2_D U6 ( .A(B[5]), .B(n35), .Z(\ab[3][5] ) );
  NOR2_D U7 ( .A(A[2]), .B(n39), .Z(\ab[2][7] ) );
  INVERT_D U8 ( .A(\CARRYB[1][2] ), .Z(n3) );
  INVERT_E U9 ( .A(n3), .Z(n4) );
  INVERT_D U10 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U15 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U16 ( .A(n9), .Z(n10) );
  AND2_H U17 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U18 ( .A(n28), .Z(n29) );
  AND2_H U19 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U20 ( .A(n24), .B(n44), .Z(\ab[2][2] ) );
  INVERT_H U21 ( .A(\A2[3] ), .Z(n11) );
  INVERT_H U22 ( .A(n11), .Z(n12) );
  AND2_I U23 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A2[3] ) );
  XOR2_D U24 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U26 ( .A(n13), .Z(n14) );
  AND2_H U27 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U28 ( .A(\CARRYB[1][3] ), .Z(n15) );
  INVERT_E U29 ( .A(n15), .Z(n16) );
  AND2_H U30 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n17) );
  INVERT_E U32 ( .A(n17), .Z(n18) );
  AND2_H U33 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n19) );
  INVERT_E U35 ( .A(n19), .Z(n20) );
  AND2_H U36 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_D U37 ( .A(B[6]), .B(n35), .Z(\ab[3][6] ) );
  INVERT_N U38 ( .A(ZA), .Z(n35) );
  BUFFER_J U39 ( .A(\CARRYB[3][0] ), .Z(n21) );
  AND2_J U40 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_J U41 ( .A(n22), .Z(n23) );
  NOR2_D U42 ( .A(n24), .B(n46), .Z(\ab[2][0] ) );
  INVERT_I U43 ( .A(B[0]), .Z(n46) );
  NOR2_D U44 ( .A(n24), .B(n45), .Z(\ab[2][1] ) );
  INVERT_I U45 ( .A(B[1]), .Z(n45) );
  NOR2_D U46 ( .A(n23), .B(n41), .Z(\ab[2][5] ) );
  INVERT_I U47 ( .A(B[5]), .Z(n41) );
  NOR2_E U48 ( .A(n37), .B(n45), .Z(\ab[1][1] ) );
  NOR2_E U49 ( .A(n37), .B(n46), .Z(\ab[1][0] ) );
  NOR2_E U50 ( .A(n41), .B(n37), .Z(\ab[1][5] ) );
  NOR2_E U51 ( .A(n37), .B(n44), .Z(\ab[1][2] ) );
  INVERT_M U52 ( .A(A[1]), .Z(n37) );
  NOR2_E U53 ( .A(n42), .B(n37), .Z(\ab[1][4] ) );
  NOR2_D U54 ( .A(n23), .B(n42), .Z(\ab[2][4] ) );
  INVERT_I U55 ( .A(B[4]), .Z(n42) );
  NOR2_E U56 ( .A(n43), .B(n37), .Z(\ab[1][3] ) );
  NOR2_D U57 ( .A(n23), .B(n43), .Z(\ab[2][3] ) );
  INVERT_I U58 ( .A(B[3]), .Z(n43) );
  INVERT_I U59 ( .A(B[2]), .Z(n44) );
  INVERT_I U60 ( .A(n36), .Z(n22) );
  INVERT_I U61 ( .A(n22), .Z(n24) );
  NOR2_E U62 ( .A(n42), .B(n38), .Z(\ab[0][4] ) );
  NOR2_E U63 ( .A(n41), .B(n38), .Z(\ab[0][5] ) );
  NOR2_E U64 ( .A(n38), .B(n44), .Z(\ab[0][2] ) );
  NOR2_E U65 ( .A(n38), .B(n45), .Z(\ab[0][1] ) );
  NOR2_E U66 ( .A(n40), .B(n38), .Z(\ab[0][6] ) );
  NOR2_E U67 ( .A(n43), .B(n38), .Z(\ab[0][3] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n38) );
  AND2_H U69 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U70 ( .A(\A2[5] ), .Z(n31) );
  INVERT_I U71 ( .A(\A2[7] ), .Z(n30) );
  INVERT_H U72 ( .A(\A1[7] ), .Z(n25) );
  INVERT_I U73 ( .A(n25), .Z(n26) );
  NOR2_E U74 ( .A(n40), .B(n37), .Z(\ab[1][6] ) );
  INVERT_H U75 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U76 ( .A(n39), .B(n35), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n39), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n39) );
  NOR2_D U79 ( .A(B[4]), .B(n35), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n35), .Z(\ab[3][2] ) );
  NAND2_E U81 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U83 ( .A(B[3]), .B(n35), .Z(\ab[3][3] ) );
  INVERT_I U84 ( .A(B[6]), .Z(n40) );
  OR2_I U85 ( .A(A[1]), .B(n39), .Z(\ab[1][7] ) );
  AND2_H U86 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U87 ( .A(n46), .B(n38), .Z(PRODUCT[0]) );
  INVERT_H U88 ( .A(\ab[1][7] ), .Z(n32) );
  OR2_J U89 ( .A(n23), .B(n40), .Z(\ab[2][6] ) );
  INVERT_H U90 ( .A(\ab[2][6] ), .Z(n33) );
  AND2_H U91 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U92 ( .A(A[2]), .Z(n36) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n34) );
endmodule


module dsp_slice_37 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_37_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_37_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_36_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_36_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n25), .Z(n23) );
  INVERT_D U3 ( .A(B[2]), .Z(n32) );
  INVERT_E U4 ( .A(n3), .Z(n22) );
  AO21_F U5 ( .A1(n27), .A2(n14), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n21), .Z(n2) );
  XOR2_B U7 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n24), .B(B[8]), .Z(n36) );
  XOR2_B U9 ( .A(n37), .B(n24), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U11 ( .A(n53), .Z(n3) );
  INVERT_H U12 ( .A(n42), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U15 ( .A(n15), .Z(n13) );
  INVERT_E U16 ( .A(n16), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n22), .Z(n20) );
  NAND2BAL_E U19 ( .A(n26), .B(n39), .Z(n40) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n39) );
  INVERT_E U21 ( .A(n43), .Z(n27) );
  INVERT_E U22 ( .A(n54), .Z(n30) );
  INVERT_H U23 ( .A(n10), .Z(n11) );
  INVERT_E U24 ( .A(n12), .Z(n10) );
  INVERT_F U25 ( .A(n50), .Z(n29) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n50) );
  NAND2_E U27 ( .A(n28), .B(n11), .Z(n48) );
  AO21_E U28 ( .A1(n24), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n8), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n29), .B(n49), .Z(n51) );
  XOR2_C U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  CLKI_O U32 ( .A(n23), .Z(n24) );
  INVERT_H U33 ( .A(n2), .Z(n8) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  AND2_H U35 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_D U36 ( .A(n47), .Z(n12) );
  INVERT_F U37 ( .A(n13), .Z(n14) );
  OA21_F U38 ( .A1(n45), .A2(n17), .B(n11), .Z(n41) );
  INVERT_D U39 ( .A(n41), .Z(n15) );
  INVERT_D U40 ( .A(n46), .Z(n16) );
  INVERT_F U41 ( .A(n7), .Z(n17) );
  OA21_F U42 ( .A1(n49), .A2(n8), .B(n50), .Z(n46) );
  NOR2_E U43 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_E U44 ( .A(n32), .Z(n18) );
  INVERT_H U45 ( .A(n18), .Z(n19) );
  INVERT_F U46 ( .A(n20), .Z(n21) );
  OA21_F U47 ( .A1(n38), .A2(n9), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n25) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n21), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n9), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n26) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n14), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n5), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n17), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n28) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n19), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n19), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_36_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(\CARRYB[1][4] ), .CIN(\SUMB[1][5] ), 
        .COUT(\CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_36_DW01_add_1 FS_1 ( .A({n36, n29, n27, n25, \A1[5] , \A1[4] , n20, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n21, n32, \A2[6] , n31, n16, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n6), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n33), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n41), .B(n37), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n30), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n8), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n11), .B(n10), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_E S5_6 ( .A(n12), .B(\CARRYB[2][6] ), .CIN(n4), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n11) );
  NOR2_D U5 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U8 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n37), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  INVERT_N U11 ( .A(ZA), .Z(n37) );
  OR2_J U12 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_I U13 ( .A(n15), .Z(n16) );
  INVERT_F U14 ( .A(n17), .Z(n15) );
  INVERT_H U15 ( .A(\A2[8] ), .Z(n21) );
  NAND2_E U16 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_E U17 ( .A(\ab[2][7] ), .Z(n3) );
  INVERT_H U18 ( .A(n3), .Z(n4) );
  INVERT_D U19 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U20 ( .A(n5), .Z(n6) );
  NAND2BAL_E U21 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_I U22 ( .A(n40), .Z(n23) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U24 ( .A(\CARRYB[1][1] ), .Z(n7) );
  INVERT_E U25 ( .A(n7), .Z(n8) );
  AND2_H U26 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U27 ( .A(\CARRYB[1][3] ), .Z(n9) );
  INVERT_E U28 ( .A(n9), .Z(n10) );
  AND2_H U29 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U30 ( .A(A[2]), .Z(n38) );
  INVERT_I U31 ( .A(n28), .Z(n29) );
  AND2_H U32 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U33 ( .A(A[0]), .Z(n40) );
  INVERT_E U34 ( .A(\ab[3][6] ), .Z(n12) );
  INVERT_D U35 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_E U38 ( .A(n39), .B(n42), .Z(\ab[1][6] ) );
  NOR2_D U39 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U40 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  BUFFER_H U41 ( .A(\A2[4] ), .Z(n17) );
  AND2_H U42 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U43 ( .A(\ab[1][4] ), .Z(n18) );
  INVERT_H U44 ( .A(n18), .Z(n19) );
  INVERT_H U45 ( .A(n2), .Z(n20) );
  XOR2_D U46 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_E U47 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n48) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  INVERT_I U54 ( .A(B[2]), .Z(n46) );
  INVERT_M U55 ( .A(n23), .Z(n24) );
  NOR2_E U56 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U57 ( .A(n45), .B(n24), .Z(\ab[0][3] ) );
  NOR2_E U58 ( .A(n24), .B(n46), .Z(\ab[0][2] ) );
  NOR2_E U59 ( .A(n24), .B(n47), .Z(\ab[0][1] ) );
  NOR2_F U60 ( .A(n43), .B(n24), .Z(\ab[0][5] ) );
  INVERT_I U61 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U62 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_M U63 ( .A(A[1]), .Z(n39) );
  INVERT_I U64 ( .A(B[4]), .Z(n44) );
  INVERT_H U65 ( .A(\A1[7] ), .Z(n26) );
  INVERT_I U66 ( .A(n26), .Z(n27) );
  INVERT_H U67 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U68 ( .A(n38), .B(n44), .Z(\ab[2][4] ) );
  AND2_I U69 ( .A(n19), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_D U70 ( .A(n39), .B(n44), .Z(\ab[1][4] ) );
  BUFFER_H U71 ( .A(\CARRYB[1][5] ), .Z(n30) );
  INVERT_I U72 ( .A(B[5]), .Z(n43) );
  NOR2_E U73 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U74 ( .A(n42), .B(n24), .Z(\ab[0][6] ) );
  AND2_H U75 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U76 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U77 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U78 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U79 ( .A(ZB), .Z(n41) );
  NOR2_D U80 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U81 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U82 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  OR2_I U83 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  NAND2_E U84 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U85 ( .A(\A2[5] ), .Z(n31) );
  NOR2_D U86 ( .A(n24), .B(n48), .Z(PRODUCT[0]) );
  NOR2_D U87 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U88 ( .A(B[6]), .Z(n42) );
  NAND2_E U89 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U90 ( .A(\CARRYB[1][2] ), .Z(n33) );
  INVERT_H U91 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U92 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U93 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U94 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U95 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U96 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U97 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U98 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U100 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U101 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U102 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U103 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U104 ( .A(\ab[0][5] ), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U105 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U106 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U107 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_36 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n6, n7, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_36_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_36_DW02_mult_0 mult_32 ( .A({sample_out[3], n7, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n6) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_I U5 ( .A(n6), .Z(n7) );
  INVERT_I U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERTBAL_J U8 ( .A(n8), .Z(n9) );
  INVERT_H U9 ( .A(n4), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_35_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_35_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_D U3 ( .A(B[2]), .Z(n36) );
  INVERT_E U4 ( .A(n12), .Z(n10) );
  AO21_F U5 ( .A1(n32), .A2(n16), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n34), .A2(n56), .B(n27), .Z(n2) );
  XOR2_B U7 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U8 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U9 ( .A(n54), .Z(n3) );
  OA21_H U10 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U11 ( .A(n41), .B(n29), .Z(SUM[8]) );
  INVERT_H U12 ( .A(n46), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U15 ( .A(n17), .Z(n15) );
  INVERT_E U16 ( .A(n18), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n20), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n24), .Z(n22) );
  BUFFER_H U21 ( .A(n53), .Z(n24) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  NAND2BAL_E U24 ( .A(n33), .B(n51), .Z(n52) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_E U26 ( .A(n47), .Z(n32) );
  INVERT_E U27 ( .A(n58), .Z(n34) );
  AO21_E U28 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U29 ( .A(n55), .B(n13), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n7), .B(n23), .Z(n55) );
  INVERT_E U31 ( .A(n10), .Z(n11) );
  AND2_H U32 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U33 ( .A(n57), .Z(n12) );
  XOR2_B U34 ( .A(B[8]), .B(A[8]), .Z(n41) );
  CLKI_O U35 ( .A(n28), .Z(n29) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_H U37 ( .A(n2), .Z(n13) );
  INVERT_H U38 ( .A(n1), .Z(n14) );
  INVERT_F U39 ( .A(n15), .Z(n16) );
  OA21_F U40 ( .A1(n49), .A2(n21), .B(n51), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n17) );
  INVERT_D U42 ( .A(n3), .Z(n18) );
  INVERT_F U43 ( .A(n7), .Z(n19) );
  INVERT_D U44 ( .A(n50), .Z(n20) );
  INVERT_F U45 ( .A(n9), .Z(n21) );
  OA21_F U46 ( .A1(n23), .A2(n13), .B(n19), .Z(n50) );
  INVERT_F U47 ( .A(n22), .Z(n23) );
  INVERT_E U48 ( .A(n36), .Z(n25) );
  INVERT_H U49 ( .A(n25), .Z(n26) );
  INVERT_F U50 ( .A(n11), .Z(n27) );
  OA21_F U51 ( .A1(n42), .A2(n14), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n27), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n14), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n16), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n5), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n21), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n26), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n26), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_35_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n16), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n18), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n20), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_35_DW01_add_1 FS_1 ( .A({n34, n29, n26, n27, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n30, \A2[6] , 
        n31, \A2[4] , n12, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n33), .B(n6), .CIN(n32), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n4), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n35), .B(n39), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(n2), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n27) );
  NOR2_D U4 ( .A(B[0]), .B(n35), .Z(\ab[3][0] ) );
  NOR2_D U5 ( .A(B[1]), .B(n35), .Z(n2) );
  NOR2_D U6 ( .A(B[5]), .B(n35), .Z(\ab[3][5] ) );
  NOR2_D U7 ( .A(A[2]), .B(n39), .Z(\ab[2][7] ) );
  INVERT_D U8 ( .A(\CARRYB[1][2] ), .Z(n3) );
  INVERT_E U9 ( .A(n3), .Z(n4) );
  INVERT_D U10 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U15 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U16 ( .A(n9), .Z(n10) );
  AND2_H U17 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U18 ( .A(n28), .Z(n29) );
  AND2_H U19 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U20 ( .A(n24), .B(n44), .Z(\ab[2][2] ) );
  INVERT_H U21 ( .A(\A2[3] ), .Z(n11) );
  INVERT_H U22 ( .A(n11), .Z(n12) );
  AND2_I U23 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A2[3] ) );
  XOR2_D U24 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U26 ( .A(n13), .Z(n14) );
  AND2_H U27 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U28 ( .A(\CARRYB[1][3] ), .Z(n15) );
  INVERT_E U29 ( .A(n15), .Z(n16) );
  AND2_H U30 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n17) );
  INVERT_E U32 ( .A(n17), .Z(n18) );
  AND2_H U33 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n19) );
  INVERT_E U35 ( .A(n19), .Z(n20) );
  AND2_H U36 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_D U37 ( .A(B[6]), .B(n35), .Z(\ab[3][6] ) );
  INVERT_N U38 ( .A(ZA), .Z(n35) );
  BUFFER_J U39 ( .A(\CARRYB[3][0] ), .Z(n21) );
  AND2_J U40 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_J U41 ( .A(n22), .Z(n23) );
  NOR2_D U42 ( .A(n24), .B(n46), .Z(\ab[2][0] ) );
  INVERT_I U43 ( .A(B[0]), .Z(n46) );
  NOR2_D U44 ( .A(n24), .B(n45), .Z(\ab[2][1] ) );
  INVERT_I U45 ( .A(B[1]), .Z(n45) );
  NOR2_D U46 ( .A(n23), .B(n41), .Z(\ab[2][5] ) );
  INVERT_I U47 ( .A(B[5]), .Z(n41) );
  NOR2_E U48 ( .A(n37), .B(n45), .Z(\ab[1][1] ) );
  NOR2_E U49 ( .A(n37), .B(n46), .Z(\ab[1][0] ) );
  NOR2_E U50 ( .A(n41), .B(n37), .Z(\ab[1][5] ) );
  NOR2_E U51 ( .A(n37), .B(n44), .Z(\ab[1][2] ) );
  INVERT_M U52 ( .A(A[1]), .Z(n37) );
  NOR2_E U53 ( .A(n42), .B(n37), .Z(\ab[1][4] ) );
  NOR2_D U54 ( .A(n23), .B(n42), .Z(\ab[2][4] ) );
  INVERT_I U55 ( .A(B[4]), .Z(n42) );
  NOR2_E U56 ( .A(n43), .B(n37), .Z(\ab[1][3] ) );
  NOR2_D U57 ( .A(n23), .B(n43), .Z(\ab[2][3] ) );
  INVERT_I U58 ( .A(B[3]), .Z(n43) );
  INVERT_I U59 ( .A(B[2]), .Z(n44) );
  INVERT_I U60 ( .A(n36), .Z(n22) );
  INVERT_I U61 ( .A(n22), .Z(n24) );
  NOR2_E U62 ( .A(n42), .B(n38), .Z(\ab[0][4] ) );
  NOR2_E U63 ( .A(n41), .B(n38), .Z(\ab[0][5] ) );
  NOR2_E U64 ( .A(n38), .B(n44), .Z(\ab[0][2] ) );
  NOR2_E U65 ( .A(n38), .B(n45), .Z(\ab[0][1] ) );
  NOR2_E U66 ( .A(n40), .B(n38), .Z(\ab[0][6] ) );
  NOR2_E U67 ( .A(n43), .B(n38), .Z(\ab[0][3] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n38) );
  AND2_H U69 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U70 ( .A(\A2[5] ), .Z(n31) );
  INVERT_I U71 ( .A(\A2[7] ), .Z(n30) );
  INVERT_H U72 ( .A(\A1[7] ), .Z(n25) );
  INVERT_I U73 ( .A(n25), .Z(n26) );
  NOR2_E U74 ( .A(n40), .B(n37), .Z(\ab[1][6] ) );
  INVERT_H U75 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U76 ( .A(n39), .B(n35), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n39), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n39) );
  NOR2_D U79 ( .A(B[4]), .B(n35), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n35), .Z(\ab[3][2] ) );
  NAND2_E U81 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U83 ( .A(B[3]), .B(n35), .Z(\ab[3][3] ) );
  INVERT_I U84 ( .A(B[6]), .Z(n40) );
  OR2_I U85 ( .A(A[1]), .B(n39), .Z(\ab[1][7] ) );
  AND2_H U86 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U87 ( .A(n46), .B(n38), .Z(PRODUCT[0]) );
  INVERT_H U88 ( .A(\ab[1][7] ), .Z(n32) );
  OR2_J U89 ( .A(n23), .B(n40), .Z(\ab[2][6] ) );
  INVERT_H U90 ( .A(\ab[2][6] ), .Z(n33) );
  AND2_H U91 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U92 ( .A(A[2]), .Z(n36) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n34) );
endmodule


module dsp_slice_35 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_35_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_35_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_34_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_34_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n25), .Z(n23) );
  INVERT_D U3 ( .A(B[2]), .Z(n32) );
  INVERT_E U4 ( .A(n3), .Z(n22) );
  AO21_F U5 ( .A1(n27), .A2(n14), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n21), .Z(n2) );
  XOR2_B U7 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n24), .B(B[8]), .Z(n36) );
  XOR2_B U9 ( .A(n37), .B(n24), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U11 ( .A(n53), .Z(n3) );
  INVERT_H U12 ( .A(n42), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U15 ( .A(n15), .Z(n13) );
  INVERT_E U16 ( .A(n16), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n22), .Z(n20) );
  NAND2BAL_E U19 ( .A(n26), .B(n39), .Z(n40) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n39) );
  INVERT_E U21 ( .A(n43), .Z(n27) );
  INVERT_E U22 ( .A(n54), .Z(n30) );
  INVERT_H U23 ( .A(n10), .Z(n11) );
  INVERT_E U24 ( .A(n12), .Z(n10) );
  INVERT_F U25 ( .A(n50), .Z(n29) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n50) );
  NAND2_E U27 ( .A(n28), .B(n11), .Z(n48) );
  AO21_E U28 ( .A1(n24), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n8), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n29), .B(n49), .Z(n51) );
  XOR2_C U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  CLKI_O U32 ( .A(n23), .Z(n24) );
  INVERT_H U33 ( .A(n2), .Z(n8) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  AND2_H U35 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_D U36 ( .A(n47), .Z(n12) );
  INVERT_F U37 ( .A(n13), .Z(n14) );
  OA21_F U38 ( .A1(n45), .A2(n17), .B(n11), .Z(n41) );
  INVERT_D U39 ( .A(n41), .Z(n15) );
  INVERT_D U40 ( .A(n46), .Z(n16) );
  INVERT_F U41 ( .A(n7), .Z(n17) );
  OA21_F U42 ( .A1(n49), .A2(n8), .B(n50), .Z(n46) );
  NOR2_E U43 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_E U44 ( .A(n32), .Z(n18) );
  INVERT_H U45 ( .A(n18), .Z(n19) );
  INVERT_F U46 ( .A(n20), .Z(n21) );
  OA21_F U47 ( .A1(n38), .A2(n9), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n25) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n21), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n9), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n26) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n14), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n5), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n17), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n28) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n19), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n19), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_34_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(\CARRYB[1][4] ), .CIN(\SUMB[1][5] ), 
        .COUT(\CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_34_DW01_add_1 FS_1 ( .A({n36, n29, n27, n25, \A1[5] , \A1[4] , n20, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n21, n32, \A2[6] , n31, n16, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n6), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n33), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n41), .B(n37), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n30), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n8), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n11), .B(n10), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_E S5_6 ( .A(n12), .B(\CARRYB[2][6] ), .CIN(n4), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n11) );
  NOR2_D U5 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U8 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n37), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  INVERT_N U11 ( .A(ZA), .Z(n37) );
  OR2_J U12 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_I U13 ( .A(n15), .Z(n16) );
  INVERT_F U14 ( .A(n17), .Z(n15) );
  INVERT_H U15 ( .A(\A2[8] ), .Z(n21) );
  NAND2_E U16 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_E U17 ( .A(\ab[2][7] ), .Z(n3) );
  INVERT_H U18 ( .A(n3), .Z(n4) );
  INVERT_D U19 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U20 ( .A(n5), .Z(n6) );
  NAND2BAL_E U21 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_I U22 ( .A(n40), .Z(n23) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U24 ( .A(\CARRYB[1][1] ), .Z(n7) );
  INVERT_E U25 ( .A(n7), .Z(n8) );
  AND2_H U26 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U27 ( .A(\CARRYB[1][3] ), .Z(n9) );
  INVERT_E U28 ( .A(n9), .Z(n10) );
  AND2_H U29 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U30 ( .A(A[2]), .Z(n38) );
  INVERT_I U31 ( .A(n28), .Z(n29) );
  AND2_H U32 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U33 ( .A(A[0]), .Z(n40) );
  INVERT_E U34 ( .A(\ab[3][6] ), .Z(n12) );
  INVERT_D U35 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_E U38 ( .A(n39), .B(n42), .Z(\ab[1][6] ) );
  NOR2_D U39 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U40 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  BUFFER_H U41 ( .A(\A2[4] ), .Z(n17) );
  AND2_H U42 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U43 ( .A(\ab[1][4] ), .Z(n18) );
  INVERT_H U44 ( .A(n18), .Z(n19) );
  INVERT_H U45 ( .A(n2), .Z(n20) );
  XOR2_D U46 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_E U47 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n48) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  INVERT_I U54 ( .A(B[2]), .Z(n46) );
  INVERT_M U55 ( .A(n23), .Z(n24) );
  NOR2_E U56 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U57 ( .A(n45), .B(n24), .Z(\ab[0][3] ) );
  NOR2_E U58 ( .A(n24), .B(n46), .Z(\ab[0][2] ) );
  NOR2_E U59 ( .A(n24), .B(n47), .Z(\ab[0][1] ) );
  NOR2_F U60 ( .A(n43), .B(n24), .Z(\ab[0][5] ) );
  INVERT_I U61 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U62 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_M U63 ( .A(A[1]), .Z(n39) );
  INVERT_I U64 ( .A(B[4]), .Z(n44) );
  INVERT_H U65 ( .A(\A1[7] ), .Z(n26) );
  INVERT_I U66 ( .A(n26), .Z(n27) );
  INVERT_H U67 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U68 ( .A(n38), .B(n44), .Z(\ab[2][4] ) );
  AND2_I U69 ( .A(n19), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_D U70 ( .A(n39), .B(n44), .Z(\ab[1][4] ) );
  BUFFER_H U71 ( .A(\CARRYB[1][5] ), .Z(n30) );
  INVERT_I U72 ( .A(B[5]), .Z(n43) );
  NOR2_E U73 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U74 ( .A(n42), .B(n24), .Z(\ab[0][6] ) );
  AND2_H U75 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U76 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U77 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U78 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U79 ( .A(ZB), .Z(n41) );
  NOR2_D U80 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U81 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U82 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  OR2_I U83 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  NAND2_E U84 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U85 ( .A(\A2[5] ), .Z(n31) );
  NOR2_D U86 ( .A(n24), .B(n48), .Z(PRODUCT[0]) );
  NOR2_D U87 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U88 ( .A(B[6]), .Z(n42) );
  NAND2_E U89 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U90 ( .A(\CARRYB[1][2] ), .Z(n33) );
  INVERT_H U91 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U92 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U93 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U94 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U95 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U96 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U97 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U98 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U100 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U101 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U102 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U103 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U104 ( .A(\ab[0][5] ), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U105 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U106 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U107 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_34 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n6, n7, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_34_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_34_DW02_mult_0 mult_32 ( .A({sample_out[3], n7, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n6) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_I U5 ( .A(n6), .Z(n7) );
  INVERT_I U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERTBAL_J U8 ( .A(n8), .Z(n9) );
  INVERT_H U9 ( .A(n4), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_33_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_33_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_D U3 ( .A(B[2]), .Z(n36) );
  INVERT_E U4 ( .A(n12), .Z(n10) );
  AO21_F U5 ( .A1(n32), .A2(n16), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n34), .A2(n56), .B(n27), .Z(n2) );
  XOR2_B U7 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U8 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U9 ( .A(n54), .Z(n3) );
  OA21_H U10 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U11 ( .A(n41), .B(n29), .Z(SUM[8]) );
  INVERT_H U12 ( .A(n46), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U15 ( .A(n17), .Z(n15) );
  INVERT_E U16 ( .A(n18), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n20), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n24), .Z(n22) );
  BUFFER_H U21 ( .A(n53), .Z(n24) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  NAND2BAL_E U24 ( .A(n33), .B(n51), .Z(n52) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_E U26 ( .A(n47), .Z(n32) );
  INVERT_E U27 ( .A(n58), .Z(n34) );
  AO21_E U28 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U29 ( .A(n55), .B(n13), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n7), .B(n23), .Z(n55) );
  INVERT_E U31 ( .A(n10), .Z(n11) );
  AND2_H U32 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U33 ( .A(n57), .Z(n12) );
  XOR2_B U34 ( .A(B[8]), .B(A[8]), .Z(n41) );
  CLKI_O U35 ( .A(n28), .Z(n29) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_H U37 ( .A(n2), .Z(n13) );
  INVERT_H U38 ( .A(n1), .Z(n14) );
  INVERT_F U39 ( .A(n15), .Z(n16) );
  OA21_F U40 ( .A1(n49), .A2(n21), .B(n51), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n17) );
  INVERT_D U42 ( .A(n3), .Z(n18) );
  INVERT_F U43 ( .A(n7), .Z(n19) );
  INVERT_D U44 ( .A(n50), .Z(n20) );
  INVERT_F U45 ( .A(n9), .Z(n21) );
  OA21_F U46 ( .A1(n23), .A2(n13), .B(n19), .Z(n50) );
  INVERT_F U47 ( .A(n22), .Z(n23) );
  INVERT_E U48 ( .A(n36), .Z(n25) );
  INVERT_H U49 ( .A(n25), .Z(n26) );
  INVERT_F U50 ( .A(n11), .Z(n27) );
  OA21_F U51 ( .A1(n42), .A2(n14), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n27), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n14), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n16), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n5), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n21), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n26), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n26), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_33_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n16), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n18), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n20), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_33_DW01_add_1 FS_1 ( .A({n34, n29, n26, n27, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n30, \A2[6] , 
        n31, \A2[4] , n12, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n33), .B(n6), .CIN(n32), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n4), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n35), .B(n39), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(n2), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n27) );
  NOR2_D U4 ( .A(B[0]), .B(n35), .Z(\ab[3][0] ) );
  NOR2_D U5 ( .A(B[1]), .B(n35), .Z(n2) );
  NOR2_D U6 ( .A(B[5]), .B(n35), .Z(\ab[3][5] ) );
  NOR2_D U7 ( .A(A[2]), .B(n39), .Z(\ab[2][7] ) );
  INVERT_D U8 ( .A(\CARRYB[1][2] ), .Z(n3) );
  INVERT_E U9 ( .A(n3), .Z(n4) );
  INVERT_D U10 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U15 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U16 ( .A(n9), .Z(n10) );
  AND2_H U17 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U18 ( .A(n28), .Z(n29) );
  AND2_H U19 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U20 ( .A(n24), .B(n44), .Z(\ab[2][2] ) );
  INVERT_H U21 ( .A(\A2[3] ), .Z(n11) );
  INVERT_H U22 ( .A(n11), .Z(n12) );
  AND2_I U23 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A2[3] ) );
  XOR2_D U24 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U26 ( .A(n13), .Z(n14) );
  AND2_H U27 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U28 ( .A(\CARRYB[1][3] ), .Z(n15) );
  INVERT_E U29 ( .A(n15), .Z(n16) );
  AND2_H U30 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n17) );
  INVERT_E U32 ( .A(n17), .Z(n18) );
  AND2_H U33 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n19) );
  INVERT_E U35 ( .A(n19), .Z(n20) );
  AND2_H U36 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_D U37 ( .A(B[6]), .B(n35), .Z(\ab[3][6] ) );
  INVERT_N U38 ( .A(ZA), .Z(n35) );
  BUFFER_J U39 ( .A(\CARRYB[3][0] ), .Z(n21) );
  AND2_J U40 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_J U41 ( .A(n22), .Z(n23) );
  NOR2_D U42 ( .A(n24), .B(n46), .Z(\ab[2][0] ) );
  INVERT_I U43 ( .A(B[0]), .Z(n46) );
  NOR2_D U44 ( .A(n24), .B(n45), .Z(\ab[2][1] ) );
  INVERT_I U45 ( .A(B[1]), .Z(n45) );
  NOR2_D U46 ( .A(n23), .B(n41), .Z(\ab[2][5] ) );
  INVERT_I U47 ( .A(B[5]), .Z(n41) );
  NOR2_E U48 ( .A(n37), .B(n45), .Z(\ab[1][1] ) );
  NOR2_E U49 ( .A(n37), .B(n46), .Z(\ab[1][0] ) );
  NOR2_E U50 ( .A(n41), .B(n37), .Z(\ab[1][5] ) );
  NOR2_E U51 ( .A(n37), .B(n44), .Z(\ab[1][2] ) );
  INVERT_M U52 ( .A(A[1]), .Z(n37) );
  NOR2_E U53 ( .A(n42), .B(n37), .Z(\ab[1][4] ) );
  NOR2_D U54 ( .A(n23), .B(n42), .Z(\ab[2][4] ) );
  INVERT_I U55 ( .A(B[4]), .Z(n42) );
  NOR2_E U56 ( .A(n43), .B(n37), .Z(\ab[1][3] ) );
  NOR2_D U57 ( .A(n23), .B(n43), .Z(\ab[2][3] ) );
  INVERT_I U58 ( .A(B[3]), .Z(n43) );
  INVERT_I U59 ( .A(B[2]), .Z(n44) );
  INVERT_I U60 ( .A(n36), .Z(n22) );
  INVERT_I U61 ( .A(n22), .Z(n24) );
  NOR2_E U62 ( .A(n42), .B(n38), .Z(\ab[0][4] ) );
  NOR2_E U63 ( .A(n41), .B(n38), .Z(\ab[0][5] ) );
  NOR2_E U64 ( .A(n38), .B(n44), .Z(\ab[0][2] ) );
  NOR2_E U65 ( .A(n38), .B(n45), .Z(\ab[0][1] ) );
  NOR2_E U66 ( .A(n40), .B(n38), .Z(\ab[0][6] ) );
  NOR2_E U67 ( .A(n43), .B(n38), .Z(\ab[0][3] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n38) );
  AND2_H U69 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U70 ( .A(\A2[5] ), .Z(n31) );
  INVERT_I U71 ( .A(\A2[7] ), .Z(n30) );
  INVERT_H U72 ( .A(\A1[7] ), .Z(n25) );
  INVERT_I U73 ( .A(n25), .Z(n26) );
  NOR2_E U74 ( .A(n40), .B(n37), .Z(\ab[1][6] ) );
  INVERT_H U75 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U76 ( .A(n39), .B(n35), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n39), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n39) );
  NOR2_D U79 ( .A(B[4]), .B(n35), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n35), .Z(\ab[3][2] ) );
  NAND2_E U81 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U83 ( .A(B[3]), .B(n35), .Z(\ab[3][3] ) );
  INVERT_I U84 ( .A(B[6]), .Z(n40) );
  OR2_I U85 ( .A(A[1]), .B(n39), .Z(\ab[1][7] ) );
  AND2_H U86 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U87 ( .A(n46), .B(n38), .Z(PRODUCT[0]) );
  INVERT_H U88 ( .A(\ab[1][7] ), .Z(n32) );
  OR2_J U89 ( .A(n23), .B(n40), .Z(\ab[2][6] ) );
  INVERT_H U90 ( .A(\ab[2][6] ), .Z(n33) );
  AND2_H U91 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U92 ( .A(A[2]), .Z(n36) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n34) );
endmodule


module dsp_slice_33 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_33_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_33_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_32_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_32_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n25), .Z(n23) );
  INVERT_D U3 ( .A(B[2]), .Z(n32) );
  INVERT_E U4 ( .A(n3), .Z(n22) );
  AO21_F U5 ( .A1(n27), .A2(n14), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n21), .Z(n2) );
  XOR2_B U7 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n24), .B(B[8]), .Z(n36) );
  XOR2_B U9 ( .A(n37), .B(n24), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U11 ( .A(n53), .Z(n3) );
  INVERT_H U12 ( .A(n42), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U15 ( .A(n15), .Z(n13) );
  INVERT_E U16 ( .A(n16), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n22), .Z(n20) );
  NAND2BAL_E U19 ( .A(n26), .B(n39), .Z(n40) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n39) );
  INVERT_E U21 ( .A(n43), .Z(n27) );
  INVERT_E U22 ( .A(n54), .Z(n30) );
  INVERT_H U23 ( .A(n10), .Z(n11) );
  INVERT_E U24 ( .A(n12), .Z(n10) );
  INVERT_F U25 ( .A(n50), .Z(n29) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n50) );
  NAND2_E U27 ( .A(n28), .B(n11), .Z(n48) );
  AO21_E U28 ( .A1(n24), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n8), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n29), .B(n49), .Z(n51) );
  XOR2_C U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  CLKI_O U32 ( .A(n23), .Z(n24) );
  INVERT_H U33 ( .A(n2), .Z(n8) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  AND2_H U35 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_D U36 ( .A(n47), .Z(n12) );
  INVERT_F U37 ( .A(n13), .Z(n14) );
  OA21_F U38 ( .A1(n45), .A2(n17), .B(n11), .Z(n41) );
  INVERT_D U39 ( .A(n41), .Z(n15) );
  INVERT_D U40 ( .A(n46), .Z(n16) );
  INVERT_F U41 ( .A(n7), .Z(n17) );
  OA21_F U42 ( .A1(n49), .A2(n8), .B(n50), .Z(n46) );
  NOR2_E U43 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_E U44 ( .A(n32), .Z(n18) );
  INVERT_H U45 ( .A(n18), .Z(n19) );
  INVERT_F U46 ( .A(n20), .Z(n21) );
  OA21_F U47 ( .A1(n38), .A2(n9), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n25) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n21), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n9), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n26) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n14), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n5), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n17), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n28) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n19), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n19), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_32_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(\CARRYB[1][4] ), .CIN(\SUMB[1][5] ), 
        .COUT(\CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_32_DW01_add_1 FS_1 ( .A({n36, n29, n27, n25, \A1[5] , \A1[4] , n20, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n21, n32, \A2[6] , n31, n16, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n6), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n33), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n41), .B(n37), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n30), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n8), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n11), .B(n10), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_E S5_6 ( .A(n12), .B(\CARRYB[2][6] ), .CIN(n4), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n11) );
  NOR2_D U5 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U8 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n37), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  INVERT_N U11 ( .A(ZA), .Z(n37) );
  OR2_J U12 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_I U13 ( .A(n15), .Z(n16) );
  INVERT_F U14 ( .A(n17), .Z(n15) );
  INVERT_H U15 ( .A(\A2[8] ), .Z(n21) );
  NAND2_E U16 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_E U17 ( .A(\ab[2][7] ), .Z(n3) );
  INVERT_H U18 ( .A(n3), .Z(n4) );
  INVERT_D U19 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U20 ( .A(n5), .Z(n6) );
  NAND2BAL_E U21 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_I U22 ( .A(n40), .Z(n23) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U24 ( .A(\CARRYB[1][1] ), .Z(n7) );
  INVERT_E U25 ( .A(n7), .Z(n8) );
  AND2_H U26 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U27 ( .A(\CARRYB[1][3] ), .Z(n9) );
  INVERT_E U28 ( .A(n9), .Z(n10) );
  AND2_H U29 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U30 ( .A(A[2]), .Z(n38) );
  INVERT_I U31 ( .A(n28), .Z(n29) );
  AND2_H U32 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U33 ( .A(A[0]), .Z(n40) );
  INVERT_E U34 ( .A(\ab[3][6] ), .Z(n12) );
  INVERT_D U35 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_E U38 ( .A(n39), .B(n42), .Z(\ab[1][6] ) );
  NOR2_D U39 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U40 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  BUFFER_H U41 ( .A(\A2[4] ), .Z(n17) );
  AND2_H U42 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U43 ( .A(\ab[1][4] ), .Z(n18) );
  INVERT_H U44 ( .A(n18), .Z(n19) );
  INVERT_H U45 ( .A(n2), .Z(n20) );
  XOR2_D U46 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_E U47 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n48) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  INVERT_I U54 ( .A(B[2]), .Z(n46) );
  INVERT_M U55 ( .A(n23), .Z(n24) );
  NOR2_E U56 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U57 ( .A(n45), .B(n24), .Z(\ab[0][3] ) );
  NOR2_E U58 ( .A(n24), .B(n46), .Z(\ab[0][2] ) );
  NOR2_E U59 ( .A(n24), .B(n47), .Z(\ab[0][1] ) );
  NOR2_F U60 ( .A(n43), .B(n24), .Z(\ab[0][5] ) );
  INVERT_I U61 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U62 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_M U63 ( .A(A[1]), .Z(n39) );
  INVERT_I U64 ( .A(B[4]), .Z(n44) );
  INVERT_H U65 ( .A(\A1[7] ), .Z(n26) );
  INVERT_I U66 ( .A(n26), .Z(n27) );
  INVERT_H U67 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U68 ( .A(n38), .B(n44), .Z(\ab[2][4] ) );
  AND2_I U69 ( .A(n19), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_D U70 ( .A(n39), .B(n44), .Z(\ab[1][4] ) );
  BUFFER_H U71 ( .A(\CARRYB[1][5] ), .Z(n30) );
  INVERT_I U72 ( .A(B[5]), .Z(n43) );
  NOR2_E U73 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U74 ( .A(n42), .B(n24), .Z(\ab[0][6] ) );
  AND2_H U75 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U76 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U77 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U78 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U79 ( .A(ZB), .Z(n41) );
  NOR2_D U80 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U81 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U82 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  OR2_I U83 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  NAND2_E U84 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U85 ( .A(\A2[5] ), .Z(n31) );
  NOR2_D U86 ( .A(n24), .B(n48), .Z(PRODUCT[0]) );
  NOR2_D U87 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U88 ( .A(B[6]), .Z(n42) );
  NAND2_E U89 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U90 ( .A(\CARRYB[1][2] ), .Z(n33) );
  INVERT_H U91 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U92 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U93 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U94 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U95 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U96 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U97 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U98 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U100 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U101 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U102 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U103 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U104 ( .A(\ab[0][5] ), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U105 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U106 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U107 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_32 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n6, n7, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_32_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_32_DW02_mult_0 mult_32 ( .A({sample_out[3], n7, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n6) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_I U5 ( .A(n6), .Z(n7) );
  INVERT_I U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERTBAL_J U8 ( .A(n8), .Z(n9) );
  INVERT_H U9 ( .A(n4), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_31_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_31_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_D U3 ( .A(B[2]), .Z(n36) );
  INVERT_E U4 ( .A(n12), .Z(n10) );
  AO21_F U5 ( .A1(n32), .A2(n16), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n34), .A2(n56), .B(n27), .Z(n2) );
  XOR2_B U7 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U8 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U9 ( .A(n54), .Z(n3) );
  OA21_H U10 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U11 ( .A(n41), .B(n29), .Z(SUM[8]) );
  INVERT_H U12 ( .A(n46), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U15 ( .A(n17), .Z(n15) );
  INVERT_E U16 ( .A(n18), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n20), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n24), .Z(n22) );
  BUFFER_H U21 ( .A(n53), .Z(n24) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  NAND2BAL_E U24 ( .A(n33), .B(n51), .Z(n52) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_E U26 ( .A(n47), .Z(n32) );
  INVERT_E U27 ( .A(n58), .Z(n34) );
  AO21_E U28 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U29 ( .A(n55), .B(n13), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n7), .B(n23), .Z(n55) );
  INVERT_E U31 ( .A(n10), .Z(n11) );
  AND2_H U32 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U33 ( .A(n57), .Z(n12) );
  XOR2_B U34 ( .A(B[8]), .B(A[8]), .Z(n41) );
  CLKI_O U35 ( .A(n28), .Z(n29) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_H U37 ( .A(n2), .Z(n13) );
  INVERT_H U38 ( .A(n1), .Z(n14) );
  INVERT_F U39 ( .A(n15), .Z(n16) );
  OA21_F U40 ( .A1(n49), .A2(n21), .B(n51), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n17) );
  INVERT_D U42 ( .A(n3), .Z(n18) );
  INVERT_F U43 ( .A(n7), .Z(n19) );
  INVERT_D U44 ( .A(n50), .Z(n20) );
  INVERT_F U45 ( .A(n9), .Z(n21) );
  OA21_F U46 ( .A1(n23), .A2(n13), .B(n19), .Z(n50) );
  INVERT_F U47 ( .A(n22), .Z(n23) );
  INVERT_E U48 ( .A(n36), .Z(n25) );
  INVERT_H U49 ( .A(n25), .Z(n26) );
  INVERT_F U50 ( .A(n11), .Z(n27) );
  OA21_F U51 ( .A1(n42), .A2(n14), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n27), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n14), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n16), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n5), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n21), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n26), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n26), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_31_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n16), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n18), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n20), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_31_DW01_add_1 FS_1 ( .A({n34, n29, n26, n27, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n30, \A2[6] , 
        n31, \A2[4] , n12, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n33), .B(n6), .CIN(n32), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n4), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n35), .B(n39), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(n2), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n27) );
  NOR2_D U4 ( .A(B[0]), .B(n35), .Z(\ab[3][0] ) );
  NOR2_D U5 ( .A(B[1]), .B(n35), .Z(n2) );
  NOR2_D U6 ( .A(B[5]), .B(n35), .Z(\ab[3][5] ) );
  NOR2_D U7 ( .A(A[2]), .B(n39), .Z(\ab[2][7] ) );
  INVERT_D U8 ( .A(\CARRYB[1][2] ), .Z(n3) );
  INVERT_E U9 ( .A(n3), .Z(n4) );
  INVERT_D U10 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U15 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U16 ( .A(n9), .Z(n10) );
  AND2_H U17 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U18 ( .A(n28), .Z(n29) );
  AND2_H U19 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U20 ( .A(n24), .B(n44), .Z(\ab[2][2] ) );
  INVERT_H U21 ( .A(\A2[3] ), .Z(n11) );
  INVERT_H U22 ( .A(n11), .Z(n12) );
  AND2_I U23 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A2[3] ) );
  XOR2_D U24 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U26 ( .A(n13), .Z(n14) );
  AND2_H U27 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U28 ( .A(\CARRYB[1][3] ), .Z(n15) );
  INVERT_E U29 ( .A(n15), .Z(n16) );
  AND2_H U30 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n17) );
  INVERT_E U32 ( .A(n17), .Z(n18) );
  AND2_H U33 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n19) );
  INVERT_E U35 ( .A(n19), .Z(n20) );
  AND2_H U36 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_D U37 ( .A(B[6]), .B(n35), .Z(\ab[3][6] ) );
  INVERT_N U38 ( .A(ZA), .Z(n35) );
  BUFFER_J U39 ( .A(\CARRYB[3][0] ), .Z(n21) );
  AND2_J U40 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_J U41 ( .A(n22), .Z(n23) );
  NOR2_D U42 ( .A(n24), .B(n46), .Z(\ab[2][0] ) );
  INVERT_I U43 ( .A(B[0]), .Z(n46) );
  NOR2_D U44 ( .A(n24), .B(n45), .Z(\ab[2][1] ) );
  INVERT_I U45 ( .A(B[1]), .Z(n45) );
  NOR2_D U46 ( .A(n23), .B(n41), .Z(\ab[2][5] ) );
  INVERT_I U47 ( .A(B[5]), .Z(n41) );
  NOR2_E U48 ( .A(n37), .B(n45), .Z(\ab[1][1] ) );
  NOR2_E U49 ( .A(n37), .B(n46), .Z(\ab[1][0] ) );
  NOR2_E U50 ( .A(n41), .B(n37), .Z(\ab[1][5] ) );
  NOR2_E U51 ( .A(n37), .B(n44), .Z(\ab[1][2] ) );
  INVERT_M U52 ( .A(A[1]), .Z(n37) );
  NOR2_E U53 ( .A(n42), .B(n37), .Z(\ab[1][4] ) );
  NOR2_D U54 ( .A(n23), .B(n42), .Z(\ab[2][4] ) );
  INVERT_I U55 ( .A(B[4]), .Z(n42) );
  NOR2_E U56 ( .A(n43), .B(n37), .Z(\ab[1][3] ) );
  NOR2_D U57 ( .A(n23), .B(n43), .Z(\ab[2][3] ) );
  INVERT_I U58 ( .A(B[3]), .Z(n43) );
  INVERT_I U59 ( .A(B[2]), .Z(n44) );
  INVERT_I U60 ( .A(n36), .Z(n22) );
  INVERT_I U61 ( .A(n22), .Z(n24) );
  NOR2_E U62 ( .A(n42), .B(n38), .Z(\ab[0][4] ) );
  NOR2_E U63 ( .A(n41), .B(n38), .Z(\ab[0][5] ) );
  NOR2_E U64 ( .A(n38), .B(n44), .Z(\ab[0][2] ) );
  NOR2_E U65 ( .A(n38), .B(n45), .Z(\ab[0][1] ) );
  NOR2_E U66 ( .A(n40), .B(n38), .Z(\ab[0][6] ) );
  NOR2_E U67 ( .A(n43), .B(n38), .Z(\ab[0][3] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n38) );
  AND2_H U69 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U70 ( .A(\A2[5] ), .Z(n31) );
  INVERT_I U71 ( .A(\A2[7] ), .Z(n30) );
  INVERT_H U72 ( .A(\A1[7] ), .Z(n25) );
  INVERT_I U73 ( .A(n25), .Z(n26) );
  NOR2_E U74 ( .A(n40), .B(n37), .Z(\ab[1][6] ) );
  INVERT_H U75 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U76 ( .A(n39), .B(n35), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n39), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n39) );
  NOR2_D U79 ( .A(B[4]), .B(n35), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n35), .Z(\ab[3][2] ) );
  NAND2_E U81 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U83 ( .A(B[3]), .B(n35), .Z(\ab[3][3] ) );
  INVERT_I U84 ( .A(B[6]), .Z(n40) );
  OR2_I U85 ( .A(A[1]), .B(n39), .Z(\ab[1][7] ) );
  AND2_H U86 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U87 ( .A(n46), .B(n38), .Z(PRODUCT[0]) );
  INVERT_H U88 ( .A(\ab[1][7] ), .Z(n32) );
  OR2_J U89 ( .A(n23), .B(n40), .Z(\ab[2][6] ) );
  INVERT_H U90 ( .A(\ab[2][6] ), .Z(n33) );
  AND2_H U91 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U92 ( .A(A[2]), .Z(n36) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n34) );
endmodule


module dsp_slice_31 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_31_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_31_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_30_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_30_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59, n60, n61, n62, n63;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n34), .Z(n32) );
  INVERT_E U3 ( .A(n4), .Z(n31) );
  NOR2_D U4 ( .A(B[4]), .B(A[4]), .Z(n57) );
  AO21_F U5 ( .A1(n36), .A2(n19), .B(n6), .Z(n1) );
  AO21_F U6 ( .A1(n38), .A2(n60), .B(n30), .Z(n2) );
  AND2_H U7 ( .A(B[4]), .B(A[4]), .Z(n58) );
  INVERT_D U8 ( .A(n58), .Z(n3) );
  OA21_H U9 ( .A1(A[8]), .A2(n33), .B(B[8]), .Z(n44) );
  XOR2_B U10 ( .A(n45), .B(n33), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n61) );
  INVERT_D U12 ( .A(n61), .Z(n4) );
  INVERT_H U13 ( .A(n50), .Z(n5) );
  INVERT_H U14 ( .A(n5), .Z(n6) );
  AND2_I U15 ( .A(B[6]), .B(A[6]), .Z(n50) );
  INVERT_E U16 ( .A(n20), .Z(n18) );
  INVERT_E U17 ( .A(n21), .Z(n7) );
  INVERT_H U18 ( .A(n7), .Z(n8) );
  INVERT_E U19 ( .A(n23), .Z(n9) );
  INVERT_H U20 ( .A(n9), .Z(n10) );
  INVERT_F U21 ( .A(n57), .Z(n25) );
  INVERT_E U22 ( .A(n31), .Z(n29) );
  NAND2BAL_E U23 ( .A(n35), .B(n47), .Z(n48) );
  NAND2_F U24 ( .A(B[7]), .B(A[7]), .Z(n47) );
  INVERT_E U25 ( .A(n51), .Z(n36) );
  INVERT_E U26 ( .A(n62), .Z(n38) );
  INVERT_H U27 ( .A(n15), .Z(n16) );
  INVERT_E U28 ( .A(n17), .Z(n15) );
  XOR2_E U29 ( .A(B[9]), .B(A[9]), .Z(n41) );
  NAND2_E U30 ( .A(n37), .B(n16), .Z(n56) );
  INVERT_D U31 ( .A(n42), .Z(n11) );
  INVERT_E U32 ( .A(n11), .Z(n12) );
  AO21_E U33 ( .A1(n33), .A2(A[8]), .B(n44), .Z(n42) );
  XOR2_C U34 ( .A(n41), .B(n12), .Z(SUM[9]) );
  XNOR2_C U35 ( .A(n59), .B(n13), .Z(SUM[4]) );
  NOR2_C U36 ( .A(n8), .B(n26), .Z(n59) );
  XOR2_B U37 ( .A(B[8]), .B(A[8]), .Z(n45) );
  INVERT_D U38 ( .A(B[2]), .Z(n40) );
  CLKI_O U39 ( .A(n32), .Z(n33) );
  INVERT_H U40 ( .A(n2), .Z(n13) );
  INVERT_H U41 ( .A(n1), .Z(n14) );
  AND2_H U42 ( .A(B[5]), .B(A[5]), .Z(n55) );
  INVERT_D U43 ( .A(n55), .Z(n17) );
  INVERT_F U44 ( .A(n18), .Z(n19) );
  OA21_F U45 ( .A1(n53), .A2(n24), .B(n16), .Z(n49) );
  INVERT_D U46 ( .A(n49), .Z(n20) );
  INVERT_D U47 ( .A(n3), .Z(n21) );
  INVERT_F U48 ( .A(n8), .Z(n22) );
  INVERT_D U49 ( .A(n54), .Z(n23) );
  INVERT_F U50 ( .A(n10), .Z(n24) );
  OA21_F U51 ( .A1(n26), .A2(n13), .B(n22), .Z(n54) );
  INVERT_F U52 ( .A(n25), .Z(n26) );
  INVERT_E U53 ( .A(n40), .Z(n27) );
  INVERT_H U54 ( .A(n27), .Z(n28) );
  INVERT_F U55 ( .A(n29), .Z(n30) );
  OA21_F U56 ( .A1(n46), .A2(n14), .B(n47), .Z(n43) );
  INVERT_D U57 ( .A(n43), .Z(n34) );
  XOR2_B U58 ( .A(n60), .B(n63), .Z(SUM[3]) );
  NOR2_C U59 ( .A(n30), .B(n62), .Z(n63) );
  NOR2_E U60 ( .A(B[3]), .B(A[3]), .Z(n62) );
  XOR2_B U61 ( .A(n48), .B(n14), .Z(SUM[7]) );
  INVERT_E U62 ( .A(n46), .Z(n35) );
  NOR2_E U63 ( .A(B[7]), .B(A[7]), .Z(n46) );
  XOR2_B U64 ( .A(n52), .B(n19), .Z(SUM[6]) );
  NOR2_C U65 ( .A(n6), .B(n51), .Z(n52) );
  NOR2_E U66 ( .A(B[6]), .B(A[6]), .Z(n51) );
  XOR2_B U67 ( .A(n56), .B(n24), .Z(SUM[5]) );
  INVERT_E U68 ( .A(n53), .Z(n37) );
  NOR2_E U69 ( .A(B[5]), .B(A[5]), .Z(n53) );
  NOR2_F U70 ( .A(n28), .B(n39), .Z(n60) );
  INVERT_H U71 ( .A(A[2]), .Z(n39) );
  AOI21_A U72 ( .A1(n28), .A2(n39), .B(n60), .Z(SUM[2]) );
endmodule


module dsp_slice_30_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(n16), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(\CARRYB[1][5] ), .CIN(\SUMB[1][6] ), 
        .COUT(\CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_30_DW01_add_1 FS_1 ( .A({n34, n21, n26, n24, \A1[5] , n12, n18, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n9, n30, \A2[6] , n29, n19, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_D S14_7 ( .A(n35), .B(n38), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S3_2_6 ( .A(n33), .B(n7), .CIN(n32), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n31), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n5), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n27), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_E S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n24) );
  NOR2_D U3 ( .A(n36), .B(n44), .Z(\ab[2][1] ) );
  INVERT_H U4 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U5 ( .A(B[1]), .B(n35), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[3]), .B(n35), .Z(\ab[3][3] ) );
  NOR2_D U7 ( .A(n36), .B(n41), .Z(\ab[2][4] ) );
  NOR2_C U8 ( .A(n36), .B(n43), .Z(\ab[2][2] ) );
  INVERT_M U9 ( .A(A[2]), .Z(n36) );
  INVERT_H U10 ( .A(\A2[4] ), .Z(n19) );
  NAND2BAL_E U11 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_E U12 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_D U14 ( .A(\CARRYB[1][3] ), .Z(n4) );
  INVERT_E U15 ( .A(n4), .Z(n5) );
  INVERT_D U16 ( .A(\CARRYB[1][6] ), .Z(n6) );
  INVERT_E U17 ( .A(n6), .Z(n7) );
  NAND2BAL_E U18 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U19 ( .A(\A2[8] ), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  AND2_I U21 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U22 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_F U25 ( .A(\ab[0][6] ), .Z(n10) );
  INVERT_H U26 ( .A(n10), .Z(n11) );
  NOR2_D U27 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  CLKI_O U28 ( .A(n20), .Z(n21) );
  AND2_H U29 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U30 ( .A(B[0]), .B(n35), .Z(\ab[3][0] ) );
  XNOR2_C U31 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_F U32 ( .A(\A1[4] ), .Z(n12) );
  INVERT_D U33 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U34 ( .A(n13), .Z(n14) );
  AND2_H U35 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U36 ( .A(\CARRYB[1][1] ), .Z(n15) );
  INVERT_E U37 ( .A(n15), .Z(n16) );
  AND2_H U38 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  NOR2_D U39 ( .A(B[6]), .B(n35), .Z(\ab[3][6] ) );
  INVERT_N U40 ( .A(ZA), .Z(n35) );
  NOR2_D U41 ( .A(n36), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U42 ( .A(B[0]), .Z(n45) );
  CLKI_K U43 ( .A(\A1[3] ), .Z(n17) );
  INVERT_H U44 ( .A(n17), .Z(n18) );
  XOR2_B U45 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  CLKI_K U46 ( .A(\A1[8] ), .Z(n20) );
  XOR2_B U47 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  INVERT_N U48 ( .A(A[1]), .Z(n23) );
  NOR2_E U49 ( .A(n23), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U50 ( .A(n41), .B(n23), .Z(\ab[1][4] ) );
  NOR2_E U51 ( .A(n23), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U52 ( .A(n23), .B(n42), .Z(\ab[1][3] ) );
  NOR2_F U53 ( .A(n40), .B(n23), .Z(\ab[1][5] ) );
  NOR2_E U54 ( .A(n23), .B(n44), .Z(\ab[1][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n44) );
  INVERT_I U56 ( .A(B[2]), .Z(n43) );
  NOR2_E U57 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U58 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  NOR2_E U59 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U60 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  NOR2_E U61 ( .A(n41), .B(n37), .Z(\ab[0][4] ) );
  INVERT_M U62 ( .A(A[0]), .Z(n37) );
  INVERT_I U63 ( .A(\A2[7] ), .Z(n30) );
  INVERT_I U64 ( .A(B[5]), .Z(n40) );
  INVERT_I U65 ( .A(B[4]), .Z(n41) );
  NOR2_E U66 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_H U67 ( .A(\A1[7] ), .Z(n25) );
  INVERT_I U68 ( .A(n25), .Z(n26) );
  NOR2_E U69 ( .A(n39), .B(n23), .Z(\ab[1][6] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][4] ), .Z(n27) );
  NOR2_D U71 ( .A(n38), .B(n35), .Z(\ab[3][7] ) );
  INVERT_K U72 ( .A(ZB), .Z(n38) );
  NOR2_D U73 ( .A(n36), .B(n40), .Z(\ab[2][5] ) );
  AND2_I U74 ( .A(\ab[1][5] ), .B(n11), .Z(\CARRYB[1][5] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n42) );
  NOR2_C U76 ( .A(n36), .B(n42), .Z(\ab[2][3] ) );
  AND2_H U77 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_D U78 ( .A(B[5]), .B(n35), .Z(\ab[3][5] ) );
  NOR2_D U79 ( .A(B[2]), .B(n35), .Z(\ab[3][2] ) );
  NOR2_C U80 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  OR2_I U81 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U82 ( .A(\A2[5] ), .Z(n28) );
  INVERT_H U83 ( .A(n28), .Z(n29) );
  AND2_I U84 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U85 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U86 ( .A(B[4]), .B(n35), .Z(\ab[3][4] ) );
  INVERT_I U87 ( .A(B[6]), .Z(n39) );
  NAND2_E U88 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U89 ( .A(\CARRYB[1][2] ), .Z(n31) );
  INVERT_H U90 ( .A(\ab[1][7] ), .Z(n32) );
  OR2_J U91 ( .A(n36), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U92 ( .A(\ab[2][6] ), .Z(n33) );
  AND2_H U93 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U94 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U97 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(n11), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n34) );
endmodule


module dsp_slice_30 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n6, n7, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_30_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_30_DW02_mult_0 mult_32 ( .A({sample_out[3], n7, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n6) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_J U4 ( .A(n8), .Z(n9) );
  INVERT_I U5 ( .A(n6), .Z(n7) );
  INVERT_H U6 ( .A(n16), .Z(n2) );
  INVERT_J U7 ( .A(n12), .Z(n13) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n4), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_29_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_29_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_D U3 ( .A(B[2]), .Z(n36) );
  INVERT_E U4 ( .A(n12), .Z(n10) );
  AO21_F U5 ( .A1(n32), .A2(n16), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n34), .A2(n56), .B(n27), .Z(n2) );
  XOR2_B U7 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U8 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U9 ( .A(n54), .Z(n3) );
  OA21_H U10 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U11 ( .A(n41), .B(n29), .Z(SUM[8]) );
  INVERT_H U12 ( .A(n46), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U15 ( .A(n17), .Z(n15) );
  INVERT_E U16 ( .A(n18), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n20), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n24), .Z(n22) );
  BUFFER_H U21 ( .A(n53), .Z(n24) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  NAND2BAL_E U24 ( .A(n33), .B(n51), .Z(n52) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_E U26 ( .A(n47), .Z(n32) );
  INVERT_E U27 ( .A(n58), .Z(n34) );
  AO21_E U28 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U29 ( .A(n55), .B(n13), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n7), .B(n23), .Z(n55) );
  INVERT_E U31 ( .A(n10), .Z(n11) );
  AND2_H U32 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U33 ( .A(n57), .Z(n12) );
  XOR2_B U34 ( .A(B[8]), .B(A[8]), .Z(n41) );
  CLKI_O U35 ( .A(n28), .Z(n29) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_H U37 ( .A(n2), .Z(n13) );
  INVERT_H U38 ( .A(n1), .Z(n14) );
  INVERT_F U39 ( .A(n15), .Z(n16) );
  OA21_F U40 ( .A1(n49), .A2(n21), .B(n51), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n17) );
  INVERT_D U42 ( .A(n3), .Z(n18) );
  INVERT_F U43 ( .A(n7), .Z(n19) );
  INVERT_D U44 ( .A(n50), .Z(n20) );
  INVERT_F U45 ( .A(n9), .Z(n21) );
  OA21_F U46 ( .A1(n23), .A2(n13), .B(n19), .Z(n50) );
  INVERT_F U47 ( .A(n22), .Z(n23) );
  INVERT_E U48 ( .A(n36), .Z(n25) );
  INVERT_H U49 ( .A(n25), .Z(n26) );
  INVERT_F U50 ( .A(n11), .Z(n27) );
  OA21_F U51 ( .A1(n42), .A2(n14), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n27), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n14), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n16), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n5), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n21), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n26), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n26), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_29_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n16), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n18), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n20), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_29_DW01_add_1 FS_1 ( .A({n34, n29, n26, n27, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n30, \A2[6] , 
        n31, \A2[4] , n12, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n33), .B(n6), .CIN(n32), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n4), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n35), .B(n39), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(n2), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n27) );
  NOR2_D U4 ( .A(B[0]), .B(n35), .Z(\ab[3][0] ) );
  NOR2_D U5 ( .A(B[1]), .B(n35), .Z(n2) );
  NOR2_D U6 ( .A(B[5]), .B(n35), .Z(\ab[3][5] ) );
  NOR2_D U7 ( .A(A[2]), .B(n39), .Z(\ab[2][7] ) );
  INVERT_D U8 ( .A(\CARRYB[1][2] ), .Z(n3) );
  INVERT_E U9 ( .A(n3), .Z(n4) );
  INVERT_D U10 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U15 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U16 ( .A(n9), .Z(n10) );
  AND2_H U17 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U18 ( .A(n28), .Z(n29) );
  AND2_H U19 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U20 ( .A(n24), .B(n44), .Z(\ab[2][2] ) );
  INVERT_H U21 ( .A(\A2[3] ), .Z(n11) );
  INVERT_H U22 ( .A(n11), .Z(n12) );
  AND2_I U23 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A2[3] ) );
  XOR2_D U24 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U26 ( .A(n13), .Z(n14) );
  AND2_H U27 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U28 ( .A(\CARRYB[1][3] ), .Z(n15) );
  INVERT_E U29 ( .A(n15), .Z(n16) );
  AND2_H U30 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n17) );
  INVERT_E U32 ( .A(n17), .Z(n18) );
  AND2_H U33 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n19) );
  INVERT_E U35 ( .A(n19), .Z(n20) );
  AND2_H U36 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_D U37 ( .A(B[6]), .B(n35), .Z(\ab[3][6] ) );
  INVERT_N U38 ( .A(ZA), .Z(n35) );
  BUFFER_J U39 ( .A(\CARRYB[3][0] ), .Z(n21) );
  AND2_J U40 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_J U41 ( .A(n22), .Z(n23) );
  NOR2_D U42 ( .A(n24), .B(n46), .Z(\ab[2][0] ) );
  INVERT_I U43 ( .A(B[0]), .Z(n46) );
  NOR2_D U44 ( .A(n24), .B(n45), .Z(\ab[2][1] ) );
  INVERT_I U45 ( .A(B[1]), .Z(n45) );
  NOR2_D U46 ( .A(n23), .B(n41), .Z(\ab[2][5] ) );
  INVERT_I U47 ( .A(B[5]), .Z(n41) );
  NOR2_E U48 ( .A(n37), .B(n45), .Z(\ab[1][1] ) );
  NOR2_E U49 ( .A(n37), .B(n46), .Z(\ab[1][0] ) );
  NOR2_E U50 ( .A(n41), .B(n37), .Z(\ab[1][5] ) );
  NOR2_E U51 ( .A(n37), .B(n44), .Z(\ab[1][2] ) );
  INVERT_M U52 ( .A(A[1]), .Z(n37) );
  NOR2_E U53 ( .A(n42), .B(n37), .Z(\ab[1][4] ) );
  NOR2_D U54 ( .A(n23), .B(n42), .Z(\ab[2][4] ) );
  INVERT_I U55 ( .A(B[4]), .Z(n42) );
  NOR2_E U56 ( .A(n43), .B(n37), .Z(\ab[1][3] ) );
  NOR2_D U57 ( .A(n23), .B(n43), .Z(\ab[2][3] ) );
  INVERT_I U58 ( .A(B[3]), .Z(n43) );
  INVERT_I U59 ( .A(B[2]), .Z(n44) );
  INVERT_I U60 ( .A(n36), .Z(n22) );
  INVERT_I U61 ( .A(n22), .Z(n24) );
  NOR2_E U62 ( .A(n42), .B(n38), .Z(\ab[0][4] ) );
  NOR2_E U63 ( .A(n41), .B(n38), .Z(\ab[0][5] ) );
  NOR2_E U64 ( .A(n38), .B(n44), .Z(\ab[0][2] ) );
  NOR2_E U65 ( .A(n38), .B(n45), .Z(\ab[0][1] ) );
  NOR2_E U66 ( .A(n40), .B(n38), .Z(\ab[0][6] ) );
  NOR2_E U67 ( .A(n43), .B(n38), .Z(\ab[0][3] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n38) );
  AND2_H U69 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U70 ( .A(\A2[5] ), .Z(n31) );
  INVERT_I U71 ( .A(\A2[7] ), .Z(n30) );
  INVERT_H U72 ( .A(\A1[7] ), .Z(n25) );
  INVERT_I U73 ( .A(n25), .Z(n26) );
  NOR2_E U74 ( .A(n40), .B(n37), .Z(\ab[1][6] ) );
  INVERT_H U75 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U76 ( .A(n39), .B(n35), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n39), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n39) );
  NOR2_D U79 ( .A(B[4]), .B(n35), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n35), .Z(\ab[3][2] ) );
  NAND2_E U81 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U83 ( .A(B[3]), .B(n35), .Z(\ab[3][3] ) );
  INVERT_I U84 ( .A(B[6]), .Z(n40) );
  OR2_I U85 ( .A(A[1]), .B(n39), .Z(\ab[1][7] ) );
  AND2_H U86 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U87 ( .A(n46), .B(n38), .Z(PRODUCT[0]) );
  INVERT_H U88 ( .A(\ab[1][7] ), .Z(n32) );
  OR2_J U89 ( .A(n23), .B(n40), .Z(\ab[2][6] ) );
  INVERT_H U90 ( .A(\ab[2][6] ), .Z(n33) );
  AND2_H U91 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U92 ( .A(A[2]), .Z(n36) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n34) );
endmodule


module dsp_slice_29 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_29_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_29_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_28_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_28_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n25), .Z(n23) );
  INVERT_D U3 ( .A(B[2]), .Z(n32) );
  INVERT_E U4 ( .A(n3), .Z(n22) );
  AO21_F U5 ( .A1(n27), .A2(n14), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n30), .A2(n52), .B(n21), .Z(n2) );
  XOR2_B U7 ( .A(n33), .B(n34), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n24), .B(B[8]), .Z(n36) );
  XOR2_B U9 ( .A(n37), .B(n24), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n53) );
  INVERT_D U11 ( .A(n53), .Z(n3) );
  INVERT_H U12 ( .A(n42), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n42) );
  INVERT_E U15 ( .A(n15), .Z(n13) );
  INVERT_E U16 ( .A(n16), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n22), .Z(n20) );
  NAND2BAL_E U19 ( .A(n26), .B(n39), .Z(n40) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n39) );
  INVERT_E U21 ( .A(n43), .Z(n27) );
  INVERT_E U22 ( .A(n54), .Z(n30) );
  INVERT_H U23 ( .A(n10), .Z(n11) );
  INVERT_E U24 ( .A(n12), .Z(n10) );
  INVERT_F U25 ( .A(n50), .Z(n29) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n50) );
  NAND2_E U27 ( .A(n28), .B(n11), .Z(n48) );
  AO21_E U28 ( .A1(n24), .A2(A[8]), .B(n36), .Z(n34) );
  XNOR2_C U29 ( .A(n51), .B(n8), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n29), .B(n49), .Z(n51) );
  XOR2_C U31 ( .A(B[8]), .B(A[8]), .Z(n37) );
  CLKI_O U32 ( .A(n23), .Z(n24) );
  INVERT_H U33 ( .A(n2), .Z(n8) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  AND2_H U35 ( .A(B[5]), .B(A[5]), .Z(n47) );
  INVERT_D U36 ( .A(n47), .Z(n12) );
  INVERT_F U37 ( .A(n13), .Z(n14) );
  OA21_F U38 ( .A1(n45), .A2(n17), .B(n11), .Z(n41) );
  INVERT_D U39 ( .A(n41), .Z(n15) );
  INVERT_D U40 ( .A(n46), .Z(n16) );
  INVERT_F U41 ( .A(n7), .Z(n17) );
  OA21_F U42 ( .A1(n49), .A2(n8), .B(n50), .Z(n46) );
  NOR2_E U43 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_E U44 ( .A(n32), .Z(n18) );
  INVERT_H U45 ( .A(n18), .Z(n19) );
  INVERT_F U46 ( .A(n20), .Z(n21) );
  OA21_F U47 ( .A1(n38), .A2(n9), .B(n39), .Z(n35) );
  INVERT_D U48 ( .A(n35), .Z(n25) );
  XOR2_B U49 ( .A(n52), .B(n55), .Z(SUM[3]) );
  NOR2_C U50 ( .A(n21), .B(n54), .Z(n55) );
  NOR2_E U51 ( .A(B[3]), .B(A[3]), .Z(n54) );
  XOR2_B U52 ( .A(n40), .B(n9), .Z(SUM[7]) );
  INVERT_E U53 ( .A(n38), .Z(n26) );
  NOR2_E U54 ( .A(B[7]), .B(A[7]), .Z(n38) );
  XOR2_B U55 ( .A(n44), .B(n14), .Z(SUM[6]) );
  NOR2_C U56 ( .A(n5), .B(n43), .Z(n44) );
  NOR2_E U57 ( .A(B[6]), .B(A[6]), .Z(n43) );
  XOR2_B U58 ( .A(n48), .B(n17), .Z(SUM[5]) );
  INVERT_E U59 ( .A(n45), .Z(n28) );
  NOR2_E U60 ( .A(B[5]), .B(A[5]), .Z(n45) );
  NOR2_F U61 ( .A(n19), .B(n31), .Z(n52) );
  INVERT_H U62 ( .A(A[2]), .Z(n31) );
  XOR2_B U63 ( .A(B[9]), .B(A[9]), .Z(n33) );
  AOI21_A U64 ( .A1(n19), .A2(n31), .B(n52), .Z(SUM[2]) );
endmodule


module dsp_slice_28_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(\CARRYB[1][4] ), .CIN(\SUMB[1][5] ), 
        .COUT(\CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_28_DW01_add_1 FS_1 ( .A({n36, n29, n27, n25, \A1[5] , \A1[4] , n20, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n21, n32, \A2[6] , n31, n16, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n6), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n33), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n41), .B(n37), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n30), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n8), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n11), .B(n10), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_E S5_6 ( .A(n12), .B(\CARRYB[2][6] ), .CIN(n4), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n11) );
  NOR2_D U5 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U8 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n37), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  INVERT_N U11 ( .A(ZA), .Z(n37) );
  OR2_J U12 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_I U13 ( .A(n15), .Z(n16) );
  INVERT_F U14 ( .A(n17), .Z(n15) );
  INVERT_H U15 ( .A(\A2[8] ), .Z(n21) );
  NAND2_E U16 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_E U17 ( .A(\ab[2][7] ), .Z(n3) );
  INVERT_H U18 ( .A(n3), .Z(n4) );
  INVERT_D U19 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U20 ( .A(n5), .Z(n6) );
  NAND2BAL_E U21 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_I U22 ( .A(n40), .Z(n23) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U24 ( .A(\CARRYB[1][1] ), .Z(n7) );
  INVERT_E U25 ( .A(n7), .Z(n8) );
  AND2_H U26 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U27 ( .A(\CARRYB[1][3] ), .Z(n9) );
  INVERT_E U28 ( .A(n9), .Z(n10) );
  AND2_H U29 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U30 ( .A(A[2]), .Z(n38) );
  INVERT_I U31 ( .A(n28), .Z(n29) );
  AND2_H U32 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U33 ( .A(A[0]), .Z(n40) );
  INVERT_E U34 ( .A(\ab[3][6] ), .Z(n12) );
  INVERT_D U35 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_E U38 ( .A(n39), .B(n42), .Z(\ab[1][6] ) );
  NOR2_D U39 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U40 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  BUFFER_H U41 ( .A(\A2[4] ), .Z(n17) );
  AND2_H U42 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U43 ( .A(\ab[1][4] ), .Z(n18) );
  INVERT_H U44 ( .A(n18), .Z(n19) );
  INVERT_H U45 ( .A(n2), .Z(n20) );
  XOR2_D U46 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_E U47 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n48) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  INVERT_I U54 ( .A(B[2]), .Z(n46) );
  INVERT_M U55 ( .A(n23), .Z(n24) );
  NOR2_E U56 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U57 ( .A(n45), .B(n24), .Z(\ab[0][3] ) );
  NOR2_E U58 ( .A(n24), .B(n46), .Z(\ab[0][2] ) );
  NOR2_E U59 ( .A(n24), .B(n47), .Z(\ab[0][1] ) );
  NOR2_F U60 ( .A(n43), .B(n24), .Z(\ab[0][5] ) );
  INVERT_I U61 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U62 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_M U63 ( .A(A[1]), .Z(n39) );
  INVERT_I U64 ( .A(B[4]), .Z(n44) );
  INVERT_H U65 ( .A(\A1[7] ), .Z(n26) );
  INVERT_I U66 ( .A(n26), .Z(n27) );
  INVERT_H U67 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U68 ( .A(n38), .B(n44), .Z(\ab[2][4] ) );
  AND2_I U69 ( .A(n19), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_D U70 ( .A(n39), .B(n44), .Z(\ab[1][4] ) );
  BUFFER_H U71 ( .A(\CARRYB[1][5] ), .Z(n30) );
  INVERT_I U72 ( .A(B[5]), .Z(n43) );
  NOR2_E U73 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U74 ( .A(n42), .B(n24), .Z(\ab[0][6] ) );
  AND2_H U75 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U76 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U77 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U78 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U79 ( .A(ZB), .Z(n41) );
  NOR2_D U80 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U81 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U82 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  OR2_I U83 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  NAND2_E U84 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U85 ( .A(\A2[5] ), .Z(n31) );
  NOR2_D U86 ( .A(n24), .B(n48), .Z(PRODUCT[0]) );
  NOR2_D U87 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U88 ( .A(B[6]), .Z(n42) );
  NAND2_E U89 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U90 ( .A(\CARRYB[1][2] ), .Z(n33) );
  INVERT_H U91 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U92 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U93 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U94 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U95 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U96 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U97 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U98 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U100 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U101 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U102 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U103 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U104 ( .A(\ab[0][5] ), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U105 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U106 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U107 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_28 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n6, n7, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_28_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_28_DW02_mult_0 mult_32 ( .A({sample_out[3], n7, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n6) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_I U5 ( .A(n6), .Z(n7) );
  INVERT_I U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERTBAL_J U8 ( .A(n8), .Z(n9) );
  INVERT_H U9 ( .A(n4), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_27_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_27_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_D U3 ( .A(B[2]), .Z(n36) );
  INVERT_E U4 ( .A(n12), .Z(n10) );
  AO21_F U5 ( .A1(n32), .A2(n16), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n34), .A2(n56), .B(n27), .Z(n2) );
  XOR2_B U7 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U8 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U9 ( .A(n54), .Z(n3) );
  OA21_H U10 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U11 ( .A(n41), .B(n29), .Z(SUM[8]) );
  INVERT_H U12 ( .A(n46), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U15 ( .A(n17), .Z(n15) );
  INVERT_E U16 ( .A(n18), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n20), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n24), .Z(n22) );
  BUFFER_H U21 ( .A(n53), .Z(n24) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  NAND2BAL_E U24 ( .A(n33), .B(n51), .Z(n52) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_E U26 ( .A(n47), .Z(n32) );
  INVERT_E U27 ( .A(n58), .Z(n34) );
  AO21_E U28 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U29 ( .A(n55), .B(n13), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n7), .B(n23), .Z(n55) );
  INVERT_E U31 ( .A(n10), .Z(n11) );
  AND2_H U32 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U33 ( .A(n57), .Z(n12) );
  XOR2_B U34 ( .A(B[8]), .B(A[8]), .Z(n41) );
  CLKI_O U35 ( .A(n28), .Z(n29) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_H U37 ( .A(n2), .Z(n13) );
  INVERT_H U38 ( .A(n1), .Z(n14) );
  INVERT_F U39 ( .A(n15), .Z(n16) );
  OA21_F U40 ( .A1(n49), .A2(n21), .B(n51), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n17) );
  INVERT_D U42 ( .A(n3), .Z(n18) );
  INVERT_F U43 ( .A(n7), .Z(n19) );
  INVERT_D U44 ( .A(n50), .Z(n20) );
  INVERT_F U45 ( .A(n9), .Z(n21) );
  OA21_F U46 ( .A1(n23), .A2(n13), .B(n19), .Z(n50) );
  INVERT_F U47 ( .A(n22), .Z(n23) );
  INVERT_E U48 ( .A(n36), .Z(n25) );
  INVERT_H U49 ( .A(n25), .Z(n26) );
  INVERT_F U50 ( .A(n11), .Z(n27) );
  OA21_F U51 ( .A1(n42), .A2(n14), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n27), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n14), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n16), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n5), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n21), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n26), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n26), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_27_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n14), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n16), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n18), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n20), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_27_DW01_add_1 FS_1 ( .A({n34, n29, n26, n27, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n30, \A2[6] , 
        n31, \A2[4] , n12, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n33), .B(n6), .CIN(n32), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n4), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n35), .B(n39), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(n2), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n27) );
  NOR2_D U4 ( .A(B[0]), .B(n35), .Z(\ab[3][0] ) );
  NOR2_D U5 ( .A(B[1]), .B(n35), .Z(n2) );
  NOR2_D U6 ( .A(B[5]), .B(n35), .Z(\ab[3][5] ) );
  NOR2_D U7 ( .A(A[2]), .B(n39), .Z(\ab[2][7] ) );
  INVERT_D U8 ( .A(\CARRYB[1][2] ), .Z(n3) );
  INVERT_E U9 ( .A(n3), .Z(n4) );
  INVERT_D U10 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U15 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U16 ( .A(n9), .Z(n10) );
  AND2_H U17 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U18 ( .A(n28), .Z(n29) );
  AND2_H U19 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U20 ( .A(n24), .B(n44), .Z(\ab[2][2] ) );
  INVERT_H U21 ( .A(\A2[3] ), .Z(n11) );
  INVERT_H U22 ( .A(n11), .Z(n12) );
  AND2_I U23 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A2[3] ) );
  XOR2_D U24 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][0] ), .Z(n13) );
  INVERT_E U26 ( .A(n13), .Z(n14) );
  AND2_H U27 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U28 ( .A(\CARRYB[1][3] ), .Z(n15) );
  INVERT_E U29 ( .A(n15), .Z(n16) );
  AND2_H U30 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n17) );
  INVERT_E U32 ( .A(n17), .Z(n18) );
  AND2_H U33 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n19) );
  INVERT_E U35 ( .A(n19), .Z(n20) );
  AND2_H U36 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_D U37 ( .A(B[6]), .B(n35), .Z(\ab[3][6] ) );
  INVERT_N U38 ( .A(ZA), .Z(n35) );
  BUFFER_J U39 ( .A(\CARRYB[3][0] ), .Z(n21) );
  AND2_J U40 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_J U41 ( .A(n22), .Z(n23) );
  NOR2_D U42 ( .A(n24), .B(n46), .Z(\ab[2][0] ) );
  INVERT_I U43 ( .A(B[0]), .Z(n46) );
  NOR2_D U44 ( .A(n24), .B(n45), .Z(\ab[2][1] ) );
  INVERT_I U45 ( .A(B[1]), .Z(n45) );
  NOR2_D U46 ( .A(n23), .B(n41), .Z(\ab[2][5] ) );
  INVERT_I U47 ( .A(B[5]), .Z(n41) );
  NOR2_E U48 ( .A(n37), .B(n45), .Z(\ab[1][1] ) );
  NOR2_E U49 ( .A(n37), .B(n46), .Z(\ab[1][0] ) );
  NOR2_E U50 ( .A(n41), .B(n37), .Z(\ab[1][5] ) );
  NOR2_E U51 ( .A(n37), .B(n44), .Z(\ab[1][2] ) );
  INVERT_M U52 ( .A(A[1]), .Z(n37) );
  NOR2_E U53 ( .A(n42), .B(n37), .Z(\ab[1][4] ) );
  NOR2_D U54 ( .A(n23), .B(n42), .Z(\ab[2][4] ) );
  INVERT_I U55 ( .A(B[4]), .Z(n42) );
  NOR2_E U56 ( .A(n43), .B(n37), .Z(\ab[1][3] ) );
  NOR2_D U57 ( .A(n23), .B(n43), .Z(\ab[2][3] ) );
  INVERT_I U58 ( .A(B[3]), .Z(n43) );
  INVERT_I U59 ( .A(B[2]), .Z(n44) );
  INVERT_I U60 ( .A(n36), .Z(n22) );
  INVERT_I U61 ( .A(n22), .Z(n24) );
  NOR2_E U62 ( .A(n42), .B(n38), .Z(\ab[0][4] ) );
  NOR2_E U63 ( .A(n41), .B(n38), .Z(\ab[0][5] ) );
  NOR2_E U64 ( .A(n38), .B(n44), .Z(\ab[0][2] ) );
  NOR2_E U65 ( .A(n38), .B(n45), .Z(\ab[0][1] ) );
  NOR2_E U66 ( .A(n40), .B(n38), .Z(\ab[0][6] ) );
  NOR2_E U67 ( .A(n43), .B(n38), .Z(\ab[0][3] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n38) );
  AND2_H U69 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U70 ( .A(\A2[5] ), .Z(n31) );
  INVERT_I U71 ( .A(\A2[7] ), .Z(n30) );
  INVERT_H U72 ( .A(\A1[7] ), .Z(n25) );
  INVERT_I U73 ( .A(n25), .Z(n26) );
  NOR2_E U74 ( .A(n40), .B(n37), .Z(\ab[1][6] ) );
  INVERT_H U75 ( .A(\A1[8] ), .Z(n28) );
  NOR2_D U76 ( .A(n39), .B(n35), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n39), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n39) );
  NOR2_D U79 ( .A(B[4]), .B(n35), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n35), .Z(\ab[3][2] ) );
  NAND2_E U81 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U83 ( .A(B[3]), .B(n35), .Z(\ab[3][3] ) );
  INVERT_I U84 ( .A(B[6]), .Z(n40) );
  OR2_I U85 ( .A(A[1]), .B(n39), .Z(\ab[1][7] ) );
  AND2_H U86 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U87 ( .A(n46), .B(n38), .Z(PRODUCT[0]) );
  INVERT_H U88 ( .A(\ab[1][7] ), .Z(n32) );
  OR2_J U89 ( .A(n23), .B(n40), .Z(\ab[2][6] ) );
  INVERT_H U90 ( .A(\ab[2][6] ), .Z(n33) );
  AND2_H U91 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U92 ( .A(A[2]), .Z(n36) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(n21), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n34) );
endmodule


module dsp_slice_27 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_27_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_27_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_26_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_26_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_D U3 ( .A(B[2]), .Z(n36) );
  INVERT_E U4 ( .A(n12), .Z(n10) );
  AO21_F U5 ( .A1(n32), .A2(n16), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n34), .A2(n56), .B(n27), .Z(n2) );
  XOR2_B U7 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U8 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U9 ( .A(n54), .Z(n3) );
  OA21_H U10 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U11 ( .A(n41), .B(n29), .Z(SUM[8]) );
  INVERT_H U12 ( .A(n46), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U15 ( .A(n17), .Z(n15) );
  INVERT_E U16 ( .A(n18), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n20), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  INVERT_F U20 ( .A(n24), .Z(n22) );
  BUFFER_H U21 ( .A(n53), .Z(n24) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  NAND2BAL_E U24 ( .A(n33), .B(n51), .Z(n52) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_E U26 ( .A(n47), .Z(n32) );
  INVERT_E U27 ( .A(n58), .Z(n34) );
  AO21_E U28 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U29 ( .A(n55), .B(n13), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n7), .B(n23), .Z(n55) );
  INVERT_E U31 ( .A(n10), .Z(n11) );
  AND2_H U32 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U33 ( .A(n57), .Z(n12) );
  XOR2_B U34 ( .A(B[8]), .B(A[8]), .Z(n41) );
  CLKI_O U35 ( .A(n28), .Z(n29) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_H U37 ( .A(n2), .Z(n13) );
  INVERT_H U38 ( .A(n1), .Z(n14) );
  INVERT_F U39 ( .A(n15), .Z(n16) );
  OA21_F U40 ( .A1(n49), .A2(n21), .B(n51), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n17) );
  INVERT_D U42 ( .A(n3), .Z(n18) );
  INVERT_F U43 ( .A(n7), .Z(n19) );
  INVERT_D U44 ( .A(n50), .Z(n20) );
  INVERT_F U45 ( .A(n9), .Z(n21) );
  OA21_F U46 ( .A1(n23), .A2(n13), .B(n19), .Z(n50) );
  INVERT_F U47 ( .A(n22), .Z(n23) );
  INVERT_E U48 ( .A(n36), .Z(n25) );
  INVERT_H U49 ( .A(n25), .Z(n26) );
  INVERT_F U50 ( .A(n11), .Z(n27) );
  OA21_F U51 ( .A1(n42), .A2(n14), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n27), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n14), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n16), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n5), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n21), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n26), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n26), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_26_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(\CARRYB[1][1] ), .CIN(\SUMB[1][2] ), 
        .COUT(\CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  dsp_slice_26_DW01_add_1 FS_1 ( .A({n32, n22, n19, n25, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n28, \A2[4] , n11, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n31), .B(n5), .CIN(n30), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n26), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n33), .B(n37), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n24), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n23), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n20), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S4_2 ( .A(n12), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_B S2_2_3 ( .A(n13), .B(n9), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  NOR2_D U3 ( .A(B[6]), .B(n33), .Z(\ab[3][6] ) );
  OR2_J U4 ( .A(n33), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_D U5 ( .A(n33), .B(B[0]), .Z(\ab[3][0] ) );
  NOR2_D U6 ( .A(n33), .B(B[1]), .Z(\ab[3][1] ) );
  NOR2_D U7 ( .A(n33), .B(B[5]), .Z(\ab[3][5] ) );
  INVERT_N U8 ( .A(ZA), .Z(n33) );
  INVERT_E U9 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U10 ( .A(n2), .Z(n3) );
  INVERT_H U11 ( .A(\ab[2][3] ), .Z(n13) );
  OR2_J U12 ( .A(n34), .B(n41), .Z(\ab[2][3] ) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  INVERT_J U15 ( .A(B[1]), .Z(n43) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U19 ( .A(\CARRYB[1][3] ), .Z(n8) );
  INVERT_E U20 ( .A(n8), .Z(n9) );
  AND2_H U21 ( .A(\ab[1][3] ), .B(n17), .Z(\CARRYB[1][3] ) );
  INVERT_I U22 ( .A(n21), .Z(n22) );
  AND2_H U23 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U24 ( .A(n34), .B(n40), .Z(\ab[2][4] ) );
  INVERT_H U25 ( .A(\A2[3] ), .Z(n10) );
  INVERT_H U26 ( .A(n10), .Z(n11) );
  AND2_I U27 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  XOR2_D U28 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_M U29 ( .A(A[2]), .Z(n34) );
  INVERT_E U30 ( .A(\ab[3][2] ), .Z(n12) );
  INVERT_I U31 ( .A(B[4]), .Z(n40) );
  XOR2_D U32 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  AND2_J U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_B U34 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\SUMB[1][1] ) );
  NOR2_F U35 ( .A(n43), .B(n35), .Z(\ab[1][1] ) );
  AND2_H U36 ( .A(n15), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U37 ( .A(n39), .B(n36), .Z(\ab[0][5] ) );
  INVERT_E U38 ( .A(\ab[1][4] ), .Z(n14) );
  INVERT_H U39 ( .A(n14), .Z(n15) );
  AND2_H U40 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_E U41 ( .A(n39), .B(n35), .Z(\ab[1][5] ) );
  NOR2_E U42 ( .A(n44), .B(n35), .Z(\ab[1][0] ) );
  INVERT_E U43 ( .A(\ab[0][4] ), .Z(n16) );
  INVERT_F U44 ( .A(n16), .Z(n17) );
  NOR2_C U45 ( .A(n40), .B(n36), .Z(\ab[0][4] ) );
  NOR2_E U46 ( .A(n41), .B(n35), .Z(\ab[1][3] ) );
  NOR2_E U47 ( .A(n41), .B(n36), .Z(\ab[0][3] ) );
  INVERT_I U48 ( .A(B[3]), .Z(n41) );
  AND2_H U49 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U50 ( .A(\A2[7] ), .Z(n29) );
  NOR2_C U51 ( .A(n34), .B(n44), .Z(\ab[2][0] ) );
  INVERT_I U52 ( .A(B[0]), .Z(n44) );
  NOR2_D U53 ( .A(n34), .B(n39), .Z(\ab[2][5] ) );
  INVERT_I U54 ( .A(B[5]), .Z(n39) );
  INVERT_M U55 ( .A(A[0]), .Z(n36) );
  INVERT_H U56 ( .A(\A1[7] ), .Z(n18) );
  INVERT_I U57 ( .A(n18), .Z(n19) );
  NOR2_E U58 ( .A(n38), .B(n35), .Z(\ab[1][6] ) );
  INVERT_M U59 ( .A(A[1]), .Z(n35) );
  BUFFER_H U60 ( .A(\CARRYB[1][0] ), .Z(n20) );
  AND2_H U61 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_E U62 ( .A(n43), .B(n36), .Z(\ab[0][1] ) );
  INVERT_H U63 ( .A(\A1[8] ), .Z(n21) );
  BUFFER_H U64 ( .A(\CARRYB[1][4] ), .Z(n23) );
  NOR2_C U65 ( .A(n40), .B(n35), .Z(\ab[1][4] ) );
  BUFFER_H U66 ( .A(\CARRYB[1][5] ), .Z(n24) );
  NOR2_E U67 ( .A(n38), .B(n36), .Z(\ab[0][6] ) );
  NOR2_D U68 ( .A(n37), .B(n33), .Z(\ab[3][7] ) );
  NOR2_E U69 ( .A(A[0]), .B(n37), .Z(\ab[0][7] ) );
  INVERT_K U70 ( .A(ZB), .Z(n37) );
  NOR2_D U71 ( .A(B[3]), .B(n33), .Z(\ab[3][3] ) );
  OR2_I U72 ( .A(A[1]), .B(n37), .Z(\ab[1][7] ) );
  NOR2_D U73 ( .A(n34), .B(n43), .Z(\ab[2][1] ) );
  AND2_I U74 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  NOR2_E U75 ( .A(n42), .B(n36), .Z(\ab[0][2] ) );
  BUFFER_H U76 ( .A(\CARRYB[1][2] ), .Z(n26) );
  INVERT_I U77 ( .A(B[2]), .Z(n42) );
  NOR2_E U78 ( .A(n42), .B(n35), .Z(\ab[1][2] ) );
  NOR2_C U79 ( .A(n34), .B(n42), .Z(\ab[2][2] ) );
  AND2_H U80 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_C U81 ( .A(n44), .B(n36), .Z(PRODUCT[0]) );
  NOR2_D U82 ( .A(B[4]), .B(n33), .Z(\ab[3][4] ) );
  INVERT_I U83 ( .A(B[6]), .Z(n38) );
  NOR2_C U84 ( .A(A[2]), .B(n37), .Z(\ab[2][7] ) );
  INVERT_H U85 ( .A(\A2[5] ), .Z(n27) );
  INVERT_I U86 ( .A(n27), .Z(n28) );
  AND2_I U87 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U88 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n30) );
  OR2_J U90 ( .A(n34), .B(n38), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n31) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(n17), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U101 ( .A(\ab[0][5] ), .B(n15), .Z(\SUMB[1][4] ) );
  XOR2_C U102 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U103 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U104 ( .A(\CARRYB[3][7] ), .Z(n32) );
endmodule


module dsp_slice_26 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n6, n7, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_26_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_26_DW02_mult_0 mult_32 ( .A({sample_out[3], n11, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_I U6 ( .A(n10), .Z(n11) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERTBAL_J U8 ( .A(n12), .Z(n13) );
  INVERT_H U9 ( .A(n4), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n8), .Z(n9) );
endmodule


module dsp_slice_25_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_25_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59, n60, n61, n62;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n33), .Z(n31) );
  INVERT_D U3 ( .A(B[2]), .Z(n39) );
  INVERT_E U4 ( .A(n4), .Z(n30) );
  AO21_F U5 ( .A1(n35), .A2(n17), .B(n6), .Z(n1) );
  AO21_F U6 ( .A1(n37), .A2(n59), .B(n29), .Z(n2) );
  XOR2_B U7 ( .A(n40), .B(n41), .Z(SUM[9]) );
  AND2_H U8 ( .A(B[4]), .B(A[4]), .Z(n57) );
  INVERT_D U9 ( .A(n57), .Z(n3) );
  OA21_H U10 ( .A1(A[8]), .A2(n32), .B(B[8]), .Z(n43) );
  XOR2_B U11 ( .A(n44), .B(n32), .Z(SUM[8]) );
  AND2_H U12 ( .A(B[3]), .B(A[3]), .Z(n60) );
  INVERT_D U13 ( .A(n60), .Z(n4) );
  INVERT_H U14 ( .A(n49), .Z(n5) );
  INVERT_H U15 ( .A(n5), .Z(n6) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n49) );
  INVERT_E U17 ( .A(n18), .Z(n16) );
  INVERT_E U18 ( .A(n19), .Z(n7) );
  INVERT_H U19 ( .A(n7), .Z(n8) );
  INVERT_E U20 ( .A(n21), .Z(n9) );
  INVERT_H U21 ( .A(n9), .Z(n10) );
  INVERT_F U22 ( .A(n25), .Z(n23) );
  BUFFER_H U23 ( .A(n56), .Z(n25) );
  INVERT_E U24 ( .A(n30), .Z(n28) );
  NAND2BAL_E U25 ( .A(n34), .B(n46), .Z(n47) );
  NAND2_F U26 ( .A(B[7]), .B(A[7]), .Z(n46) );
  INVERT_E U27 ( .A(n50), .Z(n35) );
  INVERT_E U28 ( .A(n61), .Z(n37) );
  INVERT_H U29 ( .A(n13), .Z(n14) );
  INVERT_E U30 ( .A(n15), .Z(n13) );
  NAND2_E U31 ( .A(n36), .B(n14), .Z(n55) );
  AO21_E U32 ( .A1(n32), .A2(A[8]), .B(n43), .Z(n41) );
  XNOR2_C U33 ( .A(n58), .B(n11), .Z(SUM[4]) );
  NOR2_C U34 ( .A(n8), .B(n24), .Z(n58) );
  NOR2_C U35 ( .A(B[4]), .B(A[4]), .Z(n56) );
  XOR2_B U36 ( .A(B[8]), .B(A[8]), .Z(n44) );
  CLKI_O U37 ( .A(n31), .Z(n32) );
  INVERT_H U38 ( .A(n2), .Z(n11) );
  INVERT_H U39 ( .A(n1), .Z(n12) );
  AND2_H U40 ( .A(B[5]), .B(A[5]), .Z(n54) );
  INVERT_D U41 ( .A(n54), .Z(n15) );
  INVERT_F U42 ( .A(n16), .Z(n17) );
  OA21_F U43 ( .A1(n52), .A2(n22), .B(n14), .Z(n48) );
  INVERT_D U44 ( .A(n48), .Z(n18) );
  INVERT_D U45 ( .A(n3), .Z(n19) );
  INVERT_F U46 ( .A(n8), .Z(n20) );
  INVERT_D U47 ( .A(n53), .Z(n21) );
  INVERT_F U48 ( .A(n10), .Z(n22) );
  OA21_F U49 ( .A1(n24), .A2(n11), .B(n20), .Z(n53) );
  INVERT_F U50 ( .A(n23), .Z(n24) );
  INVERT_E U51 ( .A(n39), .Z(n26) );
  INVERT_H U52 ( .A(n26), .Z(n27) );
  INVERT_F U53 ( .A(n28), .Z(n29) );
  OA21_F U54 ( .A1(n45), .A2(n12), .B(n46), .Z(n42) );
  INVERT_D U55 ( .A(n42), .Z(n33) );
  XOR2_B U56 ( .A(n59), .B(n62), .Z(SUM[3]) );
  NOR2_C U57 ( .A(n29), .B(n61), .Z(n62) );
  NOR2_E U58 ( .A(B[3]), .B(A[3]), .Z(n61) );
  XOR2_B U59 ( .A(n47), .B(n12), .Z(SUM[7]) );
  INVERT_E U60 ( .A(n45), .Z(n34) );
  NOR2_E U61 ( .A(B[7]), .B(A[7]), .Z(n45) );
  XOR2_B U62 ( .A(n51), .B(n17), .Z(SUM[6]) );
  NOR2_C U63 ( .A(n6), .B(n50), .Z(n51) );
  NOR2_E U64 ( .A(B[6]), .B(A[6]), .Z(n50) );
  XOR2_B U65 ( .A(n55), .B(n22), .Z(SUM[5]) );
  INVERT_E U66 ( .A(n52), .Z(n36) );
  NOR2_E U67 ( .A(B[5]), .B(A[5]), .Z(n52) );
  NOR2_F U68 ( .A(n27), .B(n38), .Z(n59) );
  INVERT_H U69 ( .A(A[2]), .Z(n38) );
  XOR2_B U70 ( .A(B[9]), .B(A[9]), .Z(n40) );
  AOI21_A U71 ( .A1(n27), .A2(n38), .B(n59), .Z(SUM[2]) );
endmodule


module dsp_slice_25_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n22), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(\CARRYB[1][5] ), .CIN(\SUMB[1][6] ), 
        .COUT(\CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_25_DW01_add_1 FS_1 ( .A({n39, n32, n30, n28, \A1[5] , n20, n23, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n12, n35, \A2[6] , n34, 
        \A2[4] , n26, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n38), .B(n10), .CIN(n37), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n36), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S14_7 ( .A(n40), .B(n44), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(n8), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n16), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_4 ( .A(n19), .B(n18), .CIN(\SUMB[1][5] ), .COUT(\CARRYB[2][4] ), 
        .SUM(\SUMB[2][4] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n28) );
  XNOR2_C U3 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(n2) );
  XNOR2_C U4 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n3) );
  INVERT_D U5 ( .A(\ab[2][4] ), .Z(n19) );
  NOR2_D U6 ( .A(B[1]), .B(n40), .Z(\ab[3][1] ) );
  NOR2_D U7 ( .A(B[0]), .B(n40), .Z(\ab[3][0] ) );
  NOR2_D U8 ( .A(n40), .B(B[3]), .Z(\ab[3][3] ) );
  NOR2_D U9 ( .A(B[6]), .B(n40), .Z(\ab[3][6] ) );
  INVERT_H U10 ( .A(n43), .Z(n4) );
  INVERT_N U11 ( .A(A[0]), .Z(n43) );
  NOR2_D U12 ( .A(n41), .B(n49), .Z(\ab[2][2] ) );
  OR2_J U13 ( .A(n41), .B(n47), .Z(\ab[2][4] ) );
  INVERT_F U14 ( .A(\ab[0][4] ), .Z(n5) );
  INVERT_H U15 ( .A(n5), .Z(n6) );
  NOR2_D U16 ( .A(n43), .B(n47), .Z(\ab[0][4] ) );
  INVERT_H U17 ( .A(\A2[3] ), .Z(n26) );
  NAND2BAL_E U18 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_E U19 ( .A(\ab[2][7] ), .Z(n7) );
  INVERT_H U20 ( .A(n7), .Z(n8) );
  INVERT_H U21 ( .A(\ab[1][1] ), .Z(n27) );
  INVERT_D U22 ( .A(\CARRYB[1][6] ), .Z(n9) );
  INVERT_E U23 ( .A(n9), .Z(n10) );
  INVERT_H U24 ( .A(\A2[8] ), .Z(n11) );
  INVERT_H U25 ( .A(n11), .Z(n12) );
  AND2_I U26 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_F U27 ( .A(\ab[0][6] ), .Z(n13) );
  INVERT_H U28 ( .A(n13), .Z(n14) );
  NOR2_D U29 ( .A(n45), .B(n43), .Z(\ab[0][6] ) );
  AND2_J U30 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U31 ( .A(\CARRYB[1][1] ), .Z(n15) );
  INVERT_E U32 ( .A(n15), .Z(n16) );
  AND2_H U33 ( .A(n27), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U34 ( .A(\CARRYB[1][4] ), .Z(n17) );
  INVERT_E U35 ( .A(n17), .Z(n18) );
  AND2_H U36 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_M U37 ( .A(A[2]), .Z(n41) );
  INVERT_I U38 ( .A(n31), .Z(n32) );
  AND2_H U39 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_H U40 ( .A(n2), .Z(n20) );
  INVERT_D U41 ( .A(\CARRYB[1][0] ), .Z(n21) );
  INVERT_E U42 ( .A(n21), .Z(n22) );
  AND2_H U43 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_D U44 ( .A(B[5]), .B(n40), .Z(\ab[3][5] ) );
  INVERT_N U45 ( .A(ZA), .Z(n40) );
  AND2_I U46 ( .A(\ab[1][3] ), .B(n6), .Z(\CARRYB[1][3] ) );
  NOR2_E U47 ( .A(n42), .B(n48), .Z(\ab[1][3] ) );
  NOR2_D U48 ( .A(n41), .B(n50), .Z(\ab[2][1] ) );
  NOR2_D U49 ( .A(n41), .B(n51), .Z(\ab[2][0] ) );
  OR2_J U50 ( .A(n42), .B(n50), .Z(\ab[1][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n50) );
  INVERT_H U52 ( .A(n3), .Z(n23) );
  NOR2_E U53 ( .A(n43), .B(n48), .Z(\ab[0][3] ) );
  AND2_H U54 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U55 ( .A(n42), .B(n49), .Z(\ab[1][2] ) );
  XOR2_B U56 ( .A(n6), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_E U57 ( .A(\ab[1][5] ), .Z(n24) );
  INVERT_H U58 ( .A(n24), .Z(n25) );
  NOR2_E U59 ( .A(n43), .B(n46), .Z(\ab[0][5] ) );
  INVERT_I U60 ( .A(B[5]), .Z(n46) );
  NOR2_E U61 ( .A(n43), .B(n50), .Z(\ab[0][1] ) );
  NOR2_E U62 ( .A(n42), .B(n47), .Z(\ab[1][4] ) );
  INVERT_M U63 ( .A(A[1]), .Z(n42) );
  INVERT_I U64 ( .A(B[4]), .Z(n47) );
  NOR2_E U65 ( .A(n43), .B(n49), .Z(\ab[0][2] ) );
  INVERT_I U66 ( .A(B[2]), .Z(n49) );
  NOR2_E U67 ( .A(n42), .B(n51), .Z(\ab[1][0] ) );
  INVERT_I U68 ( .A(B[0]), .Z(n51) );
  INVERT_I U69 ( .A(\A2[7] ), .Z(n35) );
  AND2_H U70 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_H U71 ( .A(\A1[7] ), .Z(n29) );
  INVERT_I U72 ( .A(n29), .Z(n30) );
  NOR2_E U73 ( .A(n45), .B(n42), .Z(\ab[1][6] ) );
  INVERT_H U74 ( .A(\A1[8] ), .Z(n31) );
  NOR2_D U75 ( .A(n41), .B(n46), .Z(\ab[2][5] ) );
  AND2_I U76 ( .A(n25), .B(n14), .Z(\CARRYB[1][5] ) );
  NOR2_C U77 ( .A(n42), .B(n46), .Z(\ab[1][5] ) );
  INVERT_I U78 ( .A(B[3]), .Z(n48) );
  NOR2_C U79 ( .A(n41), .B(n48), .Z(\ab[2][3] ) );
  NOR2_D U80 ( .A(n44), .B(n40), .Z(\ab[3][7] ) );
  NOR2_E U81 ( .A(n4), .B(n44), .Z(\ab[0][7] ) );
  INVERT_K U82 ( .A(ZB), .Z(n44) );
  NOR2_D U83 ( .A(B[4]), .B(n40), .Z(\ab[3][4] ) );
  NOR2_D U84 ( .A(B[2]), .B(n40), .Z(\ab[3][2] ) );
  NOR2_C U85 ( .A(A[2]), .B(n44), .Z(\ab[2][7] ) );
  INVERT_H U86 ( .A(\A2[5] ), .Z(n33) );
  INVERT_H U87 ( .A(n33), .Z(n34) );
  AND2_I U88 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U89 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U90 ( .A(B[6]), .Z(n45) );
  OR2_I U91 ( .A(A[1]), .B(n44), .Z(\ab[1][7] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][2] ), .Z(n36) );
  NOR2_D U93 ( .A(n43), .B(n51), .Z(PRODUCT[0]) );
  INVERT_H U94 ( .A(\ab[1][7] ), .Z(n37) );
  OR2_J U95 ( .A(n41), .B(n45), .Z(\ab[2][6] ) );
  INVERT_H U96 ( .A(\ab[2][6] ), .Z(n38) );
  AND2_H U97 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U98 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U99 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U100 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U101 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U102 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U103 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U104 ( .A(\ab[0][2] ), .B(n27), .Z(\SUMB[1][1] ) );
  XOR2_C U105 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U106 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U107 ( .A(n14), .B(n25), .Z(\SUMB[1][5] ) );
  XOR2_C U108 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U109 ( .A(\CARRYB[3][7] ), .Z(n39) );
endmodule


module dsp_slice_25 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_25_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_25_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_I U6 ( .A(n4), .Z(n5) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_I U8 ( .A(n12), .Z(n13) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_24_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_24_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n22), .Z(n20) );
  INVERT_D U3 ( .A(B[2]), .Z(n29) );
  INVERT_E U4 ( .A(n3), .Z(n19) );
  AO21_F U5 ( .A1(n24), .A2(n11), .B(n5), .Z(n1) );
  AO21_F U6 ( .A1(n27), .A2(n49), .B(n18), .Z(n2) );
  XOR2_B U7 ( .A(n30), .B(n31), .Z(SUM[9]) );
  OA21_H U8 ( .A1(A[8]), .A2(n21), .B(B[8]), .Z(n33) );
  XOR2_B U9 ( .A(n34), .B(n21), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n50) );
  INVERT_D U11 ( .A(n50), .Z(n3) );
  INVERT_H U12 ( .A(n39), .Z(n4) );
  INVERT_H U13 ( .A(n4), .Z(n5) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n39) );
  INVERT_E U15 ( .A(n12), .Z(n10) );
  INVERT_E U16 ( .A(n13), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  INVERT_E U18 ( .A(n19), .Z(n17) );
  NAND2BAL_E U19 ( .A(n23), .B(n36), .Z(n37) );
  NAND2_F U20 ( .A(B[7]), .B(A[7]), .Z(n36) );
  NAND2BAL_E U21 ( .A(n25), .B(n44), .Z(n45) );
  NAND2_F U22 ( .A(B[5]), .B(A[5]), .Z(n44) );
  INVERT_E U23 ( .A(n40), .Z(n24) );
  INVERT_E U24 ( .A(n51), .Z(n27) );
  INVERT_F U25 ( .A(n47), .Z(n26) );
  NAND2_F U26 ( .A(B[4]), .B(A[4]), .Z(n47) );
  AO21_E U27 ( .A1(n21), .A2(A[8]), .B(n33), .Z(n31) );
  XNOR2_C U28 ( .A(n48), .B(n8), .Z(SUM[4]) );
  NOR2_C U29 ( .A(n26), .B(n46), .Z(n48) );
  XOR2_B U30 ( .A(B[8]), .B(A[8]), .Z(n34) );
  CLKI_O U31 ( .A(n20), .Z(n21) );
  INVERT_H U32 ( .A(n2), .Z(n8) );
  INVERT_H U33 ( .A(n1), .Z(n9) );
  INVERT_F U34 ( .A(n10), .Z(n11) );
  OA21_F U35 ( .A1(n42), .A2(n14), .B(n44), .Z(n38) );
  INVERT_D U36 ( .A(n38), .Z(n12) );
  INVERT_D U37 ( .A(n43), .Z(n13) );
  INVERT_F U38 ( .A(n7), .Z(n14) );
  OA21_F U39 ( .A1(n46), .A2(n8), .B(n47), .Z(n43) );
  NOR2_E U40 ( .A(B[4]), .B(A[4]), .Z(n46) );
  INVERT_E U41 ( .A(n29), .Z(n15) );
  INVERT_H U42 ( .A(n15), .Z(n16) );
  INVERT_F U43 ( .A(n17), .Z(n18) );
  OA21_F U44 ( .A1(n35), .A2(n9), .B(n36), .Z(n32) );
  INVERT_D U45 ( .A(n32), .Z(n22) );
  XOR2_B U46 ( .A(n49), .B(n52), .Z(SUM[3]) );
  NOR2_C U47 ( .A(n18), .B(n51), .Z(n52) );
  NOR2_E U48 ( .A(B[3]), .B(A[3]), .Z(n51) );
  XOR2_B U49 ( .A(n37), .B(n9), .Z(SUM[7]) );
  INVERT_E U50 ( .A(n35), .Z(n23) );
  NOR2_E U51 ( .A(B[7]), .B(A[7]), .Z(n35) );
  XOR2_B U52 ( .A(n41), .B(n11), .Z(SUM[6]) );
  NOR2_C U53 ( .A(n5), .B(n40), .Z(n41) );
  NOR2_E U54 ( .A(B[6]), .B(A[6]), .Z(n40) );
  XOR2_B U55 ( .A(n45), .B(n14), .Z(SUM[5]) );
  INVERT_E U56 ( .A(n42), .Z(n25) );
  NOR2_E U57 ( .A(B[5]), .B(A[5]), .Z(n42) );
  NOR2_F U58 ( .A(n16), .B(n28), .Z(n49) );
  INVERT_H U59 ( .A(A[2]), .Z(n28) );
  XOR2_B U60 ( .A(B[9]), .B(A[9]), .Z(n30) );
  AOI21_A U61 ( .A1(n16), .A2(n28), .B(n49), .Z(SUM[2]) );
endmodule


module dsp_slice_24_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n8), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_1 ( .A(\ab[2][1] ), .B(n10), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n12), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n16), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_24_DW01_add_1 FS_1 ( .A({n40, n34, n31, n32, \A1[5] , \A1[4] , n21, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n6, n36, \A2[6] , n35, n19, 
        n22, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n39), .B(n4), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n45), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n17), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_C S2_2_2 ( .A(\ab[2][2] ), .B(n37), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n32) );
  INVERT_H U3 ( .A(\A2[3] ), .Z(n22) );
  NOR2_D U4 ( .A(B[1]), .B(n41), .Z(\ab[3][1] ) );
  NOR2_D U5 ( .A(B[0]), .B(n41), .Z(\ab[3][0] ) );
  XNOR2_C U6 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_J U7 ( .A(n43), .Z(n23) );
  NOR2_D U8 ( .A(B[5]), .B(n41), .Z(\ab[3][5] ) );
  OR2_J U9 ( .A(B[6]), .B(n41), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n41) );
  INVERT_I U11 ( .A(n18), .Z(n19) );
  INVERT_F U12 ( .A(n20), .Z(n18) );
  NOR2_D U13 ( .A(A[2]), .B(n45), .Z(\ab[2][7] ) );
  INVERT_D U14 ( .A(\CARRYB[1][6] ), .Z(n3) );
  INVERT_E U15 ( .A(n3), .Z(n4) );
  NAND2BAL_E U16 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n5) );
  INVERT_H U18 ( .A(n5), .Z(n6) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_I U21 ( .A(n33), .Z(n34) );
  AND2_H U22 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U23 ( .A(\CARRYB[1][0] ), .Z(n7) );
  INVERT_E U24 ( .A(n7), .Z(n8) );
  AND2_H U25 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U26 ( .A(\CARRYB[1][1] ), .Z(n9) );
  INVERT_E U27 ( .A(n9), .Z(n10) );
  AND2_H U28 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U29 ( .A(\CARRYB[1][3] ), .Z(n11) );
  INVERT_E U30 ( .A(n11), .Z(n12) );
  AND2_H U31 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_D U32 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U33 ( .A(n13), .Z(n14) );
  AND2_H U34 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U35 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U36 ( .A(n15), .Z(n16) );
  AND2_H U37 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U38 ( .A(\ab[3][6] ), .Z(n17) );
  INVERT_I U39 ( .A(n23), .Z(n24) );
  BUFFER_H U40 ( .A(\A2[4] ), .Z(n20) );
  AND2_H U41 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_H U42 ( .A(n2), .Z(n21) );
  NOR2_E U43 ( .A(n46), .B(n25), .Z(\ab[1][6] ) );
  INVERT_I U44 ( .A(n23), .Z(n25) );
  XOR2_D U45 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_K U46 ( .A(n27), .Z(n29) );
  NOR2_D U47 ( .A(n29), .B(n52), .Z(\ab[2][0] ) );
  NOR2_E U48 ( .A(n25), .B(n52), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n52) );
  NOR2_D U50 ( .A(n28), .B(n51), .Z(\ab[2][1] ) );
  NOR2_E U51 ( .A(n26), .B(n51), .Z(\ab[1][1] ) );
  INVERT_I U52 ( .A(B[1]), .Z(n51) );
  NOR2_E U53 ( .A(n47), .B(n24), .Z(\ab[1][5] ) );
  NOR2_D U54 ( .A(n29), .B(n47), .Z(\ab[2][5] ) );
  INVERT_I U55 ( .A(B[5]), .Z(n47) );
  NOR2_E U56 ( .A(n48), .B(n25), .Z(\ab[1][4] ) );
  NOR2_D U57 ( .A(n29), .B(n48), .Z(\ab[2][4] ) );
  INVERT_I U58 ( .A(B[4]), .Z(n48) );
  NOR2_E U59 ( .A(n49), .B(n24), .Z(\ab[1][3] ) );
  NOR2_D U60 ( .A(n29), .B(n49), .Z(\ab[2][3] ) );
  INVERT_I U61 ( .A(B[3]), .Z(n49) );
  NOR2_C U62 ( .A(n28), .B(n50), .Z(\ab[2][2] ) );
  NOR2_E U63 ( .A(n24), .B(n50), .Z(\ab[1][2] ) );
  INVERT_I U64 ( .A(B[2]), .Z(n50) );
  INVERT_F U65 ( .A(n23), .Z(n26) );
  INVERT_I U66 ( .A(n42), .Z(n27) );
  INVERT_H U67 ( .A(n27), .Z(n28) );
  NOR2_E U68 ( .A(n48), .B(n44), .Z(\ab[0][4] ) );
  NOR2_E U69 ( .A(n47), .B(n44), .Z(\ab[0][5] ) );
  NOR2_E U70 ( .A(n49), .B(n44), .Z(\ab[0][3] ) );
  NOR2_E U71 ( .A(n44), .B(n50), .Z(\ab[0][2] ) );
  NOR2_E U72 ( .A(n44), .B(n51), .Z(\ab[0][1] ) );
  NOR2_E U73 ( .A(n46), .B(n44), .Z(\ab[0][6] ) );
  INVERT_M U74 ( .A(A[0]), .Z(n44) );
  AND2_H U75 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U76 ( .A(\A2[5] ), .Z(n35) );
  INVERT_I U77 ( .A(\A2[7] ), .Z(n36) );
  INVERT_H U78 ( .A(\A1[7] ), .Z(n30) );
  INVERT_I U79 ( .A(n30), .Z(n31) );
  INVERT_H U80 ( .A(\A1[8] ), .Z(n33) );
  NOR2_D U81 ( .A(n45), .B(n41), .Z(\ab[3][7] ) );
  NOR2_E U82 ( .A(A[0]), .B(n45), .Z(\ab[0][7] ) );
  INVERT_K U83 ( .A(ZB), .Z(n45) );
  NOR2_D U84 ( .A(B[4]), .B(n41), .Z(\ab[3][4] ) );
  NOR2_D U85 ( .A(B[2]), .B(n41), .Z(\ab[3][2] ) );
  OR2_I U86 ( .A(A[1]), .B(n45), .Z(\ab[1][7] ) );
  NAND2_E U87 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U88 ( .A(n44), .B(n52), .Z(PRODUCT[0]) );
  NOR2_D U89 ( .A(B[3]), .B(n41), .Z(\ab[3][3] ) );
  INVERT_I U90 ( .A(B[6]), .Z(n46) );
  NAND2_E U91 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][2] ), .Z(n37) );
  INVERT_H U93 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U94 ( .A(n29), .B(n46), .Z(\ab[2][6] ) );
  INVERT_H U95 ( .A(\ab[2][6] ), .Z(n39) );
  AND2_H U96 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_H U97 ( .A(A[2]), .Z(n42) );
  INVERT_H U98 ( .A(A[1]), .Z(n43) );
  XOR2_C U99 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U100 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U101 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U102 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U103 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U104 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U105 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U106 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U107 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U108 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U109 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U110 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U111 ( .A(\CARRYB[3][7] ), .Z(n40) );
endmodule


module dsp_slice_24 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_24_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_24_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_23_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_23_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_E U3 ( .A(n4), .Z(n27) );
  AO21_F U4 ( .A1(n32), .A2(n17), .B(n6), .Z(n1) );
  AO21_F U5 ( .A1(n34), .A2(n56), .B(n26), .Z(n2) );
  XOR2_B U6 ( .A(n37), .B(n38), .Z(SUM[9]) );
  AND2_H U7 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U8 ( .A(n54), .Z(n3) );
  OA21_H U9 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U10 ( .A(n41), .B(n29), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U12 ( .A(n57), .Z(n4) );
  INVERT_H U13 ( .A(n46), .Z(n5) );
  INVERT_H U14 ( .A(n5), .Z(n6) );
  AND2_I U15 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U16 ( .A(n18), .Z(n16) );
  INVERT_E U17 ( .A(n19), .Z(n7) );
  INVERT_H U18 ( .A(n7), .Z(n8) );
  INVERT_E U19 ( .A(n21), .Z(n9) );
  INVERT_H U20 ( .A(n9), .Z(n10) );
  INVERT_E U21 ( .A(n27), .Z(n25) );
  NAND2BAL_E U22 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n43) );
  INVERT_E U24 ( .A(n47), .Z(n32) );
  INVERT_E U25 ( .A(n58), .Z(n34) );
  INVERT_H U26 ( .A(n13), .Z(n14) );
  INVERT_E U27 ( .A(n15), .Z(n13) );
  NAND2_E U28 ( .A(n33), .B(n14), .Z(n52) );
  AO21_E U29 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XNOR2_C U30 ( .A(n55), .B(n11), .Z(SUM[4]) );
  NOR2_C U31 ( .A(n8), .B(n53), .Z(n55) );
  XOR2_B U32 ( .A(B[8]), .B(A[8]), .Z(n41) );
  INVERT_D U33 ( .A(B[2]), .Z(n36) );
  CLKI_O U34 ( .A(n28), .Z(n29) );
  INVERT_H U35 ( .A(n2), .Z(n11) );
  INVERT_H U36 ( .A(n1), .Z(n12) );
  AND2_H U37 ( .A(B[5]), .B(A[5]), .Z(n51) );
  INVERT_D U38 ( .A(n51), .Z(n15) );
  INVERT_F U39 ( .A(n16), .Z(n17) );
  OA21_F U40 ( .A1(n49), .A2(n22), .B(n14), .Z(n45) );
  INVERT_D U41 ( .A(n45), .Z(n18) );
  INVERT_D U42 ( .A(n3), .Z(n19) );
  INVERT_F U43 ( .A(n8), .Z(n20) );
  INVERT_D U44 ( .A(n50), .Z(n21) );
  INVERT_F U45 ( .A(n10), .Z(n22) );
  OA21_F U46 ( .A1(n53), .A2(n11), .B(n20), .Z(n50) );
  NOR2_E U47 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_E U48 ( .A(n36), .Z(n23) );
  INVERT_H U49 ( .A(n23), .Z(n24) );
  INVERT_F U50 ( .A(n25), .Z(n26) );
  OA21_F U51 ( .A1(n42), .A2(n12), .B(n43), .Z(n39) );
  INVERT_D U52 ( .A(n39), .Z(n30) );
  XOR2_B U53 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n58), .Z(n59) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U56 ( .A(n44), .B(n12), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n42), .Z(n31) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U59 ( .A(n48), .B(n17), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n6), .B(n47), .Z(n48) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U62 ( .A(n52), .B(n22), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n49), .Z(n33) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U65 ( .A(n24), .B(n35), .Z(n56) );
  INVERT_H U66 ( .A(A[2]), .Z(n35) );
  XOR2_B U67 ( .A(B[9]), .B(A[9]), .Z(n37) );
  AOI21_A U68 ( .A1(n24), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_23_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] , \A1[0] , \A2[9] ,
         \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] , \A2[2] , n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n22), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n17), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  dsp_slice_23_DW01_add_1 FS_1 ( .A({n36, n30, n28, n25, \A1[5] , \A1[4] , n23, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n11, n32, \A2[6] , n33, n19, 
        n24, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n35), .B(n9), .CIN(n34), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n7), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_E S14_7 ( .A(n37), .B(n41), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n31), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_E S5_6 ( .A(n3), .B(\CARRYB[2][6] ), .CIN(n5), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n13), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_3 ( .A(n20), .B(n15), .CIN(\SUMB[1][4] ), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n25) );
  XNOR2_C U3 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_D U4 ( .A(\ab[2][3] ), .Z(n20) );
  NOR2_D U5 ( .A(B[6]), .B(n37), .Z(n3) );
  NOR2_D U6 ( .A(n38), .B(n46), .Z(\ab[2][2] ) );
  NOR2_D U7 ( .A(n37), .B(B[5]), .Z(\ab[3][5] ) );
  OR2_J U8 ( .A(n38), .B(n45), .Z(\ab[2][3] ) );
  INVERT_H U9 ( .A(\A2[3] ), .Z(n24) );
  NAND2_E U10 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n4) );
  INVERT_H U12 ( .A(n4), .Z(n5) );
  INVERT_D U13 ( .A(\CARRYB[1][2] ), .Z(n6) );
  INVERT_E U14 ( .A(n6), .Z(n7) );
  INVERT_D U15 ( .A(\CARRYB[1][6] ), .Z(n8) );
  INVERT_E U16 ( .A(n8), .Z(n9) );
  INVERT_H U17 ( .A(\A2[8] ), .Z(n10) );
  INVERT_H U18 ( .A(n10), .Z(n11) );
  AND2_I U19 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  INVERT_D U20 ( .A(\CARRYB[1][1] ), .Z(n12) );
  INVERT_E U21 ( .A(n12), .Z(n13) );
  AND2_H U22 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_D U23 ( .A(\CARRYB[1][3] ), .Z(n14) );
  INVERT_E U24 ( .A(n14), .Z(n15) );
  AND2_H U25 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_M U26 ( .A(A[2]), .Z(n38) );
  INVERT_I U27 ( .A(n29), .Z(n30) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_D U29 ( .A(\CARRYB[1][4] ), .Z(n16) );
  INVERT_E U30 ( .A(n16), .Z(n17) );
  INVERT_H U31 ( .A(\A2[4] ), .Z(n18) );
  INVERT_H U32 ( .A(n18), .Z(n19) );
  AND2_I U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  XOR2_D U34 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U35 ( .A(B[0]), .B(n37), .Z(\ab[3][0] ) );
  NOR2_D U36 ( .A(B[1]), .B(n37), .Z(\ab[3][1] ) );
  INVERT_N U37 ( .A(ZA), .Z(n37) );
  INVERT_D U38 ( .A(\CARRYB[1][0] ), .Z(n21) );
  INVERT_E U39 ( .A(n21), .Z(n22) );
  AND2_H U40 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_D U41 ( .A(n38), .B(n47), .Z(\ab[2][1] ) );
  NOR2_D U42 ( .A(n38), .B(n48), .Z(\ab[2][0] ) );
  INVERT_H U43 ( .A(n2), .Z(n23) );
  INVERT_I U44 ( .A(B[0]), .Z(n48) );
  NOR2_E U45 ( .A(n39), .B(n48), .Z(\ab[1][0] ) );
  NOR2_E U46 ( .A(n39), .B(n46), .Z(\ab[1][2] ) );
  NOR2_E U47 ( .A(n26), .B(n39), .Z(\ab[1][4] ) );
  INVERT_M U48 ( .A(A[1]), .Z(n39) );
  NOR2_E U49 ( .A(n39), .B(n47), .Z(\ab[1][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n47) );
  NOR2_E U51 ( .A(n45), .B(n39), .Z(\ab[1][3] ) );
  INVERT_I U52 ( .A(B[3]), .Z(n45) );
  NOR2_E U53 ( .A(n44), .B(n40), .Z(\ab[0][4] ) );
  NOR2_E U54 ( .A(n40), .B(n47), .Z(\ab[0][1] ) );
  NOR2_E U55 ( .A(n45), .B(n40), .Z(\ab[0][3] ) );
  NOR2_E U56 ( .A(n40), .B(n46), .Z(\ab[0][2] ) );
  INVERT_M U57 ( .A(A[0]), .Z(n40) );
  INVERT_I U58 ( .A(\A2[7] ), .Z(n32) );
  AND2_H U59 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_H U60 ( .A(B[4]), .Z(n26) );
  INVERT_H U61 ( .A(B[4]), .Z(n44) );
  INVERT_I U62 ( .A(B[2]), .Z(n46) );
  INVERT_H U63 ( .A(\A1[7] ), .Z(n27) );
  INVERT_I U64 ( .A(n27), .Z(n28) );
  NOR2_E U65 ( .A(n42), .B(n39), .Z(\ab[1][6] ) );
  INVERT_H U66 ( .A(\A1[8] ), .Z(n29) );
  NOR2_D U67 ( .A(n38), .B(n26), .Z(\ab[2][4] ) );
  AND2_H U68 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U69 ( .A(n43), .B(n40), .Z(\ab[0][5] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][5] ), .Z(n31) );
  INVERT_I U71 ( .A(B[5]), .Z(n43) );
  NOR2_E U72 ( .A(n43), .B(n39), .Z(\ab[1][5] ) );
  NOR2_E U73 ( .A(n42), .B(n40), .Z(\ab[0][6] ) );
  AND2_H U74 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U75 ( .A(n38), .B(n43), .Z(\ab[2][5] ) );
  NOR2_D U76 ( .A(n41), .B(n37), .Z(\ab[3][7] ) );
  NOR2_E U77 ( .A(A[0]), .B(n41), .Z(\ab[0][7] ) );
  INVERT_K U78 ( .A(ZB), .Z(n41) );
  NOR2_D U79 ( .A(B[4]), .B(n37), .Z(\ab[3][4] ) );
  NOR2_D U80 ( .A(B[2]), .B(n37), .Z(\ab[3][2] ) );
  NOR2_C U81 ( .A(A[2]), .B(n41), .Z(\ab[2][7] ) );
  NAND2_E U82 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  NAND2_E U83 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_H U84 ( .A(\A2[5] ), .Z(n33) );
  NOR2_D U85 ( .A(B[3]), .B(n37), .Z(\ab[3][3] ) );
  INVERT_I U86 ( .A(B[6]), .Z(n42) );
  OR2_I U87 ( .A(A[1]), .B(n41), .Z(\ab[1][7] ) );
  AND2_H U88 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U89 ( .A(n48), .B(n40), .Z(PRODUCT[0]) );
  INVERT_H U90 ( .A(\ab[1][7] ), .Z(n34) );
  OR2_J U91 ( .A(n38), .B(n42), .Z(\ab[2][6] ) );
  INVERT_H U92 ( .A(\ab[2][6] ), .Z(n35) );
  AND2_H U93 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U94 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U97 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U98 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U99 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U100 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U101 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U102 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U103 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U104 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U105 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U106 ( .A(\CARRYB[3][7] ), .Z(n36) );
endmodule


module dsp_slice_23 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_23_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_23_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_I U7 ( .A(n4), .Z(n5) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_22_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_22_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_22_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_22_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_22 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_22_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_22_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_21_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_21_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n24), .Z(n22) );
  INVERT_E U3 ( .A(n3), .Z(n21) );
  INVERT_H U4 ( .A(n49), .Z(n28) );
  AO21_F U5 ( .A1(n29), .A2(n51), .B(n20), .Z(n1) );
  AO21_F U6 ( .A1(n26), .A2(n12), .B(n5), .Z(n2) );
  NOR2_D U7 ( .A(B[4]), .B(A[4]), .Z(n48) );
  XOR2_B U8 ( .A(n32), .B(n33), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n23), .B(B[8]), .Z(n35) );
  XOR2_B U10 ( .A(n36), .B(n23), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n52) );
  INVERT_D U12 ( .A(n52), .Z(n3) );
  NAND2_F U13 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_H U14 ( .A(n41), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n41) );
  INVERT_E U17 ( .A(n13), .Z(n11) );
  INVERT_E U18 ( .A(n14), .Z(n6) );
  INVERT_H U19 ( .A(n6), .Z(n7) );
  INVERT_H U20 ( .A(n48), .Z(n8) );
  INVERT_E U21 ( .A(n21), .Z(n19) );
  NAND2BAL_E U22 ( .A(n25), .B(n38), .Z(n39) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n38) );
  NAND2BAL_E U24 ( .A(n27), .B(n46), .Z(n47) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n46) );
  INVERT_E U26 ( .A(n42), .Z(n26) );
  INVERT_E U27 ( .A(n53), .Z(n29) );
  AO21_E U28 ( .A1(n23), .A2(A[8]), .B(n35), .Z(n33) );
  XNOR2_C U29 ( .A(n50), .B(n9), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n28), .B(n16), .Z(n50) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n36) );
  INVERT_D U32 ( .A(B[2]), .Z(n31) );
  CLKI_O U33 ( .A(n22), .Z(n23) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  INVERT_H U35 ( .A(n2), .Z(n10) );
  INVERT_F U36 ( .A(n11), .Z(n12) );
  OA21_F U37 ( .A1(n44), .A2(n15), .B(n46), .Z(n40) );
  INVERT_D U38 ( .A(n40), .Z(n13) );
  INVERT_D U39 ( .A(n45), .Z(n14) );
  INVERT_F U40 ( .A(n7), .Z(n15) );
  OA21_F U41 ( .A1(n16), .A2(n9), .B(n49), .Z(n45) );
  INVERT_F U42 ( .A(n8), .Z(n16) );
  INVERT_E U43 ( .A(n31), .Z(n17) );
  INVERT_H U44 ( .A(n17), .Z(n18) );
  INVERT_F U45 ( .A(n19), .Z(n20) );
  OA21_F U46 ( .A1(n37), .A2(n10), .B(n38), .Z(n34) );
  INVERT_D U47 ( .A(n34), .Z(n24) );
  XOR2_B U48 ( .A(n51), .B(n54), .Z(SUM[3]) );
  NOR2_C U49 ( .A(n20), .B(n53), .Z(n54) );
  NOR2_E U50 ( .A(B[3]), .B(A[3]), .Z(n53) );
  XOR2_B U51 ( .A(n39), .B(n10), .Z(SUM[7]) );
  INVERT_E U52 ( .A(n37), .Z(n25) );
  NOR2_E U53 ( .A(B[7]), .B(A[7]), .Z(n37) );
  XOR2_B U54 ( .A(n43), .B(n12), .Z(SUM[6]) );
  NOR2_C U55 ( .A(n5), .B(n42), .Z(n43) );
  NOR2_E U56 ( .A(B[6]), .B(A[6]), .Z(n42) );
  XOR2_B U57 ( .A(n47), .B(n15), .Z(SUM[5]) );
  INVERT_E U58 ( .A(n44), .Z(n27) );
  NOR2_E U59 ( .A(B[5]), .B(A[5]), .Z(n44) );
  NOR2_F U60 ( .A(n18), .B(n30), .Z(n51) );
  INVERT_H U61 ( .A(A[2]), .Z(n30) );
  XOR2_B U62 ( .A(B[9]), .B(A[9]), .Z(n32) );
  AOI21_A U63 ( .A1(n18), .A2(n30), .B(n51), .Z(SUM[2]) );
endmodule


module dsp_slice_21_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_21_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n10, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n12), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n16), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  INVERT_I U14 ( .A(n9), .Z(n10) );
  OR2_I U15 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U16 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U17 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U18 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U19 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U20 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U21 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  XOR2_D U22 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U23 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U24 ( .A(n5), .Z(n6) );
  NAND2BAL_E U25 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U26 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U27 ( .A(n7), .Z(n8) );
  AND2_I U28 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U29 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_H U30 ( .A(\A2[4] ), .Z(n9) );
  AND2_I U31 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U32 ( .A(\CARRYB[1][0] ), .Z(n11) );
  INVERT_E U33 ( .A(n11), .Z(n12) );
  AND2_H U34 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U35 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U38 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U39 ( .A(n15), .Z(n16) );
  AND2_H U40 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_21 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_21_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_21_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_20_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_20_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_20_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_20_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  NOR2_D U79 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  OR2_I U80 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U81 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U82 ( .A(n25), .Z(n26) );
  AND2_I U83 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U84 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U85 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_20 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_20_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_20_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_19_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_19_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n24), .Z(n22) );
  INVERT_D U3 ( .A(B[2]), .Z(n31) );
  INVERT_E U4 ( .A(n3), .Z(n21) );
  INVERT_H U5 ( .A(n49), .Z(n28) );
  AO21_F U6 ( .A1(n29), .A2(n51), .B(n20), .Z(n1) );
  AO21_F U7 ( .A1(n26), .A2(n12), .B(n5), .Z(n2) );
  NOR2_D U8 ( .A(B[4]), .B(A[4]), .Z(n48) );
  XOR2_B U9 ( .A(n32), .B(n33), .Z(SUM[9]) );
  OA21_H U10 ( .A1(A[8]), .A2(n23), .B(B[8]), .Z(n35) );
  XOR2_B U11 ( .A(n36), .B(n23), .Z(SUM[8]) );
  AND2_H U12 ( .A(B[3]), .B(A[3]), .Z(n52) );
  INVERT_D U13 ( .A(n52), .Z(n3) );
  NAND2_F U14 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_H U15 ( .A(n41), .Z(n4) );
  INVERT_H U16 ( .A(n4), .Z(n5) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n41) );
  INVERT_E U18 ( .A(n13), .Z(n11) );
  INVERT_E U19 ( .A(n14), .Z(n6) );
  INVERT_H U20 ( .A(n6), .Z(n7) );
  INVERT_H U21 ( .A(n48), .Z(n8) );
  INVERT_E U22 ( .A(n21), .Z(n19) );
  NAND2BAL_E U23 ( .A(n25), .B(n38), .Z(n39) );
  NAND2_F U24 ( .A(B[7]), .B(A[7]), .Z(n38) );
  NAND2BAL_E U25 ( .A(n27), .B(n46), .Z(n47) );
  NAND2_F U26 ( .A(B[5]), .B(A[5]), .Z(n46) );
  INVERT_E U27 ( .A(n42), .Z(n26) );
  INVERT_E U28 ( .A(n53), .Z(n29) );
  AO21_E U29 ( .A1(n23), .A2(A[8]), .B(n35), .Z(n33) );
  XNOR2_C U30 ( .A(n50), .B(n9), .Z(SUM[4]) );
  NOR2_C U31 ( .A(n28), .B(n16), .Z(n50) );
  XOR2_B U32 ( .A(B[8]), .B(A[8]), .Z(n36) );
  CLKI_O U33 ( .A(n22), .Z(n23) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  INVERT_H U35 ( .A(n2), .Z(n10) );
  INVERT_F U36 ( .A(n11), .Z(n12) );
  OA21_F U37 ( .A1(n44), .A2(n15), .B(n46), .Z(n40) );
  INVERT_D U38 ( .A(n40), .Z(n13) );
  INVERT_D U39 ( .A(n45), .Z(n14) );
  INVERT_F U40 ( .A(n7), .Z(n15) );
  OA21_F U41 ( .A1(n16), .A2(n9), .B(n49), .Z(n45) );
  INVERT_F U42 ( .A(n8), .Z(n16) );
  INVERT_E U43 ( .A(n31), .Z(n17) );
  INVERT_H U44 ( .A(n17), .Z(n18) );
  INVERT_F U45 ( .A(n19), .Z(n20) );
  OA21_F U46 ( .A1(n37), .A2(n10), .B(n38), .Z(n34) );
  INVERT_D U47 ( .A(n34), .Z(n24) );
  XOR2_B U48 ( .A(n51), .B(n54), .Z(SUM[3]) );
  NOR2_C U49 ( .A(n20), .B(n53), .Z(n54) );
  NOR2_E U50 ( .A(B[3]), .B(A[3]), .Z(n53) );
  XOR2_B U51 ( .A(n39), .B(n10), .Z(SUM[7]) );
  INVERT_E U52 ( .A(n37), .Z(n25) );
  NOR2_E U53 ( .A(B[7]), .B(A[7]), .Z(n37) );
  XOR2_B U54 ( .A(n43), .B(n12), .Z(SUM[6]) );
  NOR2_C U55 ( .A(n5), .B(n42), .Z(n43) );
  NOR2_E U56 ( .A(B[6]), .B(A[6]), .Z(n42) );
  XOR2_B U57 ( .A(n47), .B(n15), .Z(SUM[5]) );
  INVERT_E U58 ( .A(n44), .Z(n27) );
  NOR2_E U59 ( .A(B[5]), .B(A[5]), .Z(n44) );
  NOR2_F U60 ( .A(n18), .B(n30), .Z(n51) );
  INVERT_H U61 ( .A(A[2]), .Z(n30) );
  XOR2_B U62 ( .A(B[9]), .B(A[9]), .Z(n32) );
  AOI21_A U63 ( .A1(n18), .A2(n30), .B(n51), .Z(SUM[2]) );
endmodule


module dsp_slice_19_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_19_DW01_add_1 FS_1 ( .A({n43, n35, n32, n33, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n38, \A2[6] , 
        n37, n10, n27, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n42), .B(n6), .CIN(n41), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n40), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n39), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n44), .B(n48), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n12), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n16), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n33) );
  NOR2_D U4 ( .A(B[1]), .B(n44), .Z(\ab[3][1] ) );
  INVERT_H U5 ( .A(\ab[1][5] ), .Z(n17) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n27) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n44), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n50), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  NOR2_C U12 ( .A(n23), .B(n18), .Z(\ab[2][4] ) );
  INVERT_I U13 ( .A(n9), .Z(n10) );
  OR2_I U14 ( .A(n23), .B(n49), .Z(\ab[2][6] ) );
  NOR2_C U15 ( .A(n23), .B(n55), .Z(\ab[2][0] ) );
  NOR2_C U16 ( .A(n23), .B(n53), .Z(\ab[2][2] ) );
  NOR2_C U17 ( .A(n23), .B(n54), .Z(\ab[2][1] ) );
  NOR2_D U18 ( .A(n44), .B(B[2]), .Z(\ab[3][2] ) );
  BUFFER_F U19 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U20 ( .A(n50), .B(n23), .Z(\ab[2][5] ) );
  NOR2_D U21 ( .A(A[2]), .B(n48), .Z(\ab[2][7] ) );
  XOR2_D U22 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U23 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U24 ( .A(n5), .Z(n6) );
  NAND2BAL_E U25 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U26 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U27 ( .A(n7), .Z(n8) );
  AND2_I U28 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U29 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_H U30 ( .A(\A2[4] ), .Z(n9) );
  AND2_I U31 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U32 ( .A(\CARRYB[1][0] ), .Z(n11) );
  INVERT_E U33 ( .A(n11), .Z(n12) );
  AND2_H U34 ( .A(n30), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U35 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(n19), .B(n29), .Z(\CARRYB[1][4] ) );
  INVERT_D U38 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U39 ( .A(n15), .Z(n16) );
  AND2_H U40 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_I U41 ( .A(n34), .Z(n35) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n50) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n47), .B(n51), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n30) );
  OR2_J U47 ( .A(n21), .B(n55), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n55) );
  NOR2_D U49 ( .A(B[0]), .B(n44), .Z(\ab[3][0] ) );
  INVERT_N U50 ( .A(ZA), .Z(n44) );
  INVERT_I U51 ( .A(n46), .Z(n20) );
  INVERT_M U52 ( .A(n20), .Z(n21) );
  INVERT_H U53 ( .A(A[1]), .Z(n46) );
  INVERT_H U54 ( .A(n45), .Z(n22) );
  INVERT_L U55 ( .A(n22), .Z(n23) );
  INVERT_H U56 ( .A(A[2]), .Z(n45) );
  AND2_H U57 ( .A(n25), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U58 ( .A(n47), .B(n52), .Z(\ab[0][3] ) );
  INVERT_E U59 ( .A(\ab[1][2] ), .Z(n24) );
  INVERT_H U60 ( .A(n24), .Z(n25) );
  INVERT_F U61 ( .A(\ab[0][4] ), .Z(n26) );
  AND2_I U62 ( .A(\ab[1][3] ), .B(n26), .Z(\CARRYB[1][3] ) );
  INVERT_E U63 ( .A(\ab[0][5] ), .Z(n28) );
  INVERT_F U64 ( .A(n28), .Z(n29) );
  NOR2_C U65 ( .A(n47), .B(n50), .Z(\ab[0][5] ) );
  INVERT_M U66 ( .A(A[0]), .Z(n47) );
  INVERT_H U67 ( .A(B[4]), .Z(n51) );
  NOR2_E U68 ( .A(n47), .B(n54), .Z(\ab[0][1] ) );
  NOR2_E U69 ( .A(n21), .B(n54), .Z(\ab[1][1] ) );
  INVERT_I U70 ( .A(B[1]), .Z(n54) );
  NOR2_D U71 ( .A(n23), .B(n52), .Z(\ab[2][3] ) );
  NOR2_E U72 ( .A(n21), .B(n52), .Z(\ab[1][3] ) );
  INVERT_I U73 ( .A(B[3]), .Z(n52) );
  NOR2_E U74 ( .A(n47), .B(n53), .Z(\ab[0][2] ) );
  NOR2_E U75 ( .A(n49), .B(n47), .Z(\ab[0][6] ) );
  AND2_H U76 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U77 ( .A(\A2[7] ), .Z(n38) );
  INVERT_I U78 ( .A(B[2]), .Z(n53) );
  XOR2_B U79 ( .A(n26), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U80 ( .A(\A1[7] ), .Z(n31) );
  INVERT_I U81 ( .A(n31), .Z(n32) );
  NOR2_E U82 ( .A(n49), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U83 ( .A(\A1[8] ), .Z(n34) );
  NOR2_D U84 ( .A(n48), .B(n44), .Z(\ab[3][7] ) );
  NOR2_E U85 ( .A(A[0]), .B(n48), .Z(\ab[0][7] ) );
  INVERT_K U86 ( .A(ZB), .Z(n48) );
  NOR2_D U87 ( .A(B[3]), .B(n44), .Z(\ab[3][3] ) );
  NOR2_D U88 ( .A(B[5]), .B(n44), .Z(\ab[3][5] ) );
  INVERT_I U89 ( .A(B[6]), .Z(n49) );
  NOR2_D U90 ( .A(B[4]), .B(n44), .Z(\ab[3][4] ) );
  INVERT_H U91 ( .A(\A2[5] ), .Z(n36) );
  INVERT_I U92 ( .A(n36), .Z(n37) );
  AND2_I U93 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U94 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n39) );
  OR2_I U96 ( .A(A[1]), .B(n48), .Z(\ab[1][7] ) );
  BUFFER_H U97 ( .A(\CARRYB[1][2] ), .Z(n40) );
  NOR2_C U98 ( .A(n21), .B(n53), .Z(\ab[1][2] ) );
  NOR2_D U99 ( .A(n55), .B(n47), .Z(PRODUCT[0]) );
  INVERT_H U100 ( .A(\ab[1][7] ), .Z(n41) );
  INVERT_H U101 ( .A(\ab[2][6] ), .Z(n42) );
  AND2_H U102 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U103 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U104 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U105 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U106 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U107 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U108 ( .A(\ab[0][1] ), .B(n30), .Z(PRODUCT[1]) );
  XOR2_C U109 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(n25), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(n29), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U112 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U113 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U114 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_19 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_19_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_19_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_18_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_18_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_18_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_18_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_18 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_18_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_18_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_17_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_17_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n24), .Z(n22) );
  INVERT_E U3 ( .A(n3), .Z(n21) );
  INVERT_H U4 ( .A(n49), .Z(n28) );
  AO21_F U5 ( .A1(n29), .A2(n51), .B(n20), .Z(n1) );
  AO21_F U6 ( .A1(n26), .A2(n12), .B(n5), .Z(n2) );
  NOR2_D U7 ( .A(B[4]), .B(A[4]), .Z(n48) );
  XOR2_B U8 ( .A(n32), .B(n33), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n23), .B(B[8]), .Z(n35) );
  XOR2_B U10 ( .A(n36), .B(n23), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n52) );
  INVERT_D U12 ( .A(n52), .Z(n3) );
  NAND2_F U13 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_H U14 ( .A(n41), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n41) );
  INVERT_E U17 ( .A(n13), .Z(n11) );
  INVERT_E U18 ( .A(n14), .Z(n6) );
  INVERT_H U19 ( .A(n6), .Z(n7) );
  INVERT_H U20 ( .A(n48), .Z(n8) );
  INVERT_E U21 ( .A(n21), .Z(n19) );
  NAND2BAL_E U22 ( .A(n25), .B(n38), .Z(n39) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n38) );
  NAND2BAL_E U24 ( .A(n27), .B(n46), .Z(n47) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n46) );
  INVERT_E U26 ( .A(n42), .Z(n26) );
  INVERT_E U27 ( .A(n53), .Z(n29) );
  AO21_E U28 ( .A1(n23), .A2(A[8]), .B(n35), .Z(n33) );
  XNOR2_C U29 ( .A(n50), .B(n9), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n28), .B(n16), .Z(n50) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n36) );
  INVERT_D U32 ( .A(B[2]), .Z(n31) );
  CLKI_O U33 ( .A(n22), .Z(n23) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  INVERT_H U35 ( .A(n2), .Z(n10) );
  INVERT_F U36 ( .A(n11), .Z(n12) );
  OA21_F U37 ( .A1(n44), .A2(n15), .B(n46), .Z(n40) );
  INVERT_D U38 ( .A(n40), .Z(n13) );
  INVERT_D U39 ( .A(n45), .Z(n14) );
  INVERT_F U40 ( .A(n7), .Z(n15) );
  OA21_F U41 ( .A1(n16), .A2(n9), .B(n49), .Z(n45) );
  INVERT_F U42 ( .A(n8), .Z(n16) );
  INVERT_E U43 ( .A(n31), .Z(n17) );
  INVERT_H U44 ( .A(n17), .Z(n18) );
  INVERT_F U45 ( .A(n19), .Z(n20) );
  OA21_F U46 ( .A1(n37), .A2(n10), .B(n38), .Z(n34) );
  INVERT_D U47 ( .A(n34), .Z(n24) );
  XOR2_B U48 ( .A(n51), .B(n54), .Z(SUM[3]) );
  NOR2_C U49 ( .A(n20), .B(n53), .Z(n54) );
  NOR2_E U50 ( .A(B[3]), .B(A[3]), .Z(n53) );
  XOR2_B U51 ( .A(n39), .B(n10), .Z(SUM[7]) );
  INVERT_E U52 ( .A(n37), .Z(n25) );
  NOR2_E U53 ( .A(B[7]), .B(A[7]), .Z(n37) );
  XOR2_B U54 ( .A(n43), .B(n12), .Z(SUM[6]) );
  NOR2_C U55 ( .A(n5), .B(n42), .Z(n43) );
  NOR2_E U56 ( .A(B[6]), .B(A[6]), .Z(n42) );
  XOR2_B U57 ( .A(n47), .B(n15), .Z(SUM[5]) );
  INVERT_E U58 ( .A(n44), .Z(n27) );
  NOR2_E U59 ( .A(B[5]), .B(A[5]), .Z(n44) );
  NOR2_F U60 ( .A(n18), .B(n30), .Z(n51) );
  INVERT_H U61 ( .A(A[2]), .Z(n30) );
  XOR2_B U62 ( .A(B[9]), .B(A[9]), .Z(n32) );
  AOI21_A U63 ( .A1(n18), .A2(n30), .B(n51), .Z(SUM[2]) );
endmodule


module dsp_slice_17_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_17_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n10, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n12), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n16), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  INVERT_I U14 ( .A(n9), .Z(n10) );
  OR2_I U15 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U16 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U17 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U18 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U19 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U20 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U21 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  XOR2_D U22 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U23 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U24 ( .A(n5), .Z(n6) );
  NAND2BAL_E U25 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U26 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U27 ( .A(n7), .Z(n8) );
  AND2_I U28 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U29 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_H U30 ( .A(\A2[4] ), .Z(n9) );
  AND2_I U31 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U32 ( .A(\CARRYB[1][0] ), .Z(n11) );
  INVERT_E U33 ( .A(n11), .Z(n12) );
  AND2_H U34 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U35 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U38 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U39 ( .A(n15), .Z(n16) );
  AND2_H U40 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_17 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_17_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_17_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_16_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_16_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_16_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_16_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_16 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_16_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_16_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_15_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_15_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n24), .Z(n22) );
  INVERT_E U3 ( .A(n3), .Z(n21) );
  INVERT_H U4 ( .A(n49), .Z(n28) );
  AO21_F U5 ( .A1(n29), .A2(n51), .B(n20), .Z(n1) );
  AO21_F U6 ( .A1(n26), .A2(n12), .B(n5), .Z(n2) );
  NOR2_D U7 ( .A(B[4]), .B(A[4]), .Z(n48) );
  XOR2_B U8 ( .A(n32), .B(n33), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n23), .B(B[8]), .Z(n35) );
  XOR2_B U10 ( .A(n36), .B(n23), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n52) );
  INVERT_D U12 ( .A(n52), .Z(n3) );
  NAND2_F U13 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_H U14 ( .A(n41), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n41) );
  INVERT_E U17 ( .A(n13), .Z(n11) );
  INVERT_E U18 ( .A(n14), .Z(n6) );
  INVERT_H U19 ( .A(n6), .Z(n7) );
  INVERT_H U20 ( .A(n48), .Z(n8) );
  INVERT_E U21 ( .A(n21), .Z(n19) );
  NAND2BAL_E U22 ( .A(n25), .B(n38), .Z(n39) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n38) );
  NAND2BAL_E U24 ( .A(n27), .B(n46), .Z(n47) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n46) );
  INVERT_E U26 ( .A(n42), .Z(n26) );
  INVERT_E U27 ( .A(n53), .Z(n29) );
  AO21_E U28 ( .A1(n23), .A2(A[8]), .B(n35), .Z(n33) );
  XNOR2_C U29 ( .A(n50), .B(n9), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n28), .B(n16), .Z(n50) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n36) );
  INVERT_D U32 ( .A(B[2]), .Z(n31) );
  CLKI_O U33 ( .A(n22), .Z(n23) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  INVERT_H U35 ( .A(n2), .Z(n10) );
  INVERT_F U36 ( .A(n11), .Z(n12) );
  OA21_F U37 ( .A1(n44), .A2(n15), .B(n46), .Z(n40) );
  INVERT_D U38 ( .A(n40), .Z(n13) );
  INVERT_D U39 ( .A(n45), .Z(n14) );
  INVERT_F U40 ( .A(n7), .Z(n15) );
  OA21_F U41 ( .A1(n16), .A2(n9), .B(n49), .Z(n45) );
  INVERT_F U42 ( .A(n8), .Z(n16) );
  INVERT_E U43 ( .A(n31), .Z(n17) );
  INVERT_H U44 ( .A(n17), .Z(n18) );
  INVERT_F U45 ( .A(n19), .Z(n20) );
  OA21_F U46 ( .A1(n37), .A2(n10), .B(n38), .Z(n34) );
  INVERT_D U47 ( .A(n34), .Z(n24) );
  XOR2_B U48 ( .A(n51), .B(n54), .Z(SUM[3]) );
  NOR2_C U49 ( .A(n20), .B(n53), .Z(n54) );
  NOR2_E U50 ( .A(B[3]), .B(A[3]), .Z(n53) );
  XOR2_B U51 ( .A(n39), .B(n10), .Z(SUM[7]) );
  INVERT_E U52 ( .A(n37), .Z(n25) );
  NOR2_E U53 ( .A(B[7]), .B(A[7]), .Z(n37) );
  XOR2_B U54 ( .A(n43), .B(n12), .Z(SUM[6]) );
  NOR2_C U55 ( .A(n5), .B(n42), .Z(n43) );
  NOR2_E U56 ( .A(B[6]), .B(A[6]), .Z(n42) );
  XOR2_B U57 ( .A(n47), .B(n15), .Z(SUM[5]) );
  INVERT_E U58 ( .A(n44), .Z(n27) );
  NOR2_E U59 ( .A(B[5]), .B(A[5]), .Z(n44) );
  NOR2_F U60 ( .A(n18), .B(n30), .Z(n51) );
  INVERT_H U61 ( .A(A[2]), .Z(n30) );
  XOR2_B U62 ( .A(B[9]), .B(A[9]), .Z(n32) );
  AOI21_A U63 ( .A1(n18), .A2(n30), .B(n51), .Z(SUM[2]) );
endmodule


module dsp_slice_15_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_15_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n10, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n12), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n16), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  INVERT_I U14 ( .A(n9), .Z(n10) );
  OR2_I U15 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U16 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U17 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U18 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U19 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U20 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U21 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  XOR2_D U22 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U23 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U24 ( .A(n5), .Z(n6) );
  NAND2BAL_E U25 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U26 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U27 ( .A(n7), .Z(n8) );
  AND2_I U28 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U29 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_H U30 ( .A(\A2[4] ), .Z(n9) );
  AND2_I U31 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U32 ( .A(\CARRYB[1][0] ), .Z(n11) );
  INVERT_E U33 ( .A(n11), .Z(n12) );
  AND2_H U34 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U35 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U38 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U39 ( .A(n15), .Z(n16) );
  AND2_H U40 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_15 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_15_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_15_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_14_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_14_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_14_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_14_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_14 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_14_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_14_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_13_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_13_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_E U3 ( .A(n7), .Z(n25) );
  INVERT_H U4 ( .A(n53), .Z(n32) );
  AO21_F U5 ( .A1(n33), .A2(n55), .B(n24), .Z(n1) );
  AO21_F U6 ( .A1(n30), .A2(n16), .B(n9), .Z(n2) );
  NOR2_D U7 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U8 ( .A(n39), .Z(n3) );
  INVERT_E U9 ( .A(n3), .Z(n4) );
  XOR2_B U10 ( .A(n36), .B(n37), .Z(SUM[9]) );
  INVERT_H U11 ( .A(n27), .Z(n5) );
  INVERT_I U12 ( .A(n5), .Z(n6) );
  INVERT_H U13 ( .A(n26), .Z(n27) );
  AND2_H U14 ( .A(B[3]), .B(A[3]), .Z(n56) );
  INVERT_D U15 ( .A(n56), .Z(n7) );
  NAND2_F U16 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_H U17 ( .A(n45), .Z(n8) );
  INVERT_H U18 ( .A(n8), .Z(n9) );
  AND2_I U19 ( .A(B[6]), .B(A[6]), .Z(n45) );
  INVERT_E U20 ( .A(n17), .Z(n15) );
  INVERT_E U21 ( .A(n18), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_H U23 ( .A(n52), .Z(n12) );
  INVERT_E U24 ( .A(n25), .Z(n23) );
  NAND2BAL_E U25 ( .A(n31), .B(n50), .Z(n51) );
  NAND2_F U26 ( .A(B[5]), .B(A[5]), .Z(n50) );
  INVERT_E U27 ( .A(n46), .Z(n30) );
  INVERT_E U28 ( .A(n57), .Z(n33) );
  NAND2BAL_E U29 ( .A(n29), .B(n42), .Z(n43) );
  NAND2_F U30 ( .A(B[7]), .B(A[7]), .Z(n42) );
  AO21_E U31 ( .A1(n6), .A2(A[8]), .B(n4), .Z(n37) );
  XOR2_C U32 ( .A(n40), .B(n6), .Z(SUM[8]) );
  XNOR2_C U33 ( .A(n54), .B(n13), .Z(SUM[4]) );
  NOR2_C U34 ( .A(n32), .B(n20), .Z(n54) );
  XOR2_C U35 ( .A(B[8]), .B(A[8]), .Z(n40) );
  INVERT_D U36 ( .A(B[2]), .Z(n35) );
  OA21_F U37 ( .A1(A[8]), .A2(n6), .B(B[8]), .Z(n39) );
  INVERT_H U38 ( .A(n1), .Z(n13) );
  INVERT_H U39 ( .A(n2), .Z(n14) );
  INVERT_F U40 ( .A(n15), .Z(n16) );
  OA21_F U41 ( .A1(n48), .A2(n19), .B(n50), .Z(n44) );
  INVERT_D U42 ( .A(n44), .Z(n17) );
  INVERT_D U43 ( .A(n49), .Z(n18) );
  INVERT_F U44 ( .A(n11), .Z(n19) );
  OA21_F U45 ( .A1(n20), .A2(n13), .B(n53), .Z(n49) );
  INVERT_F U46 ( .A(n12), .Z(n20) );
  INVERT_E U47 ( .A(n35), .Z(n21) );
  INVERT_H U48 ( .A(n21), .Z(n22) );
  INVERT_F U49 ( .A(n23), .Z(n24) );
  OA21_F U50 ( .A1(n41), .A2(n14), .B(n42), .Z(n38) );
  INVERT_D U51 ( .A(n38), .Z(n28) );
  XOR2_B U52 ( .A(n55), .B(n58), .Z(SUM[3]) );
  NOR2_C U53 ( .A(n24), .B(n57), .Z(n58) );
  NOR2_E U54 ( .A(B[3]), .B(A[3]), .Z(n57) );
  XOR2_B U55 ( .A(n43), .B(n14), .Z(SUM[7]) );
  INVERT_E U56 ( .A(n41), .Z(n29) );
  NOR2_E U57 ( .A(B[7]), .B(A[7]), .Z(n41) );
  XOR2_B U58 ( .A(n47), .B(n16), .Z(SUM[6]) );
  NOR2_C U59 ( .A(n9), .B(n46), .Z(n47) );
  NOR2_E U60 ( .A(B[6]), .B(A[6]), .Z(n46) );
  XOR2_B U61 ( .A(n51), .B(n19), .Z(SUM[5]) );
  INVERT_E U62 ( .A(n48), .Z(n31) );
  NOR2_E U63 ( .A(B[5]), .B(A[5]), .Z(n48) );
  NOR2_F U64 ( .A(n22), .B(n34), .Z(n55) );
  INVERT_H U65 ( .A(A[2]), .Z(n34) );
  XOR2_B U66 ( .A(B[9]), .B(A[9]), .Z(n36) );
  AOI21_A U67 ( .A1(n22), .A2(n34), .B(n55), .Z(SUM[2]) );
endmodule


module dsp_slice_13_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_13_DW01_add_1 FS_1 ( .A({n37, n30, \A1[7] , \A1[6] , \A1[5] , 
        \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , 
        n28, \A2[6] , n32, n7, n24, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n36), .B(n5), .CIN(n35), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n34), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n33), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n38), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n9), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n11), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n2), .B(n13), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  INVERT_H U3 ( .A(\ab[1][5] ), .Z(n14) );
  NOR2_D U4 ( .A(B[1]), .B(n38), .Z(\ab[3][1] ) );
  INVERT_H U5 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U6 ( .A(\A2[3] ), .Z(n24) );
  INVERT_D U7 ( .A(n3), .Z(n2) );
  NOR2_D U8 ( .A(n38), .B(B[2]), .Z(\ab[3][2] ) );
  OR2_J U9 ( .A(n18), .B(n44), .Z(\ab[1][5] ) );
  OR2_I U10 ( .A(n18), .B(n15), .Z(\ab[1][4] ) );
  NOR2_C U11 ( .A(n20), .B(n15), .Z(\ab[2][4] ) );
  INVERT_I U12 ( .A(n6), .Z(n7) );
  OR2_I U13 ( .A(n20), .B(n43), .Z(\ab[2][6] ) );
  NOR2_C U14 ( .A(n20), .B(n49), .Z(\ab[2][0] ) );
  NOR2_C U15 ( .A(n20), .B(n47), .Z(\ab[2][2] ) );
  NOR2_C U16 ( .A(n20), .B(n48), .Z(\ab[2][1] ) );
  BUFFER_F U17 ( .A(\ab[2][5] ), .Z(n3) );
  OR2_H U18 ( .A(n44), .B(n20), .Z(\ab[2][5] ) );
  XOR2_D U19 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U20 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U21 ( .A(n4), .Z(n5) );
  NAND2BAL_E U22 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  AND2_H U23 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  NOR2_D U24 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  INVERT_I U25 ( .A(\A2[7] ), .Z(n28) );
  INVERT_H U26 ( .A(\A2[4] ), .Z(n6) );
  AND2_I U27 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U28 ( .A(\CARRYB[1][0] ), .Z(n8) );
  INVERT_E U29 ( .A(n8), .Z(n9) );
  AND2_H U30 ( .A(n27), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U31 ( .A(\CARRYB[1][4] ), .Z(n10) );
  INVERT_E U32 ( .A(n10), .Z(n11) );
  AND2_H U33 ( .A(n16), .B(n26), .Z(\CARRYB[1][4] ) );
  INVERT_D U34 ( .A(\CARRYB[1][5] ), .Z(n12) );
  INVERT_E U35 ( .A(n12), .Z(n13) );
  AND2_H U36 ( .A(n14), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_I U37 ( .A(n29), .Z(n30) );
  AND2_H U38 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U39 ( .A(B[5]), .Z(n44) );
  INVERT_F U40 ( .A(B[4]), .Z(n15) );
  OR2_I U41 ( .A(n41), .B(n45), .Z(\ab[0][4] ) );
  INVERT_H U42 ( .A(\ab[1][0] ), .Z(n27) );
  OR2_J U43 ( .A(n18), .B(n49), .Z(\ab[1][0] ) );
  INVERT_I U44 ( .A(B[0]), .Z(n49) );
  NOR2_D U45 ( .A(B[0]), .B(n38), .Z(\ab[3][0] ) );
  INVERT_I U46 ( .A(n40), .Z(n17) );
  INVERT_M U47 ( .A(n17), .Z(n18) );
  INVERT_H U48 ( .A(A[1]), .Z(n40) );
  NOR2_D U49 ( .A(B[5]), .B(n38), .Z(\ab[3][5] ) );
  NOR2_D U50 ( .A(B[6]), .B(n38), .Z(\ab[3][6] ) );
  INVERT_N U51 ( .A(ZA), .Z(n38) );
  INVERT_H U52 ( .A(n39), .Z(n19) );
  INVERT_L U53 ( .A(n19), .Z(n20) );
  INVERT_H U54 ( .A(A[2]), .Z(n39) );
  AND2_H U55 ( .A(n22), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U56 ( .A(n41), .B(n46), .Z(\ab[0][3] ) );
  INVERT_E U57 ( .A(\ab[1][2] ), .Z(n21) );
  INVERT_H U58 ( .A(n21), .Z(n22) );
  AND2_J U59 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  XOR2_D U60 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  INVERT_F U61 ( .A(\ab[0][4] ), .Z(n23) );
  AND2_I U62 ( .A(\ab[1][3] ), .B(n23), .Z(\CARRYB[1][3] ) );
  INVERT_E U63 ( .A(\ab[0][5] ), .Z(n25) );
  INVERT_F U64 ( .A(n25), .Z(n26) );
  NOR2_C U65 ( .A(n41), .B(n44), .Z(\ab[0][5] ) );
  NAND2BAL_E U66 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_M U67 ( .A(A[0]), .Z(n41) );
  INVERT_H U68 ( .A(B[4]), .Z(n45) );
  NOR2_E U69 ( .A(n41), .B(n48), .Z(\ab[0][1] ) );
  NOR2_E U70 ( .A(n18), .B(n48), .Z(\ab[1][1] ) );
  INVERT_I U71 ( .A(B[1]), .Z(n48) );
  NOR2_D U72 ( .A(n20), .B(n46), .Z(\ab[2][3] ) );
  NOR2_E U73 ( .A(n18), .B(n46), .Z(\ab[1][3] ) );
  INVERT_I U74 ( .A(B[3]), .Z(n46) );
  NOR2_E U75 ( .A(n41), .B(n47), .Z(\ab[0][2] ) );
  NOR2_E U76 ( .A(n43), .B(n41), .Z(\ab[0][6] ) );
  AND2_H U77 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U78 ( .A(B[2]), .Z(n47) );
  XOR2_B U79 ( .A(n23), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  NOR2_E U80 ( .A(n43), .B(n18), .Z(\ab[1][6] ) );
  XOR2_D U81 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  INVERT_H U82 ( .A(\A1[8] ), .Z(n29) );
  NOR2_D U83 ( .A(n42), .B(n38), .Z(\ab[3][7] ) );
  NOR2_E U84 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_K U85 ( .A(ZB), .Z(n42) );
  NOR2_D U86 ( .A(B[3]), .B(n38), .Z(\ab[3][3] ) );
  NOR2_D U87 ( .A(B[4]), .B(n38), .Z(\ab[3][4] ) );
  INVERT_I U88 ( .A(B[6]), .Z(n43) );
  INVERT_H U89 ( .A(\A2[5] ), .Z(n31) );
  INVERT_I U90 ( .A(n31), .Z(n32) );
  AND2_I U91 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][1] ), .Z(n33) );
  OR2_I U93 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  BUFFER_H U94 ( .A(\CARRYB[1][2] ), .Z(n34) );
  NOR2_C U95 ( .A(n18), .B(n47), .Z(\ab[1][2] ) );
  NOR2_D U96 ( .A(n49), .B(n41), .Z(PRODUCT[0]) );
  INVERT_H U97 ( .A(\ab[1][7] ), .Z(n35) );
  INVERT_H U98 ( .A(\ab[2][6] ), .Z(n36) );
  AND2_H U99 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U100 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U101 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U102 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U103 ( .A(\ab[0][1] ), .B(n27), .Z(PRODUCT[1]) );
  XOR2_C U104 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U105 ( .A(\ab[0][3] ), .B(n22), .Z(\SUMB[1][2] ) );
  XOR2_C U106 ( .A(n26), .B(n16), .Z(\SUMB[1][4] ) );
  XOR2_C U107 ( .A(\ab[0][6] ), .B(n14), .Z(\SUMB[1][5] ) );
  XOR2_C U108 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U109 ( .A(\CARRYB[3][7] ), .Z(n37) );
endmodule


module dsp_slice_13 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_13_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_13_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_12_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_12_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_12_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_12_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_12 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_12_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_12_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_11_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_11_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n24), .Z(n22) );
  INVERT_E U3 ( .A(n3), .Z(n21) );
  INVERT_H U4 ( .A(n49), .Z(n28) );
  AO21_F U5 ( .A1(n29), .A2(n51), .B(n20), .Z(n1) );
  AO21_F U6 ( .A1(n26), .A2(n12), .B(n5), .Z(n2) );
  NOR2_D U7 ( .A(B[4]), .B(A[4]), .Z(n48) );
  XOR2_B U8 ( .A(n32), .B(n33), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n23), .B(B[8]), .Z(n35) );
  XOR2_B U10 ( .A(n36), .B(n23), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n52) );
  INVERT_D U12 ( .A(n52), .Z(n3) );
  NAND2_F U13 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_H U14 ( .A(n41), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n41) );
  INVERT_E U17 ( .A(n13), .Z(n11) );
  INVERT_E U18 ( .A(n14), .Z(n6) );
  INVERT_H U19 ( .A(n6), .Z(n7) );
  INVERT_H U20 ( .A(n48), .Z(n8) );
  INVERT_E U21 ( .A(n21), .Z(n19) );
  NAND2BAL_E U22 ( .A(n25), .B(n38), .Z(n39) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n38) );
  NAND2BAL_E U24 ( .A(n27), .B(n46), .Z(n47) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n46) );
  INVERT_E U26 ( .A(n42), .Z(n26) );
  INVERT_E U27 ( .A(n53), .Z(n29) );
  AO21_E U28 ( .A1(n23), .A2(A[8]), .B(n35), .Z(n33) );
  XNOR2_C U29 ( .A(n50), .B(n9), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n28), .B(n16), .Z(n50) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n36) );
  INVERT_D U32 ( .A(B[2]), .Z(n31) );
  CLKI_O U33 ( .A(n22), .Z(n23) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  INVERT_H U35 ( .A(n2), .Z(n10) );
  INVERT_F U36 ( .A(n11), .Z(n12) );
  OA21_F U37 ( .A1(n44), .A2(n15), .B(n46), .Z(n40) );
  INVERT_D U38 ( .A(n40), .Z(n13) );
  INVERT_D U39 ( .A(n45), .Z(n14) );
  INVERT_F U40 ( .A(n7), .Z(n15) );
  OA21_F U41 ( .A1(n16), .A2(n9), .B(n49), .Z(n45) );
  INVERT_F U42 ( .A(n8), .Z(n16) );
  INVERT_E U43 ( .A(n31), .Z(n17) );
  INVERT_H U44 ( .A(n17), .Z(n18) );
  INVERT_F U45 ( .A(n19), .Z(n20) );
  OA21_F U46 ( .A1(n37), .A2(n10), .B(n38), .Z(n34) );
  INVERT_D U47 ( .A(n34), .Z(n24) );
  XOR2_B U48 ( .A(n51), .B(n54), .Z(SUM[3]) );
  NOR2_C U49 ( .A(n20), .B(n53), .Z(n54) );
  NOR2_E U50 ( .A(B[3]), .B(A[3]), .Z(n53) );
  XOR2_B U51 ( .A(n39), .B(n10), .Z(SUM[7]) );
  INVERT_E U52 ( .A(n37), .Z(n25) );
  NOR2_E U53 ( .A(B[7]), .B(A[7]), .Z(n37) );
  XOR2_B U54 ( .A(n43), .B(n12), .Z(SUM[6]) );
  NOR2_C U55 ( .A(n5), .B(n42), .Z(n43) );
  NOR2_E U56 ( .A(B[6]), .B(A[6]), .Z(n42) );
  XOR2_B U57 ( .A(n47), .B(n15), .Z(SUM[5]) );
  INVERT_E U58 ( .A(n44), .Z(n27) );
  NOR2_E U59 ( .A(B[5]), .B(A[5]), .Z(n44) );
  NOR2_F U60 ( .A(n18), .B(n30), .Z(n51) );
  INVERT_H U61 ( .A(A[2]), .Z(n30) );
  XOR2_B U62 ( .A(B[9]), .B(A[9]), .Z(n32) );
  AOI21_A U63 ( .A1(n18), .A2(n30), .B(n51), .Z(SUM[2]) );
endmodule


module dsp_slice_11_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_11_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n10, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n12), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n16), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  INVERT_I U14 ( .A(n9), .Z(n10) );
  OR2_I U15 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U16 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U17 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U18 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U19 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U20 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U21 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  XOR2_D U22 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U23 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U24 ( .A(n5), .Z(n6) );
  NAND2BAL_E U25 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U26 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U27 ( .A(n7), .Z(n8) );
  AND2_I U28 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U29 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_H U30 ( .A(\A2[4] ), .Z(n9) );
  AND2_I U31 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U32 ( .A(\CARRYB[1][0] ), .Z(n11) );
  INVERT_E U33 ( .A(n11), .Z(n12) );
  AND2_H U34 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U35 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U38 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U39 ( .A(n15), .Z(n16) );
  AND2_H U40 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_11 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_11_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_11_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_10_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_10_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_10_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_10_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_10 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_10_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_10_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_9_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_9_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n24), .Z(n22) );
  INVERT_E U3 ( .A(n3), .Z(n21) );
  INVERT_H U4 ( .A(n49), .Z(n28) );
  AO21_F U5 ( .A1(n29), .A2(n51), .B(n20), .Z(n1) );
  AO21_F U6 ( .A1(n26), .A2(n12), .B(n5), .Z(n2) );
  NOR2_D U7 ( .A(B[4]), .B(A[4]), .Z(n48) );
  XOR2_B U8 ( .A(n32), .B(n33), .Z(SUM[9]) );
  OA21_H U9 ( .A1(A[8]), .A2(n23), .B(B[8]), .Z(n35) );
  XOR2_B U10 ( .A(n36), .B(n23), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n52) );
  INVERT_D U12 ( .A(n52), .Z(n3) );
  NAND2_F U13 ( .A(B[4]), .B(A[4]), .Z(n49) );
  INVERT_H U14 ( .A(n41), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n41) );
  INVERT_E U17 ( .A(n13), .Z(n11) );
  INVERT_E U18 ( .A(n14), .Z(n6) );
  INVERT_H U19 ( .A(n6), .Z(n7) );
  INVERT_H U20 ( .A(n48), .Z(n8) );
  INVERT_E U21 ( .A(n21), .Z(n19) );
  NAND2BAL_E U22 ( .A(n25), .B(n38), .Z(n39) );
  NAND2_F U23 ( .A(B[7]), .B(A[7]), .Z(n38) );
  NAND2BAL_E U24 ( .A(n27), .B(n46), .Z(n47) );
  NAND2_F U25 ( .A(B[5]), .B(A[5]), .Z(n46) );
  INVERT_E U26 ( .A(n42), .Z(n26) );
  INVERT_E U27 ( .A(n53), .Z(n29) );
  AO21_E U28 ( .A1(n23), .A2(A[8]), .B(n35), .Z(n33) );
  XNOR2_C U29 ( .A(n50), .B(n9), .Z(SUM[4]) );
  NOR2_C U30 ( .A(n28), .B(n16), .Z(n50) );
  XOR2_B U31 ( .A(B[8]), .B(A[8]), .Z(n36) );
  INVERT_D U32 ( .A(B[2]), .Z(n31) );
  CLKI_O U33 ( .A(n22), .Z(n23) );
  INVERT_H U34 ( .A(n1), .Z(n9) );
  INVERT_H U35 ( .A(n2), .Z(n10) );
  INVERT_F U36 ( .A(n11), .Z(n12) );
  OA21_F U37 ( .A1(n44), .A2(n15), .B(n46), .Z(n40) );
  INVERT_D U38 ( .A(n40), .Z(n13) );
  INVERT_D U39 ( .A(n45), .Z(n14) );
  INVERT_F U40 ( .A(n7), .Z(n15) );
  OA21_F U41 ( .A1(n16), .A2(n9), .B(n49), .Z(n45) );
  INVERT_F U42 ( .A(n8), .Z(n16) );
  INVERT_E U43 ( .A(n31), .Z(n17) );
  INVERT_H U44 ( .A(n17), .Z(n18) );
  INVERT_F U45 ( .A(n19), .Z(n20) );
  OA21_F U46 ( .A1(n37), .A2(n10), .B(n38), .Z(n34) );
  INVERT_D U47 ( .A(n34), .Z(n24) );
  XOR2_B U48 ( .A(n51), .B(n54), .Z(SUM[3]) );
  NOR2_C U49 ( .A(n20), .B(n53), .Z(n54) );
  NOR2_E U50 ( .A(B[3]), .B(A[3]), .Z(n53) );
  XOR2_B U51 ( .A(n39), .B(n10), .Z(SUM[7]) );
  INVERT_E U52 ( .A(n37), .Z(n25) );
  NOR2_E U53 ( .A(B[7]), .B(A[7]), .Z(n37) );
  XOR2_B U54 ( .A(n43), .B(n12), .Z(SUM[6]) );
  NOR2_C U55 ( .A(n5), .B(n42), .Z(n43) );
  NOR2_E U56 ( .A(B[6]), .B(A[6]), .Z(n42) );
  XOR2_B U57 ( .A(n47), .B(n15), .Z(SUM[5]) );
  INVERT_E U58 ( .A(n44), .Z(n27) );
  NOR2_E U59 ( .A(B[5]), .B(A[5]), .Z(n44) );
  NOR2_F U60 ( .A(n18), .B(n30), .Z(n51) );
  INVERT_H U61 ( .A(A[2]), .Z(n30) );
  XOR2_B U62 ( .A(B[9]), .B(A[9]), .Z(n32) );
  AOI21_A U63 ( .A1(n18), .A2(n30), .B(n51), .Z(SUM[2]) );
endmodule


module dsp_slice_9_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(\CARRYB[1][3] ), .CIN(\SUMB[1][4] ), 
        .COUT(\CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  dsp_slice_9_DW01_add_1 FS_1 ( .A({n44, n36, n33, n34, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n39, \A2[6] , 
        n38, n10, n28, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S3_2_6 ( .A(n43), .B(n6), .CIN(n42), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n41), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n40), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S14_7 ( .A(n45), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n2), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(n22), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n12), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n14), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_5 ( .A(n3), .B(n16), .CIN(\SUMB[1][6] ), .COUT(\CARRYB[2][5] ), 
        .SUM(\SUMB[2][5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n34) );
  INVERT_H U4 ( .A(\ab[1][5] ), .Z(n17) );
  NOR2_D U5 ( .A(B[1]), .B(n45), .Z(\ab[3][1] ) );
  INVERT_H U6 ( .A(\ab[1][4] ), .Z(n19) );
  INVERT_H U7 ( .A(\A2[3] ), .Z(n28) );
  INVERT_D U8 ( .A(n4), .Z(n3) );
  NOR2_D U9 ( .A(B[6]), .B(n45), .Z(n2) );
  OR2_J U10 ( .A(n21), .B(n51), .Z(\ab[1][5] ) );
  OR2_I U11 ( .A(n21), .B(n18), .Z(\ab[1][4] ) );
  OR2_J U12 ( .A(n45), .B(B[2]), .Z(\ab[3][2] ) );
  NOR2_C U13 ( .A(n24), .B(n18), .Z(\ab[2][4] ) );
  INVERT_I U14 ( .A(n9), .Z(n10) );
  OR2_I U15 ( .A(n24), .B(n50), .Z(\ab[2][6] ) );
  NOR2_C U16 ( .A(n24), .B(n56), .Z(\ab[2][0] ) );
  NOR2_C U17 ( .A(n24), .B(n54), .Z(\ab[2][2] ) );
  NOR2_C U18 ( .A(n24), .B(n55), .Z(\ab[2][1] ) );
  BUFFER_F U19 ( .A(\ab[2][5] ), .Z(n4) );
  OR2_H U20 ( .A(n51), .B(n24), .Z(\ab[2][5] ) );
  NOR2_D U21 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  XOR2_D U22 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U23 ( .A(\CARRYB[1][6] ), .Z(n5) );
  INVERT_E U24 ( .A(n5), .Z(n6) );
  NAND2BAL_E U25 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U26 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U27 ( .A(n7), .Z(n8) );
  AND2_I U28 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U29 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_H U30 ( .A(\A2[4] ), .Z(n9) );
  AND2_I U31 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U32 ( .A(\CARRYB[1][0] ), .Z(n11) );
  INVERT_E U33 ( .A(n11), .Z(n12) );
  AND2_H U34 ( .A(n31), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U35 ( .A(\CARRYB[1][4] ), .Z(n13) );
  INVERT_E U36 ( .A(n13), .Z(n14) );
  AND2_H U37 ( .A(n19), .B(n30), .Z(\CARRYB[1][4] ) );
  INVERT_D U38 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U39 ( .A(n15), .Z(n16) );
  AND2_H U40 ( .A(n17), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_I U41 ( .A(n35), .Z(n36) );
  AND2_H U42 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U43 ( .A(B[5]), .Z(n51) );
  INVERT_F U44 ( .A(B[4]), .Z(n18) );
  OR2_I U45 ( .A(n48), .B(n52), .Z(\ab[0][4] ) );
  INVERT_H U46 ( .A(\ab[1][0] ), .Z(n31) );
  OR2_J U47 ( .A(n21), .B(n56), .Z(\ab[1][0] ) );
  INVERT_I U48 ( .A(B[0]), .Z(n56) );
  NOR2_D U49 ( .A(B[0]), .B(n45), .Z(\ab[3][0] ) );
  NOR2_D U50 ( .A(B[5]), .B(n45), .Z(\ab[3][5] ) );
  INVERT_N U51 ( .A(ZA), .Z(n45) );
  INVERT_I U52 ( .A(n47), .Z(n20) );
  INVERT_M U53 ( .A(n20), .Z(n21) );
  INVERT_H U54 ( .A(A[1]), .Z(n47) );
  INVERT_E U55 ( .A(\ab[3][2] ), .Z(n22) );
  INVERT_H U56 ( .A(n46), .Z(n23) );
  INVERT_L U57 ( .A(n23), .Z(n24) );
  INVERT_H U58 ( .A(A[2]), .Z(n46) );
  AND2_H U59 ( .A(n26), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U60 ( .A(n48), .B(n53), .Z(\ab[0][3] ) );
  INVERT_E U61 ( .A(\ab[1][2] ), .Z(n25) );
  INVERT_H U62 ( .A(n25), .Z(n26) );
  INVERT_F U63 ( .A(\ab[0][4] ), .Z(n27) );
  AND2_I U64 ( .A(\ab[1][3] ), .B(n27), .Z(\CARRYB[1][3] ) );
  INVERT_E U65 ( .A(\ab[0][5] ), .Z(n29) );
  INVERT_F U66 ( .A(n29), .Z(n30) );
  NOR2_C U67 ( .A(n48), .B(n51), .Z(\ab[0][5] ) );
  INVERT_M U68 ( .A(A[0]), .Z(n48) );
  INVERT_H U69 ( .A(B[4]), .Z(n52) );
  NOR2_E U70 ( .A(n48), .B(n55), .Z(\ab[0][1] ) );
  NOR2_E U71 ( .A(n21), .B(n55), .Z(\ab[1][1] ) );
  INVERT_I U72 ( .A(B[1]), .Z(n55) );
  NOR2_D U73 ( .A(n24), .B(n53), .Z(\ab[2][3] ) );
  NOR2_E U74 ( .A(n21), .B(n53), .Z(\ab[1][3] ) );
  INVERT_I U75 ( .A(B[3]), .Z(n53) );
  NOR2_E U76 ( .A(n48), .B(n54), .Z(\ab[0][2] ) );
  NOR2_E U77 ( .A(n50), .B(n48), .Z(\ab[0][6] ) );
  AND2_H U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U79 ( .A(\A2[7] ), .Z(n39) );
  INVERT_I U80 ( .A(B[2]), .Z(n54) );
  XOR2_B U81 ( .A(n27), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  INVERT_H U82 ( .A(\A1[7] ), .Z(n32) );
  INVERT_I U83 ( .A(n32), .Z(n33) );
  NOR2_E U84 ( .A(n50), .B(n21), .Z(\ab[1][6] ) );
  INVERT_H U85 ( .A(\A1[8] ), .Z(n35) );
  NOR2_D U86 ( .A(n49), .B(n45), .Z(\ab[3][7] ) );
  NOR2_E U87 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  INVERT_K U88 ( .A(ZB), .Z(n49) );
  NOR2_D U89 ( .A(B[3]), .B(n45), .Z(\ab[3][3] ) );
  NOR2_D U90 ( .A(B[4]), .B(n45), .Z(\ab[3][4] ) );
  INVERT_I U91 ( .A(B[6]), .Z(n50) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n37) );
  INVERT_I U93 ( .A(n37), .Z(n38) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NAND2_E U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n40) );
  OR2_I U97 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n41) );
  NOR2_C U99 ( .A(n21), .B(n54), .Z(\ab[1][2] ) );
  NOR2_D U100 ( .A(n56), .B(n48), .Z(PRODUCT[0]) );
  INVERT_H U101 ( .A(\ab[1][7] ), .Z(n42) );
  INVERT_H U102 ( .A(\ab[2][6] ), .Z(n43) );
  AND2_H U103 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U104 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U105 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U106 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(n31), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U111 ( .A(\ab[0][3] ), .B(n26), .Z(\SUMB[1][2] ) );
  XOR2_C U112 ( .A(n30), .B(n19), .Z(\SUMB[1][4] ) );
  XOR2_C U113 ( .A(\ab[0][6] ), .B(n17), .Z(\SUMB[1][5] ) );
  XOR2_C U114 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U115 ( .A(\CARRYB[3][7] ), .Z(n44) );
endmodule


module dsp_slice_9 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_9_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), .CI(
        1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_9_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERTBAL_J U5 ( .A(n12), .Z(n13) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U7 ( .A(n4), .Z(n5) );
  INVERT_H U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_8_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_8_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_8_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_8_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_8 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_8_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_8_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_7_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_7_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n29), .Z(n27) );
  INVERT_D U3 ( .A(B[2]), .Z(n35) );
  AO21_F U4 ( .A1(n31), .A2(n15), .B(n5), .Z(n1) );
  AO21_F U5 ( .A1(n33), .A2(n55), .B(n26), .Z(n2) );
  AND2_H U6 ( .A(B[4]), .B(A[4]), .Z(n53) );
  INVERT_D U7 ( .A(n53), .Z(n3) );
  OA21_H U8 ( .A1(A[8]), .A2(n28), .B(B[8]), .Z(n39) );
  XOR2_B U9 ( .A(n40), .B(n28), .Z(SUM[8]) );
  INVERT_H U10 ( .A(n45), .Z(n4) );
  INVERT_H U11 ( .A(n4), .Z(n5) );
  AND2_I U12 ( .A(B[6]), .B(A[6]), .Z(n45) );
  INVERT_E U13 ( .A(n16), .Z(n14) );
  INVERT_E U14 ( .A(n17), .Z(n6) );
  INVERT_H U15 ( .A(n6), .Z(n7) );
  INVERT_E U16 ( .A(n19), .Z(n8) );
  INVERT_H U17 ( .A(n8), .Z(n9) );
  INVERT_F U18 ( .A(n23), .Z(n21) );
  BUFFER_H U19 ( .A(n52), .Z(n23) );
  NAND2BAL_E U20 ( .A(n30), .B(n42), .Z(n43) );
  NAND2_F U21 ( .A(B[7]), .B(A[7]), .Z(n42) );
  NAND2BAL_E U22 ( .A(n32), .B(n50), .Z(n51) );
  NAND2_F U23 ( .A(B[5]), .B(A[5]), .Z(n50) );
  INVERT_E U24 ( .A(n46), .Z(n31) );
  INVERT_E U25 ( .A(n57), .Z(n33) );
  XOR2_E U26 ( .A(B[9]), .B(A[9]), .Z(n36) );
  INVERT_D U27 ( .A(n37), .Z(n10) );
  INVERT_E U28 ( .A(n10), .Z(n11) );
  AO21_E U29 ( .A1(n28), .A2(A[8]), .B(n39), .Z(n37) );
  XOR2_C U30 ( .A(n36), .B(n11), .Z(SUM[9]) );
  XNOR2_C U31 ( .A(n54), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n7), .B(n22), .Z(n54) );
  NAND2_E U33 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U34 ( .A(B[8]), .B(A[8]), .Z(n40) );
  CLKI_O U35 ( .A(n27), .Z(n28) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_H U37 ( .A(n2), .Z(n12) );
  INVERT_H U38 ( .A(n1), .Z(n13) );
  INVERT_F U39 ( .A(n14), .Z(n15) );
  OA21_F U40 ( .A1(n48), .A2(n20), .B(n50), .Z(n44) );
  INVERT_D U41 ( .A(n44), .Z(n16) );
  INVERT_D U42 ( .A(n3), .Z(n17) );
  INVERT_F U43 ( .A(n7), .Z(n18) );
  INVERT_D U44 ( .A(n49), .Z(n19) );
  INVERT_F U45 ( .A(n9), .Z(n20) );
  OA21_F U46 ( .A1(n22), .A2(n12), .B(n18), .Z(n49) );
  INVERT_F U47 ( .A(n21), .Z(n22) );
  INVERT_E U48 ( .A(n35), .Z(n24) );
  INVERT_H U49 ( .A(n24), .Z(n25) );
  INVERT_F U50 ( .A(n56), .Z(n26) );
  OA21_F U51 ( .A1(n41), .A2(n13), .B(n42), .Z(n38) );
  INVERT_D U52 ( .A(n38), .Z(n29) );
  XOR2_B U53 ( .A(n55), .B(n58), .Z(SUM[3]) );
  NOR2_C U54 ( .A(n26), .B(n57), .Z(n58) );
  NOR2_E U55 ( .A(B[3]), .B(A[3]), .Z(n57) );
  XOR2_B U56 ( .A(n43), .B(n13), .Z(SUM[7]) );
  INVERT_E U57 ( .A(n41), .Z(n30) );
  NOR2_E U58 ( .A(B[7]), .B(A[7]), .Z(n41) );
  XOR2_B U59 ( .A(n47), .B(n15), .Z(SUM[6]) );
  NOR2_C U60 ( .A(n5), .B(n46), .Z(n47) );
  NOR2_E U61 ( .A(B[6]), .B(A[6]), .Z(n46) );
  XOR2_B U62 ( .A(n51), .B(n20), .Z(SUM[5]) );
  INVERT_E U63 ( .A(n48), .Z(n32) );
  NOR2_E U64 ( .A(B[5]), .B(A[5]), .Z(n48) );
  NOR2_F U65 ( .A(n25), .B(n34), .Z(n55) );
  INVERT_H U66 ( .A(A[2]), .Z(n34) );
  AOI21_A U67 ( .A1(n25), .A2(n34), .B(n55), .Z(SUM[2]) );
endmodule


module dsp_slice_7_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S2_2_3 ( .A(\ab[2][3] ), .B(n13), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(\CARRYB[1][5] ), .CIN(\SUMB[1][6] ), 
        .COUT(\CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_7_DW01_add_1 FS_1 ( .A({n27, n15, n18, n24, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n9, n22, \A2[6] , 
        n23, \A2[4] , n11, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_D S14_7 ( .A(n28), .B(n32), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S3_2_6 ( .A(n26), .B(n16), .CIN(n25), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n7), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n21), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n20), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n19), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(n5), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n24) );
  NOR2_D U3 ( .A(B[1]), .B(n28), .Z(\ab[3][1] ) );
  NOR2_D U4 ( .A(B[0]), .B(n28), .Z(\ab[3][0] ) );
  INVERT_F U5 ( .A(\ab[0][6] ), .Z(n2) );
  INVERT_H U6 ( .A(n2), .Z(n3) );
  NOR2_D U7 ( .A(n33), .B(n31), .Z(\ab[0][6] ) );
  INVERT_E U8 ( .A(\ab[2][7] ), .Z(n4) );
  INVERT_H U9 ( .A(n4), .Z(n5) );
  INVERT_D U10 ( .A(\CARRYB[1][2] ), .Z(n6) );
  INVERT_E U11 ( .A(n6), .Z(n7) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n8) );
  INVERT_H U13 ( .A(n8), .Z(n9) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  AND2_H U16 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U17 ( .A(n10), .Z(n11) );
  CLKI_O U18 ( .A(n14), .Z(n15) );
  AND2_H U19 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U20 ( .A(n29), .B(n37), .Z(\ab[2][2] ) );
  NOR2_D U21 ( .A(n29), .B(n35), .Z(\ab[2][4] ) );
  INVERT_H U22 ( .A(\A2[3] ), .Z(n10) );
  AND2_I U23 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  XOR2_D U24 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][3] ), .Z(n12) );
  INVERT_E U26 ( .A(n12), .Z(n13) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_D U28 ( .A(B[6]), .B(n28), .Z(\ab[3][6] ) );
  INVERT_M U29 ( .A(A[2]), .Z(n29) );
  NOR2_D U30 ( .A(B[2]), .B(n28), .Z(\ab[3][2] ) );
  INVERT_N U31 ( .A(ZA), .Z(n28) );
  NOR2_E U32 ( .A(n30), .B(n37), .Z(\ab[1][2] ) );
  XOR2_D U33 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  AND2_J U34 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  NOR2_E U35 ( .A(n39), .B(n30), .Z(\ab[1][0] ) );
  XOR2_B U36 ( .A(n3), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  AND2_I U37 ( .A(\ab[1][5] ), .B(n3), .Z(\CARRYB[1][5] ) );
  NOR2_E U38 ( .A(n34), .B(n30), .Z(\ab[1][5] ) );
  NOR2_E U39 ( .A(n35), .B(n30), .Z(\ab[1][4] ) );
  INVERT_I U40 ( .A(B[4]), .Z(n35) );
  CLKI_K U41 ( .A(\A1[8] ), .Z(n14) );
  XOR2_B U42 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  NOR2_E U43 ( .A(n36), .B(n30), .Z(\ab[1][3] ) );
  NOR2_D U44 ( .A(n29), .B(n36), .Z(\ab[2][3] ) );
  INVERT_I U45 ( .A(B[3]), .Z(n36) );
  NOR2_E U46 ( .A(n35), .B(n31), .Z(\ab[0][4] ) );
  NOR2_E U47 ( .A(n31), .B(n37), .Z(\ab[0][2] ) );
  NOR2_E U48 ( .A(n36), .B(n31), .Z(\ab[0][3] ) );
  NOR2_E U49 ( .A(n34), .B(n31), .Z(\ab[0][5] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n31) );
  BUFFER_H U51 ( .A(\CARRYB[1][6] ), .Z(n16) );
  NOR2_E U52 ( .A(A[0]), .B(n32), .Z(\ab[0][7] ) );
  INVERT_I U53 ( .A(\A2[7] ), .Z(n22) );
  INVERT_H U54 ( .A(\A1[7] ), .Z(n17) );
  INVERT_I U55 ( .A(n17), .Z(n18) );
  INVERT_I U56 ( .A(B[5]), .Z(n34) );
  NOR2_D U57 ( .A(n29), .B(n39), .Z(\ab[2][0] ) );
  INVERT_I U58 ( .A(B[0]), .Z(n39) );
  NOR2_E U59 ( .A(n33), .B(n30), .Z(\ab[1][6] ) );
  INVERT_M U60 ( .A(A[1]), .Z(n30) );
  NOR2_D U61 ( .A(B[5]), .B(n28), .Z(\ab[3][5] ) );
  BUFFER_H U62 ( .A(\CARRYB[1][0] ), .Z(n19) );
  NOR2_E U63 ( .A(n38), .B(n31), .Z(\ab[0][1] ) );
  AND2_H U64 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  BUFFER_H U65 ( .A(\CARRYB[1][4] ), .Z(n20) );
  NOR2_D U66 ( .A(n32), .B(n28), .Z(\ab[3][7] ) );
  INVERT_K U67 ( .A(ZB), .Z(n32) );
  INVERT_I U68 ( .A(B[2]), .Z(n37) );
  NOR2_D U69 ( .A(n29), .B(n34), .Z(\ab[2][5] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][1] ), .Z(n21) );
  INVERT_I U71 ( .A(B[1]), .Z(n38) );
  NOR2_E U72 ( .A(n38), .B(n30), .Z(\ab[1][1] ) );
  NOR2_C U73 ( .A(n29), .B(n38), .Z(\ab[2][1] ) );
  AND2_H U74 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  NOR2_D U75 ( .A(B[4]), .B(n28), .Z(\ab[3][4] ) );
  INVERT_I U76 ( .A(B[6]), .Z(n33) );
  NOR2_C U77 ( .A(A[2]), .B(n32), .Z(\ab[2][7] ) );
  NAND2_E U78 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_L U79 ( .A(\A2[5] ), .Z(n23) );
  AND2_I U80 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  NOR2_D U81 ( .A(B[3]), .B(n28), .Z(\ab[3][3] ) );
  OR2_I U82 ( .A(A[1]), .B(n32), .Z(\ab[1][7] ) );
  AND2_H U83 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_D U84 ( .A(n39), .B(n31), .Z(PRODUCT[0]) );
  INVERT_H U85 ( .A(\ab[1][7] ), .Z(n25) );
  OR2_J U86 ( .A(n29), .B(n33), .Z(\ab[2][6] ) );
  INVERT_H U87 ( .A(\ab[2][6] ), .Z(n26) );
  AND2_H U88 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U89 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U90 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U91 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U92 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U93 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U94 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U95 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U96 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U97 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U98 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U99 ( .A(\CARRYB[3][7] ), .Z(n27) );
endmodule


module dsp_slice_7 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_7_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), .CI(
        1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_7_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n6), .Z(n7) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_I U7 ( .A(n4), .Z(n5) );
  INVERT_K U8 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_6_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_6_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n28), .Z(n26) );
  INVERT_D U3 ( .A(B[2]), .Z(n34) );
  INVERT_E U4 ( .A(n3), .Z(n25) );
  AO21_F U5 ( .A1(n30), .A2(n15), .B(n7), .Z(n1) );
  AO21_F U6 ( .A1(n32), .A2(n54), .B(n24), .Z(n2) );
  XOR2_B U7 ( .A(n35), .B(n36), .Z(SUM[9]) );
  NOR2_C U8 ( .A(B[4]), .B(A[4]), .Z(n51) );
  OA21_H U9 ( .A1(A[8]), .A2(n27), .B(B[8]), .Z(n38) );
  XOR2_B U10 ( .A(n39), .B(n27), .Z(SUM[8]) );
  AND2_H U11 ( .A(B[3]), .B(A[3]), .Z(n55) );
  INVERT_D U12 ( .A(n55), .Z(n3) );
  INVERT_H U13 ( .A(n52), .Z(n4) );
  INVERT_H U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(n44), .Z(n6) );
  INVERT_H U16 ( .A(n6), .Z(n7) );
  AND2_I U17 ( .A(B[6]), .B(A[6]), .Z(n44) );
  INVERT_E U18 ( .A(n16), .Z(n14) );
  INVERT_E U19 ( .A(n17), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  INVERT_E U21 ( .A(n19), .Z(n10) );
  INVERT_H U22 ( .A(n10), .Z(n11) );
  INVERT_E U23 ( .A(n25), .Z(n23) );
  NAND2BAL_E U24 ( .A(n29), .B(n41), .Z(n42) );
  NAND2_F U25 ( .A(B[7]), .B(A[7]), .Z(n41) );
  NAND2BAL_E U26 ( .A(n31), .B(n49), .Z(n50) );
  NAND2_F U27 ( .A(B[5]), .B(A[5]), .Z(n49) );
  INVERT_E U28 ( .A(n45), .Z(n30) );
  INVERT_E U29 ( .A(n56), .Z(n32) );
  AO21_E U30 ( .A1(n27), .A2(A[8]), .B(n38), .Z(n36) );
  XNOR2_C U31 ( .A(n53), .B(n12), .Z(SUM[4]) );
  NOR2_C U32 ( .A(n4), .B(n20), .Z(n53) );
  XOR2_B U33 ( .A(B[8]), .B(A[8]), .Z(n39) );
  CLKI_O U34 ( .A(n26), .Z(n27) );
  INVERT_H U35 ( .A(n2), .Z(n12) );
  INVERT_H U36 ( .A(n1), .Z(n13) );
  INVERT_F U37 ( .A(n14), .Z(n15) );
  OA21_F U38 ( .A1(n47), .A2(n18), .B(n49), .Z(n43) );
  INVERT_D U39 ( .A(n43), .Z(n16) );
  NAND2BAL_E U40 ( .A(B[4]), .B(A[4]), .Z(n52) );
  INVERT_D U41 ( .A(n48), .Z(n17) );
  INVERT_F U42 ( .A(n9), .Z(n18) );
  OA21_F U43 ( .A1(n20), .A2(n12), .B(n5), .Z(n48) );
  INVERT_D U44 ( .A(n51), .Z(n19) );
  INVERT_F U45 ( .A(n11), .Z(n20) );
  INVERT_E U46 ( .A(n34), .Z(n21) );
  INVERT_H U47 ( .A(n21), .Z(n22) );
  INVERT_F U48 ( .A(n23), .Z(n24) );
  OA21_F U49 ( .A1(n40), .A2(n13), .B(n41), .Z(n37) );
  INVERT_D U50 ( .A(n37), .Z(n28) );
  XOR2_B U51 ( .A(n54), .B(n57), .Z(SUM[3]) );
  NOR2_C U52 ( .A(n24), .B(n56), .Z(n57) );
  NOR2_E U53 ( .A(B[3]), .B(A[3]), .Z(n56) );
  XOR2_B U54 ( .A(n42), .B(n13), .Z(SUM[7]) );
  INVERT_E U55 ( .A(n40), .Z(n29) );
  NOR2_E U56 ( .A(B[7]), .B(A[7]), .Z(n40) );
  XOR2_B U57 ( .A(n46), .B(n15), .Z(SUM[6]) );
  NOR2_C U58 ( .A(n7), .B(n45), .Z(n46) );
  NOR2_E U59 ( .A(B[6]), .B(A[6]), .Z(n45) );
  XOR2_B U60 ( .A(n50), .B(n18), .Z(SUM[5]) );
  INVERT_E U61 ( .A(n47), .Z(n31) );
  NOR2_E U62 ( .A(B[5]), .B(A[5]), .Z(n47) );
  NOR2_F U63 ( .A(n22), .B(n33), .Z(n54) );
  INVERT_H U64 ( .A(A[2]), .Z(n33) );
  XOR2_B U65 ( .A(B[9]), .B(A[9]), .Z(n35) );
  AOI21_A U66 ( .A1(n22), .A2(n33), .B(n54), .Z(SUM[2]) );
endmodule


module dsp_slice_6_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S1_2_0 ( .A(\ab[2][0] ), .B(n13), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S2_2_5 ( .A(\ab[2][5] ), .B(n17), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  dsp_slice_6_DW01_add_1 FS_1 ( .A({n33, n24, n22, n28, \A1[5] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n29, \A2[6] , 
        n26, n9, n20, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S3_2_6 ( .A(n32), .B(n5), .CIN(n31), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n30), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n27), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S14_7 ( .A(n38), .B(n34), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_E S5_6 ( .A(n18), .B(\CARRYB[2][6] ), .CIN(n3), .COUT(\CARRYB[3][6] ), 
        .SUM(\SUMB[3][6] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n11), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  XOR2_D U2 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n28) );
  XOR2_D U4 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  NOR2_D U5 ( .A(B[1]), .B(n34), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[0]), .B(n34), .Z(\ab[3][0] ) );
  NOR2_D U7 ( .A(n34), .B(B[2]), .Z(\ab[3][2] ) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n20) );
  OR2_J U9 ( .A(B[6]), .B(n34), .Z(\ab[3][6] ) );
  INVERT_N U10 ( .A(ZA), .Z(n34) );
  INVERT_E U11 ( .A(\ab[2][7] ), .Z(n2) );
  INVERT_H U12 ( .A(n2), .Z(n3) );
  INVERT_D U13 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U14 ( .A(n4), .Z(n5) );
  NAND2BAL_E U15 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U16 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U17 ( .A(n6), .Z(n7) );
  AND2_I U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_H U21 ( .A(\A2[4] ), .Z(n8) );
  INVERT_H U22 ( .A(n8), .Z(n9) );
  AND2_I U23 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_D U24 ( .A(\CARRYB[1][3] ), .Z(n10) );
  INVERT_E U25 ( .A(n10), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  INVERT_I U27 ( .A(n23), .Z(n24) );
  AND2_H U28 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U29 ( .A(n19), .B(n44), .Z(\ab[2][1] ) );
  INVERT_D U30 ( .A(\CARRYB[1][0] ), .Z(n12) );
  INVERT_E U31 ( .A(n12), .Z(n13) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_D U33 ( .A(\CARRYB[1][4] ), .Z(n14) );
  INVERT_E U34 ( .A(n14), .Z(n15) );
  AND2_H U35 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U36 ( .A(\CARRYB[1][5] ), .Z(n16) );
  INVERT_E U37 ( .A(n16), .Z(n17) );
  AND2_H U38 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_E U39 ( .A(\ab[3][6] ), .Z(n18) );
  NOR2_D U40 ( .A(n19), .B(n42), .Z(\ab[2][3] ) );
  BUFFER_K U41 ( .A(A[2]), .Z(n35) );
  INVERT_M U42 ( .A(n35), .Z(n19) );
  NOR2_C U43 ( .A(n19), .B(n43), .Z(\ab[2][2] ) );
  NOR2_D U44 ( .A(n19), .B(n41), .Z(\ab[2][4] ) );
  NOR2_D U45 ( .A(n19), .B(n40), .Z(\ab[2][5] ) );
  NOR2_E U46 ( .A(n39), .B(n36), .Z(\ab[1][6] ) );
  NOR2_E U47 ( .A(n37), .B(n41), .Z(\ab[0][4] ) );
  NOR2_E U48 ( .A(n37), .B(n40), .Z(\ab[0][5] ) );
  NOR2_E U49 ( .A(n37), .B(n42), .Z(\ab[0][3] ) );
  INVERT_M U50 ( .A(A[0]), .Z(n37) );
  INVERT_I U51 ( .A(B[5]), .Z(n40) );
  INVERT_I U52 ( .A(B[4]), .Z(n41) );
  NOR2_E U53 ( .A(n37), .B(n44), .Z(\ab[0][1] ) );
  INVERT_I U54 ( .A(B[1]), .Z(n44) );
  INVERT_I U55 ( .A(B[3]), .Z(n42) );
  NOR2_D U56 ( .A(n19), .B(n45), .Z(\ab[2][0] ) );
  INVERT_I U57 ( .A(B[0]), .Z(n45) );
  NOR2_E U58 ( .A(n36), .B(n42), .Z(\ab[1][3] ) );
  NOR2_E U59 ( .A(n36), .B(n41), .Z(\ab[1][4] ) );
  NOR2_E U60 ( .A(n36), .B(n45), .Z(\ab[1][0] ) );
  NOR2_E U61 ( .A(n36), .B(n43), .Z(\ab[1][2] ) );
  NOR2_E U62 ( .A(n36), .B(n44), .Z(\ab[1][1] ) );
  NOR2_E U63 ( .A(n36), .B(n40), .Z(\ab[1][5] ) );
  INVERT_M U64 ( .A(A[1]), .Z(n36) );
  NOR2_E U65 ( .A(n37), .B(n43), .Z(\ab[0][2] ) );
  NOR2_E U66 ( .A(n39), .B(n37), .Z(\ab[0][6] ) );
  AND2_H U67 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  INVERT_I U68 ( .A(\A2[7] ), .Z(n29) );
  INVERT_H U69 ( .A(\A1[7] ), .Z(n21) );
  INVERT_I U70 ( .A(n21), .Z(n22) );
  INVERT_I U71 ( .A(B[2]), .Z(n43) );
  INVERT_H U72 ( .A(\A1[8] ), .Z(n23) );
  NOR2_D U73 ( .A(n38), .B(n34), .Z(\ab[3][7] ) );
  NOR2_E U74 ( .A(A[0]), .B(n38), .Z(\ab[0][7] ) );
  INVERT_K U75 ( .A(ZB), .Z(n38) );
  NOR2_D U76 ( .A(B[3]), .B(n34), .Z(\ab[3][3] ) );
  NOR2_C U77 ( .A(A[2]), .B(n38), .Z(\ab[2][7] ) );
  INVERT_I U78 ( .A(B[6]), .Z(n39) );
  OR2_I U79 ( .A(A[1]), .B(n38), .Z(\ab[1][7] ) );
  INVERT_H U80 ( .A(\A2[5] ), .Z(n25) );
  INVERT_I U81 ( .A(n25), .Z(n26) );
  AND2_I U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U83 ( .A(\CARRYB[1][1] ), .Z(n27) );
  NOR2_D U84 ( .A(n37), .B(n45), .Z(PRODUCT[0]) );
  NOR2_D U85 ( .A(B[5]), .B(n34), .Z(\ab[3][5] ) );
  NOR2_D U86 ( .A(B[4]), .B(n34), .Z(\ab[3][4] ) );
  NAND2_E U87 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U88 ( .A(\CARRYB[1][2] ), .Z(n30) );
  INVERT_H U89 ( .A(\ab[1][7] ), .Z(n31) );
  OR2_J U90 ( .A(n19), .B(n39), .Z(\ab[2][6] ) );
  INVERT_H U91 ( .A(\ab[2][6] ), .Z(n32) );
  AND2_H U92 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U93 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U94 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U95 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U100 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U101 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U102 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U103 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U104 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U105 ( .A(\CARRYB[3][7] ), .Z(n33) );
endmodule


module dsp_slice_6 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_6_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_6_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n8), .Z(n9) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_J U6 ( .A(n12), .Z(n13) );
  INVERT_K U7 ( .A(n2), .Z(sample_out[3]) );
  INVERT_H U8 ( .A(n4), .Z(n5) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_5_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_5_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n38), .Z(n36) );
  INVERT_D U3 ( .A(B[2]), .Z(n44) );
  INVERT_E U4 ( .A(n7), .Z(n35) );
  INVERT_H U5 ( .A(n17), .Z(n21) );
  AO21_F U6 ( .A1(n6), .A2(A[8]), .B(n48), .Z(n46) );
  AO21_F U7 ( .A1(n42), .A2(n64), .B(n34), .Z(n1) );
  AO21_F U8 ( .A1(n40), .A2(n23), .B(n9), .Z(n2) );
  OA21_H U9 ( .A1(A[8]), .A2(n6), .B(B[8]), .Z(n48) );
  AND2_H U10 ( .A(B[4]), .B(A[4]), .Z(n62) );
  INVERT_D U11 ( .A(n62), .Z(n3) );
  AND2_H U12 ( .A(B[7]), .B(A[7]), .Z(n51) );
  INVERT_D U13 ( .A(n51), .Z(n4) );
  NOR2_C U14 ( .A(B[4]), .B(A[4]), .Z(n61) );
  INVERT_H U15 ( .A(n37), .Z(n5) );
  INVERT_I U16 ( .A(n5), .Z(n6) );
  INVERT_H U17 ( .A(n36), .Z(n37) );
  AND2_H U18 ( .A(B[3]), .B(A[3]), .Z(n65) );
  INVERT_D U19 ( .A(n65), .Z(n7) );
  INVERT_H U20 ( .A(n54), .Z(n8) );
  INVERT_H U21 ( .A(n8), .Z(n9) );
  AND2_I U22 ( .A(B[6]), .B(A[6]), .Z(n54) );
  INVERT_E U23 ( .A(n24), .Z(n22) );
  INVERT_E U24 ( .A(n25), .Z(n10) );
  INVERT_H U25 ( .A(n10), .Z(n11) );
  INVERT_E U26 ( .A(n27), .Z(n12) );
  INVERT_H U27 ( .A(n12), .Z(n13) );
  INVERT_E U28 ( .A(n29), .Z(n14) );
  INVERT_H U29 ( .A(n14), .Z(n15) );
  INVERT_E U30 ( .A(n35), .Z(n33) );
  NAND2BAL_E U31 ( .A(n41), .B(n59), .Z(n60) );
  NAND2_F U32 ( .A(B[5]), .B(A[5]), .Z(n59) );
  INVERT_E U33 ( .A(n55), .Z(n40) );
  INVERT_E U34 ( .A(n66), .Z(n42) );
  INVERT_E U35 ( .A(n20), .Z(n16) );
  INVERT_H U36 ( .A(n16), .Z(n17) );
  XOR2_E U37 ( .A(B[9]), .B(A[9]), .Z(n45) );
  NAND2_E U38 ( .A(n39), .B(n21), .Z(n52) );
  XOR2_C U39 ( .A(n45), .B(n46), .Z(SUM[9]) );
  XOR2_C U40 ( .A(n49), .B(n6), .Z(SUM[8]) );
  XNOR2_C U41 ( .A(n63), .B(n18), .Z(SUM[4]) );
  NOR2_C U42 ( .A(n11), .B(n30), .Z(n63) );
  XOR2_C U43 ( .A(B[8]), .B(A[8]), .Z(n49) );
  INVERT_H U44 ( .A(n1), .Z(n18) );
  INVERT_H U45 ( .A(n2), .Z(n19) );
  INVERT_D U46 ( .A(n4), .Z(n20) );
  INVERT_F U47 ( .A(n22), .Z(n23) );
  OA21_F U48 ( .A1(n57), .A2(n28), .B(n59), .Z(n53) );
  INVERT_D U49 ( .A(n53), .Z(n24) );
  INVERT_D U50 ( .A(n3), .Z(n25) );
  INVERT_F U51 ( .A(n11), .Z(n26) );
  INVERT_D U52 ( .A(n58), .Z(n27) );
  INVERT_F U53 ( .A(n13), .Z(n28) );
  OA21_F U54 ( .A1(n30), .A2(n18), .B(n26), .Z(n58) );
  INVERT_D U55 ( .A(n61), .Z(n29) );
  INVERT_F U56 ( .A(n15), .Z(n30) );
  INVERT_E U57 ( .A(n44), .Z(n31) );
  INVERT_H U58 ( .A(n31), .Z(n32) );
  INVERT_F U59 ( .A(n33), .Z(n34) );
  OA21_F U60 ( .A1(n50), .A2(n19), .B(n21), .Z(n47) );
  INVERT_D U61 ( .A(n47), .Z(n38) );
  XOR2_B U62 ( .A(n64), .B(n67), .Z(SUM[3]) );
  NOR2_C U63 ( .A(n34), .B(n66), .Z(n67) );
  NOR2_E U64 ( .A(B[3]), .B(A[3]), .Z(n66) );
  XOR2_B U65 ( .A(n52), .B(n19), .Z(SUM[7]) );
  INVERT_E U66 ( .A(n50), .Z(n39) );
  NOR2_E U67 ( .A(B[7]), .B(A[7]), .Z(n50) );
  XOR2_B U68 ( .A(n56), .B(n23), .Z(SUM[6]) );
  NOR2_C U69 ( .A(n9), .B(n55), .Z(n56) );
  NOR2_E U70 ( .A(B[6]), .B(A[6]), .Z(n55) );
  XOR2_B U71 ( .A(n60), .B(n28), .Z(SUM[5]) );
  INVERT_E U72 ( .A(n57), .Z(n41) );
  NOR2_E U73 ( .A(B[5]), .B(A[5]), .Z(n57) );
  NOR2_F U74 ( .A(n32), .B(n43), .Z(n64) );
  INVERT_H U75 ( .A(A[2]), .Z(n43) );
  AOI21_A U76 ( .A1(n32), .A2(n43), .B(n64), .Z(SUM[2]) );
endmodule


module dsp_slice_5_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67,
         n68, n69, n70, n71;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  dsp_slice_5_DW01_add_1 FS_1 ( .A({n61, n3, n10, n57, \A1[5] , \A1[4] , n8, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n22, n31, \A2[6] , n55, 
        \A2[4] , n30, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_D S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_D S14_7 ( .A(n62), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S3_2_6 ( .A(n60), .B(\CARRYB[1][6] ), .CIN(n59), .COUT(\CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n58), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n56), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n53), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n52), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n51), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_D S2_2_5 ( .A(\ab[2][5] ), .B(n50), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S4_4 ( .A(n4), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  INVERT_H U2 ( .A(ZB), .Z(n66) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n57) );
  INVERT_H U4 ( .A(\A2[7] ), .Z(n31) );
  NOR2_D U5 ( .A(B[1]), .B(n62), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[5]), .B(n62), .Z(\ab[3][5] ) );
  NOR2_D U7 ( .A(B[6]), .B(n62), .Z(\ab[3][6] ) );
  OR2_I U8 ( .A(B[4]), .B(n62), .Z(\ab[3][4] ) );
  AND2_J U9 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_N U10 ( .A(ZA), .Z(n62) );
  INVERT_M U11 ( .A(A[2]), .Z(n63) );
  NOR2_C U12 ( .A(n63), .B(n33), .Z(\ab[2][0] ) );
  NOR2_C U13 ( .A(n63), .B(n35), .Z(\ab[2][3] ) );
  NOR2_C U14 ( .A(n63), .B(n40), .Z(\ab[2][1] ) );
  NOR2_C U15 ( .A(n49), .B(n62), .Z(\ab[3][7] ) );
  INVERT_H U16 ( .A(n29), .Z(n2) );
  INVERT_I U17 ( .A(n2), .Z(n3) );
  INVERT_H U18 ( .A(n28), .Z(n29) );
  NOR2_D U19 ( .A(B[0]), .B(n62), .Z(\ab[3][0] ) );
  NOR2_D U20 ( .A(B[3]), .B(n62), .Z(\ab[3][3] ) );
  INVERT_H U21 ( .A(\A2[3] ), .Z(n30) );
  NAND2_E U22 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_F U23 ( .A(n71), .Z(n34) );
  BUFFER_H U24 ( .A(B[0]), .Z(n71) );
  INVERT_F U25 ( .A(B[2]), .Z(n38) );
  INVERT_F U26 ( .A(n70), .Z(n41) );
  BUFFER_H U27 ( .A(B[1]), .Z(n70) );
  INVERT_F U28 ( .A(n69), .Z(n44) );
  BUFFER_H U29 ( .A(B[4]), .Z(n69) );
  INVERT_F U30 ( .A(n67), .Z(n47) );
  BUFFER_H U31 ( .A(B[6]), .Z(n67) );
  INVERT_F U32 ( .A(n23), .Z(n21) );
  BUFFER_H U33 ( .A(\A2[8] ), .Z(n23) );
  AND2_I U34 ( .A(n27), .B(n25), .Z(\CARRYB[1][6] ) );
  NAND2BAL_E U35 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  AND2_H U36 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U37 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  XOR2_D U38 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  AND2_H U39 ( .A(n6), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  AND2_H U40 ( .A(n12), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U41 ( .A(n18), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U42 ( .A(n20), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U43 ( .A(n14), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  AND2_H U44 ( .A(n16), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  AND2_H U45 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U46 ( .A(n63), .B(n37), .Z(\ab[2][2] ) );
  INVERT_E U47 ( .A(\ab[3][4] ), .Z(n4) );
  NOR2_D U48 ( .A(B[2]), .B(n62), .Z(\ab[3][2] ) );
  INVERT_H U49 ( .A(\ab[1][5] ), .Z(n5) );
  INVERT_H U50 ( .A(n5), .Z(n6) );
  CLKI_K U51 ( .A(\A1[3] ), .Z(n7) );
  INVERT_H U52 ( .A(n7), .Z(n8) );
  XOR2_B U53 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  CLKI_K U54 ( .A(\A1[7] ), .Z(n9) );
  INVERT_H U55 ( .A(n9), .Z(n10) );
  XOR2_B U56 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  INVERT_E U57 ( .A(\ab[1][0] ), .Z(n11) );
  INVERT_H U58 ( .A(n11), .Z(n12) );
  INVERT_E U59 ( .A(\ab[1][3] ), .Z(n13) );
  INVERT_H U60 ( .A(n13), .Z(n14) );
  INVERT_E U61 ( .A(\ab[1][4] ), .Z(n15) );
  INVERT_H U62 ( .A(n15), .Z(n16) );
  INVERT_E U63 ( .A(\ab[1][1] ), .Z(n17) );
  INVERT_H U64 ( .A(n17), .Z(n18) );
  INVERT_E U65 ( .A(\ab[1][2] ), .Z(n19) );
  INVERT_H U66 ( .A(n19), .Z(n20) );
  INVERT_F U67 ( .A(n21), .Z(n22) );
  INVERT_E U68 ( .A(\ab[0][7] ), .Z(n24) );
  INVERT_H U69 ( .A(n24), .Z(n25) );
  INVERT_E U70 ( .A(\ab[1][6] ), .Z(n26) );
  INVERT_H U71 ( .A(n26), .Z(n27) );
  CLKI_K U72 ( .A(\A1[8] ), .Z(n28) );
  XOR2_B U73 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  INVERT_F U74 ( .A(n34), .Z(n32) );
  INVERT_I U75 ( .A(n32), .Z(n33) );
  INVERT_I U76 ( .A(B[3]), .Z(n35) );
  INVERT_F U77 ( .A(n38), .Z(n36) );
  INVERT_I U78 ( .A(n36), .Z(n37) );
  INVERT_F U79 ( .A(n41), .Z(n39) );
  INVERT_I U80 ( .A(n39), .Z(n40) );
  INVERT_F U81 ( .A(n44), .Z(n42) );
  INVERT_I U82 ( .A(n42), .Z(n43) );
  INVERT_F U83 ( .A(n47), .Z(n45) );
  INVERT_I U84 ( .A(n45), .Z(n46) );
  INVERT_H U85 ( .A(n66), .Z(n48) );
  INVERT_K U86 ( .A(n48), .Z(n49) );
  INVERT_L U87 ( .A(A[1]), .Z(n64) );
  NOR2_E U88 ( .A(n65), .B(n43), .Z(\ab[0][4] ) );
  NOR2_E U89 ( .A(n65), .B(n68), .Z(\ab[0][5] ) );
  NOR2_E U90 ( .A(n65), .B(n35), .Z(\ab[0][3] ) );
  NOR2_E U91 ( .A(n65), .B(n37), .Z(\ab[0][2] ) );
  NOR2_E U92 ( .A(n46), .B(n65), .Z(\ab[0][6] ) );
  NOR2_E U93 ( .A(n65), .B(n40), .Z(\ab[0][1] ) );
  INVERT_M U94 ( .A(A[0]), .Z(n65) );
  BUFFER_H U95 ( .A(\CARRYB[1][5] ), .Z(n50) );
  INVERT_I U96 ( .A(B[5]), .Z(n68) );
  NOR2_D U97 ( .A(n63), .B(n68), .Z(\ab[2][5] ) );
  NOR2_C U98 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  BUFFER_H U99 ( .A(\CARRYB[1][0] ), .Z(n51) );
  NOR2_C U100 ( .A(n64), .B(n33), .Z(\ab[1][0] ) );
  BUFFER_H U101 ( .A(\CARRYB[1][3] ), .Z(n52) );
  NOR2_C U102 ( .A(n64), .B(n35), .Z(\ab[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][4] ), .Z(n53) );
  NOR2_D U104 ( .A(n63), .B(n43), .Z(\ab[2][4] ) );
  NOR2_C U105 ( .A(n64), .B(n43), .Z(\ab[1][4] ) );
  NOR2_D U106 ( .A(n64), .B(n68), .Z(\ab[1][5] ) );
  INVERT_H U107 ( .A(\A2[5] ), .Z(n54) );
  INVERT_I U108 ( .A(n54), .Z(n55) );
  AND2_I U109 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U110 ( .A(\CARRYB[1][1] ), .Z(n56) );
  NOR2_C U111 ( .A(n64), .B(n40), .Z(\ab[1][1] ) );
  OR2_I U112 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U113 ( .A(\CARRYB[1][2] ), .Z(n58) );
  NOR2_C U114 ( .A(n64), .B(n37), .Z(\ab[1][2] ) );
  NOR2_D U115 ( .A(n65), .B(n33), .Z(PRODUCT[0]) );
  INVERT_H U116 ( .A(\ab[1][7] ), .Z(n59) );
  OR2_J U117 ( .A(n63), .B(n46), .Z(\ab[2][6] ) );
  INVERT_H U118 ( .A(\ab[2][6] ), .Z(n60) );
  NOR2_C U119 ( .A(n46), .B(n64), .Z(\ab[1][6] ) );
  NOR2_C U120 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  XOR2_C U121 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U122 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U123 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U124 ( .A(\ab[0][1] ), .B(n12), .Z(PRODUCT[1]) );
  XOR2_C U125 ( .A(\ab[0][2] ), .B(n18), .Z(\SUMB[1][1] ) );
  XOR2_C U126 ( .A(\ab[0][3] ), .B(n20), .Z(\SUMB[1][2] ) );
  XOR2_C U127 ( .A(\ab[0][4] ), .B(n14), .Z(\SUMB[1][3] ) );
  XOR2_C U128 ( .A(\ab[0][5] ), .B(n16), .Z(\SUMB[1][4] ) );
  XOR2_C U129 ( .A(\ab[0][6] ), .B(n6), .Z(\SUMB[1][5] ) );
  XOR2_C U130 ( .A(n25), .B(n27), .Z(\SUMB[1][6] ) );
  INVERT_D U131 ( .A(\CARRYB[3][7] ), .Z(n61) );
endmodule


module dsp_slice_5 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_5_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), .CI(
        1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_5_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  INVERT_L U4 ( .A(n2), .Z(sample_out[3]) );
  INVERT_I U5 ( .A(n4), .Z(n5) );
  INVERT_H U6 ( .A(n16), .Z(n2) );
  INVERT_I U7 ( .A(n12), .Z(n13) );
  INVERT_I U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_4_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_4_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59, n60, n61, n62;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n33), .Z(n31) );
  INVERT_D U3 ( .A(B[2]), .Z(n39) );
  INVERT_E U4 ( .A(n4), .Z(n30) );
  AO21_F U5 ( .A1(n35), .A2(n18), .B(n6), .Z(n1) );
  AO21_F U6 ( .A1(n37), .A2(n59), .B(n29), .Z(n2) );
  AND2_H U7 ( .A(B[4]), .B(A[4]), .Z(n57) );
  INVERT_D U8 ( .A(n57), .Z(n3) );
  NOR2_C U9 ( .A(B[4]), .B(A[4]), .Z(n56) );
  OA21_H U10 ( .A1(A[8]), .A2(n32), .B(B[8]), .Z(n43) );
  XOR2_B U11 ( .A(n44), .B(n32), .Z(SUM[8]) );
  AND2_H U12 ( .A(B[3]), .B(A[3]), .Z(n60) );
  INVERT_D U13 ( .A(n60), .Z(n4) );
  INVERT_H U14 ( .A(n49), .Z(n5) );
  INVERT_H U15 ( .A(n5), .Z(n6) );
  AND2_I U16 ( .A(B[6]), .B(A[6]), .Z(n49) );
  INVERT_E U17 ( .A(n19), .Z(n17) );
  INVERT_E U18 ( .A(n20), .Z(n7) );
  INVERT_H U19 ( .A(n7), .Z(n8) );
  INVERT_E U20 ( .A(n22), .Z(n9) );
  INVERT_H U21 ( .A(n9), .Z(n10) );
  INVERT_E U22 ( .A(n24), .Z(n11) );
  INVERT_H U23 ( .A(n11), .Z(n12) );
  INVERT_E U24 ( .A(n30), .Z(n28) );
  NAND2BAL_E U25 ( .A(n34), .B(n46), .Z(n47) );
  NAND2_F U26 ( .A(B[7]), .B(A[7]), .Z(n46) );
  NAND2BAL_E U27 ( .A(n36), .B(n54), .Z(n55) );
  NAND2_F U28 ( .A(B[5]), .B(A[5]), .Z(n54) );
  INVERT_E U29 ( .A(n50), .Z(n35) );
  INVERT_E U30 ( .A(n61), .Z(n37) );
  XOR2_E U31 ( .A(B[9]), .B(A[9]), .Z(n40) );
  INVERT_D U32 ( .A(n41), .Z(n13) );
  INVERT_E U33 ( .A(n13), .Z(n14) );
  AO21_E U34 ( .A1(n32), .A2(A[8]), .B(n43), .Z(n41) );
  XOR2_C U35 ( .A(n40), .B(n14), .Z(SUM[9]) );
  XNOR2_C U36 ( .A(n58), .B(n15), .Z(SUM[4]) );
  NOR2_C U37 ( .A(n8), .B(n25), .Z(n58) );
  XOR2_B U38 ( .A(B[8]), .B(A[8]), .Z(n44) );
  CLKI_O U39 ( .A(n31), .Z(n32) );
  INVERT_H U40 ( .A(n2), .Z(n15) );
  INVERT_H U41 ( .A(n1), .Z(n16) );
  INVERT_F U42 ( .A(n17), .Z(n18) );
  OA21_F U43 ( .A1(n52), .A2(n23), .B(n54), .Z(n48) );
  INVERT_D U44 ( .A(n48), .Z(n19) );
  INVERT_D U45 ( .A(n3), .Z(n20) );
  INVERT_F U46 ( .A(n8), .Z(n21) );
  INVERT_D U47 ( .A(n53), .Z(n22) );
  INVERT_F U48 ( .A(n10), .Z(n23) );
  OA21_F U49 ( .A1(n25), .A2(n15), .B(n21), .Z(n53) );
  INVERT_D U50 ( .A(n56), .Z(n24) );
  INVERT_F U51 ( .A(n12), .Z(n25) );
  INVERT_E U52 ( .A(n39), .Z(n26) );
  INVERT_H U53 ( .A(n26), .Z(n27) );
  INVERT_F U54 ( .A(n28), .Z(n29) );
  OA21_F U55 ( .A1(n45), .A2(n16), .B(n46), .Z(n42) );
  INVERT_D U56 ( .A(n42), .Z(n33) );
  XOR2_B U57 ( .A(n59), .B(n62), .Z(SUM[3]) );
  NOR2_C U58 ( .A(n29), .B(n61), .Z(n62) );
  NOR2_E U59 ( .A(B[3]), .B(A[3]), .Z(n61) );
  XOR2_B U60 ( .A(n47), .B(n16), .Z(SUM[7]) );
  INVERT_E U61 ( .A(n45), .Z(n34) );
  NOR2_E U62 ( .A(B[7]), .B(A[7]), .Z(n45) );
  XOR2_B U63 ( .A(n51), .B(n18), .Z(SUM[6]) );
  NOR2_C U64 ( .A(n6), .B(n50), .Z(n51) );
  NOR2_E U65 ( .A(B[6]), .B(A[6]), .Z(n50) );
  XOR2_B U66 ( .A(n55), .B(n23), .Z(SUM[5]) );
  INVERT_E U67 ( .A(n52), .Z(n36) );
  NOR2_E U68 ( .A(B[5]), .B(A[5]), .Z(n52) );
  NOR2_F U69 ( .A(n27), .B(n38), .Z(n59) );
  INVERT_H U70 ( .A(A[2]), .Z(n38) );
  AOI21_A U71 ( .A1(n27), .A2(n38), .B(n59), .Z(SUM[2]) );
endmodule


module dsp_slice_4_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67,
         n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  dsp_slice_4_DW01_add_1 FS_1 ( .A({n73, n37, n64, n68, \A1[5] , \A1[4] , n11, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n69, \A2[6] , n66, 
        \A2[4] , n38, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_D S14_7 ( .A(n3), .B(n59), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S3_2_6 ( .A(n72), .B(n5), .CIN(n71), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n70), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n67), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(\CARRYB[1][5] ), .CIN(\SUMB[1][6] ), 
        .COUT(\CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n62), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n61), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n60), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  INVERT_H U2 ( .A(ZB), .Z(n78) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n68) );
  NOR2_D U4 ( .A(B[2]), .B(n74), .Z(\ab[3][2] ) );
  NOR2_D U5 ( .A(B[0]), .B(n74), .Z(\ab[3][0] ) );
  NOR2_D U6 ( .A(B[1]), .B(n74), .Z(\ab[3][1] ) );
  NOR2_D U7 ( .A(B[6]), .B(n74), .Z(\ab[3][6] ) );
  AND2_J U8 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  OR2_I U9 ( .A(n75), .B(n56), .Z(\ab[2][6] ) );
  NOR2_C U10 ( .A(n75), .B(n53), .Z(\ab[2][4] ) );
  NOR2_C U11 ( .A(n75), .B(n44), .Z(\ab[2][1] ) );
  NOR2_C U12 ( .A(n75), .B(n41), .Z(\ab[2][2] ) );
  NOR2_C U13 ( .A(n75), .B(n50), .Z(\ab[2][0] ) );
  NOR2_C U14 ( .A(n75), .B(n39), .Z(\ab[2][3] ) );
  NOR2_C U15 ( .A(n75), .B(n47), .Z(\ab[2][5] ) );
  INVERT_H U16 ( .A(n74), .Z(n2) );
  INVERT_H U17 ( .A(n2), .Z(n3) );
  NOR2_C U18 ( .A(n59), .B(n3), .Z(\ab[3][7] ) );
  NOR2_D U19 ( .A(B[3]), .B(n74), .Z(\ab[3][3] ) );
  INVERT_H U20 ( .A(\A2[3] ), .Z(n38) );
  NAND2_E U21 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_D U22 ( .A(A[2]), .B(n59), .Z(\ab[2][7] ) );
  INVERT_F U23 ( .A(B[2]), .Z(n42) );
  INVERT_F U24 ( .A(B[1]), .Z(n45) );
  INVERT_F U25 ( .A(B[5]), .Z(n48) );
  INVERT_F U26 ( .A(B[0]), .Z(n51) );
  INVERT_F U27 ( .A(B[4]), .Z(n54) );
  INVERT_F U28 ( .A(B[6]), .Z(n57) );
  AND2_I U29 ( .A(n9), .B(n33), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][6] ), .Z(n4) );
  INVERT_E U31 ( .A(n4), .Z(n5) );
  INVERT_H U32 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U33 ( .A(n6), .Z(n7) );
  AND2_I U34 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U35 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  XOR2_D U36 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  AND2_H U37 ( .A(n23), .B(n13), .Z(\CARRYB[1][0] ) );
  AND2_H U38 ( .A(n29), .B(n19), .Z(\CARRYB[1][1] ) );
  AND2_H U39 ( .A(n31), .B(n21), .Z(\CARRYB[1][2] ) );
  AND2_H U40 ( .A(n25), .B(n15), .Z(\CARRYB[1][3] ) );
  AND2_H U41 ( .A(n27), .B(n17), .Z(\CARRYB[1][4] ) );
  INVERT_I U42 ( .A(\A2[7] ), .Z(n69) );
  CLKI_O U43 ( .A(n36), .Z(n37) );
  AND2_H U44 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_H U45 ( .A(\ab[1][5] ), .Z(n8) );
  INVERT_H U46 ( .A(n8), .Z(n9) );
  CLKI_K U47 ( .A(\A1[3] ), .Z(n10) );
  INVERT_H U48 ( .A(n10), .Z(n11) );
  XOR2_B U49 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  INVERT_E U50 ( .A(\ab[0][1] ), .Z(n12) );
  INVERT_H U51 ( .A(n12), .Z(n13) );
  INVERT_E U52 ( .A(\ab[0][4] ), .Z(n14) );
  INVERT_H U53 ( .A(n14), .Z(n15) );
  INVERT_E U54 ( .A(\ab[0][5] ), .Z(n16) );
  INVERT_H U55 ( .A(n16), .Z(n17) );
  INVERT_E U56 ( .A(\ab[0][2] ), .Z(n18) );
  INVERT_H U57 ( .A(n18), .Z(n19) );
  INVERT_E U58 ( .A(\ab[0][3] ), .Z(n20) );
  INVERT_H U59 ( .A(n20), .Z(n21) );
  INVERT_E U60 ( .A(\ab[1][0] ), .Z(n22) );
  INVERT_H U61 ( .A(n22), .Z(n23) );
  INVERT_E U62 ( .A(\ab[1][3] ), .Z(n24) );
  INVERT_H U63 ( .A(n24), .Z(n25) );
  INVERT_E U64 ( .A(\ab[1][4] ), .Z(n26) );
  INVERT_H U65 ( .A(n26), .Z(n27) );
  INVERT_E U66 ( .A(\ab[1][1] ), .Z(n28) );
  INVERT_H U67 ( .A(n28), .Z(n29) );
  INVERT_E U68 ( .A(\ab[1][2] ), .Z(n30) );
  INVERT_H U69 ( .A(n30), .Z(n31) );
  INVERT_E U70 ( .A(\ab[0][6] ), .Z(n32) );
  INVERT_H U71 ( .A(n32), .Z(n33) );
  NOR2_E U72 ( .A(A[0]), .B(n59), .Z(\ab[0][7] ) );
  INVERT_E U73 ( .A(\ab[1][6] ), .Z(n34) );
  INVERT_H U74 ( .A(n34), .Z(n35) );
  NOR2_D U75 ( .A(B[4]), .B(n74), .Z(\ab[3][4] ) );
  NOR2_D U76 ( .A(B[5]), .B(n74), .Z(\ab[3][5] ) );
  CLKI_K U77 ( .A(\A1[8] ), .Z(n36) );
  XOR2_B U78 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  INVERT_I U79 ( .A(B[3]), .Z(n39) );
  INVERT_F U80 ( .A(n42), .Z(n40) );
  INVERT_I U81 ( .A(n40), .Z(n41) );
  INVERT_F U82 ( .A(n45), .Z(n43) );
  INVERT_I U83 ( .A(n43), .Z(n44) );
  INVERT_F U84 ( .A(n48), .Z(n46) );
  INVERT_I U85 ( .A(n46), .Z(n47) );
  INVERT_F U86 ( .A(n51), .Z(n49) );
  INVERT_I U87 ( .A(n49), .Z(n50) );
  INVERT_F U88 ( .A(n54), .Z(n52) );
  INVERT_I U89 ( .A(n52), .Z(n53) );
  INVERT_F U90 ( .A(n57), .Z(n55) );
  INVERT_I U91 ( .A(n55), .Z(n56) );
  INVERT_H U92 ( .A(n78), .Z(n58) );
  INVERT_K U93 ( .A(n58), .Z(n59) );
  INVERT_L U94 ( .A(A[2]), .Z(n75) );
  INVERT_L U95 ( .A(A[1]), .Z(n76) );
  INVERT_L U96 ( .A(A[0]), .Z(n77) );
  BUFFER_H U97 ( .A(\CARRYB[1][0] ), .Z(n60) );
  NOR2_C U98 ( .A(n76), .B(n50), .Z(\ab[1][0] ) );
  NOR2_C U99 ( .A(n77), .B(n44), .Z(\ab[0][1] ) );
  BUFFER_H U100 ( .A(\CARRYB[1][3] ), .Z(n61) );
  NOR2_C U101 ( .A(n76), .B(n39), .Z(\ab[1][3] ) );
  NOR2_C U102 ( .A(n77), .B(n53), .Z(\ab[0][4] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][4] ), .Z(n62) );
  NOR2_C U104 ( .A(n76), .B(n53), .Z(\ab[1][4] ) );
  NOR2_C U105 ( .A(n77), .B(n47), .Z(\ab[0][5] ) );
  NOR2_C U106 ( .A(n56), .B(n77), .Z(\ab[0][6] ) );
  NOR2_D U107 ( .A(n76), .B(n47), .Z(\ab[1][5] ) );
  INVERT_H U108 ( .A(\A1[7] ), .Z(n63) );
  INVERT_I U109 ( .A(n63), .Z(n64) );
  OR2_I U110 ( .A(A[1]), .B(n59), .Z(\ab[1][7] ) );
  INVERT_H U111 ( .A(\A2[5] ), .Z(n65) );
  INVERT_I U112 ( .A(n65), .Z(n66) );
  AND2_I U113 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U114 ( .A(\CARRYB[1][1] ), .Z(n67) );
  NOR2_C U115 ( .A(n76), .B(n44), .Z(\ab[1][1] ) );
  NOR2_C U116 ( .A(n77), .B(n41), .Z(\ab[0][2] ) );
  NOR2_D U117 ( .A(n77), .B(n50), .Z(PRODUCT[0]) );
  NAND2_E U118 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U119 ( .A(\CARRYB[1][2] ), .Z(n70) );
  NOR2_C U120 ( .A(n76), .B(n41), .Z(\ab[1][2] ) );
  NOR2_C U121 ( .A(n77), .B(n39), .Z(\ab[0][3] ) );
  INVERT_H U122 ( .A(\ab[1][7] ), .Z(n71) );
  INVERT_H U123 ( .A(\ab[2][6] ), .Z(n72) );
  AND2_H U124 ( .A(n35), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_C U125 ( .A(n56), .B(n76), .Z(\ab[1][6] ) );
  XOR2_C U126 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U127 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U128 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U129 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U130 ( .A(n13), .B(n23), .Z(PRODUCT[1]) );
  XOR2_C U131 ( .A(n19), .B(n29), .Z(\SUMB[1][1] ) );
  XOR2_C U132 ( .A(n21), .B(n31), .Z(\SUMB[1][2] ) );
  XOR2_C U133 ( .A(n15), .B(n25), .Z(\SUMB[1][3] ) );
  XOR2_C U134 ( .A(n17), .B(n27), .Z(\SUMB[1][4] ) );
  XOR2_C U135 ( .A(n33), .B(n9), .Z(\SUMB[1][5] ) );
  XOR2_C U136 ( .A(\ab[0][7] ), .B(n35), .Z(\SUMB[1][6] ) );
  INVERT_M U137 ( .A(ZA), .Z(n74) );
  INVERT_D U138 ( .A(\CARRYB[3][7] ), .Z(n73) );
endmodule


module dsp_slice_4 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_4_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_4_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_K U5 ( .A(n2), .Z(sample_out[3]) );
  INVERT_I U6 ( .A(n4), .Z(n5) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_I U8 ( .A(n12), .Z(n13) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_3_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_3_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n38), .Z(n36) );
  INVERT_D U3 ( .A(B[2]), .Z(n44) );
  INVERT_E U4 ( .A(n7), .Z(n35) );
  INVERT_H U5 ( .A(n17), .Z(n21) );
  AO21_F U6 ( .A1(n6), .A2(A[8]), .B(n48), .Z(n46) );
  AO21_F U7 ( .A1(n42), .A2(n64), .B(n34), .Z(n1) );
  AO21_F U8 ( .A1(n40), .A2(n23), .B(n9), .Z(n2) );
  OA21_H U9 ( .A1(A[8]), .A2(n6), .B(B[8]), .Z(n48) );
  AND2_H U10 ( .A(B[4]), .B(A[4]), .Z(n62) );
  INVERT_D U11 ( .A(n62), .Z(n3) );
  AND2_H U12 ( .A(B[7]), .B(A[7]), .Z(n51) );
  INVERT_D U13 ( .A(n51), .Z(n4) );
  NOR2_C U14 ( .A(B[4]), .B(A[4]), .Z(n61) );
  INVERT_H U15 ( .A(n37), .Z(n5) );
  INVERT_I U16 ( .A(n5), .Z(n6) );
  INVERT_H U17 ( .A(n36), .Z(n37) );
  AND2_H U18 ( .A(B[3]), .B(A[3]), .Z(n65) );
  INVERT_D U19 ( .A(n65), .Z(n7) );
  INVERT_H U20 ( .A(n54), .Z(n8) );
  INVERT_H U21 ( .A(n8), .Z(n9) );
  AND2_I U22 ( .A(B[6]), .B(A[6]), .Z(n54) );
  INVERT_E U23 ( .A(n24), .Z(n22) );
  INVERT_E U24 ( .A(n25), .Z(n10) );
  INVERT_H U25 ( .A(n10), .Z(n11) );
  INVERT_E U26 ( .A(n27), .Z(n12) );
  INVERT_H U27 ( .A(n12), .Z(n13) );
  INVERT_E U28 ( .A(n29), .Z(n14) );
  INVERT_H U29 ( .A(n14), .Z(n15) );
  INVERT_E U30 ( .A(n35), .Z(n33) );
  NAND2BAL_E U31 ( .A(n41), .B(n59), .Z(n60) );
  NAND2_F U32 ( .A(B[5]), .B(A[5]), .Z(n59) );
  INVERT_E U33 ( .A(n55), .Z(n40) );
  INVERT_E U34 ( .A(n66), .Z(n42) );
  INVERT_E U35 ( .A(n20), .Z(n16) );
  INVERT_H U36 ( .A(n16), .Z(n17) );
  XOR2_E U37 ( .A(B[9]), .B(A[9]), .Z(n45) );
  NAND2_E U38 ( .A(n39), .B(n21), .Z(n52) );
  XOR2_C U39 ( .A(n45), .B(n46), .Z(SUM[9]) );
  XOR2_C U40 ( .A(n49), .B(n6), .Z(SUM[8]) );
  XNOR2_C U41 ( .A(n63), .B(n18), .Z(SUM[4]) );
  NOR2_C U42 ( .A(n11), .B(n30), .Z(n63) );
  XOR2_C U43 ( .A(B[8]), .B(A[8]), .Z(n49) );
  INVERT_H U44 ( .A(n1), .Z(n18) );
  INVERT_H U45 ( .A(n2), .Z(n19) );
  INVERT_D U46 ( .A(n4), .Z(n20) );
  INVERT_F U47 ( .A(n22), .Z(n23) );
  OA21_F U48 ( .A1(n57), .A2(n28), .B(n59), .Z(n53) );
  INVERT_D U49 ( .A(n53), .Z(n24) );
  INVERT_D U50 ( .A(n3), .Z(n25) );
  INVERT_F U51 ( .A(n11), .Z(n26) );
  INVERT_D U52 ( .A(n58), .Z(n27) );
  INVERT_F U53 ( .A(n13), .Z(n28) );
  OA21_F U54 ( .A1(n30), .A2(n18), .B(n26), .Z(n58) );
  INVERT_D U55 ( .A(n61), .Z(n29) );
  INVERT_F U56 ( .A(n15), .Z(n30) );
  INVERT_E U57 ( .A(n44), .Z(n31) );
  INVERT_H U58 ( .A(n31), .Z(n32) );
  INVERT_F U59 ( .A(n33), .Z(n34) );
  OA21_F U60 ( .A1(n50), .A2(n19), .B(n21), .Z(n47) );
  INVERT_D U61 ( .A(n47), .Z(n38) );
  XOR2_B U62 ( .A(n64), .B(n67), .Z(SUM[3]) );
  NOR2_C U63 ( .A(n34), .B(n66), .Z(n67) );
  NOR2_E U64 ( .A(B[3]), .B(A[3]), .Z(n66) );
  XOR2_B U65 ( .A(n52), .B(n19), .Z(SUM[7]) );
  INVERT_E U66 ( .A(n50), .Z(n39) );
  NOR2_E U67 ( .A(B[7]), .B(A[7]), .Z(n50) );
  XOR2_B U68 ( .A(n56), .B(n23), .Z(SUM[6]) );
  NOR2_C U69 ( .A(n9), .B(n55), .Z(n56) );
  NOR2_E U70 ( .A(B[6]), .B(A[6]), .Z(n55) );
  XOR2_B U71 ( .A(n60), .B(n28), .Z(SUM[5]) );
  INVERT_E U72 ( .A(n57), .Z(n41) );
  NOR2_E U73 ( .A(B[5]), .B(A[5]), .Z(n57) );
  NOR2_F U74 ( .A(n32), .B(n43), .Z(n64) );
  INVERT_H U75 ( .A(A[2]), .Z(n43) );
  AOI21_A U76 ( .A1(n32), .A2(n43), .B(n64), .Z(SUM[2]) );
endmodule


module dsp_slice_3_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] ,
         \A1[1] , \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] ,
         \A2[4] , \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67,
         n68, n69, n70, n71;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  dsp_slice_3_DW01_add_1 FS_1 ( .A({n61, n3, n10, n57, \A1[5] , \A1[4] , n8, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n22, n31, \A2[6] , n55, 
        \A2[4] , n30, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_D S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_D S14_7 ( .A(n62), .B(n49), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S3_2_6 ( .A(n60), .B(\CARRYB[1][6] ), .CIN(n59), .COUT(\CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n58), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n56), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n53), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n52), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n51), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_D S2_2_5 ( .A(\ab[2][5] ), .B(n50), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S4_4 ( .A(n4), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  INVERT_H U2 ( .A(ZB), .Z(n66) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n57) );
  INVERT_H U4 ( .A(\A2[7] ), .Z(n31) );
  NOR2_D U5 ( .A(B[1]), .B(n62), .Z(\ab[3][1] ) );
  NOR2_D U6 ( .A(B[5]), .B(n62), .Z(\ab[3][5] ) );
  NOR2_D U7 ( .A(B[6]), .B(n62), .Z(\ab[3][6] ) );
  OR2_I U8 ( .A(B[4]), .B(n62), .Z(\ab[3][4] ) );
  AND2_J U9 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_N U10 ( .A(ZA), .Z(n62) );
  INVERT_M U11 ( .A(A[2]), .Z(n63) );
  NOR2_C U12 ( .A(n63), .B(n33), .Z(\ab[2][0] ) );
  NOR2_C U13 ( .A(n63), .B(n35), .Z(\ab[2][3] ) );
  NOR2_C U14 ( .A(n63), .B(n40), .Z(\ab[2][1] ) );
  NOR2_C U15 ( .A(n49), .B(n62), .Z(\ab[3][7] ) );
  INVERT_H U16 ( .A(n29), .Z(n2) );
  INVERT_I U17 ( .A(n2), .Z(n3) );
  INVERT_H U18 ( .A(n28), .Z(n29) );
  NOR2_D U19 ( .A(B[0]), .B(n62), .Z(\ab[3][0] ) );
  NOR2_D U20 ( .A(B[3]), .B(n62), .Z(\ab[3][3] ) );
  INVERT_H U21 ( .A(\A2[3] ), .Z(n30) );
  NAND2_E U22 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_F U23 ( .A(n71), .Z(n34) );
  BUFFER_H U24 ( .A(B[0]), .Z(n71) );
  INVERT_F U25 ( .A(B[2]), .Z(n38) );
  INVERT_F U26 ( .A(n70), .Z(n41) );
  BUFFER_H U27 ( .A(B[1]), .Z(n70) );
  INVERT_F U28 ( .A(n69), .Z(n44) );
  BUFFER_H U29 ( .A(B[4]), .Z(n69) );
  INVERT_F U30 ( .A(n67), .Z(n47) );
  BUFFER_H U31 ( .A(B[6]), .Z(n67) );
  INVERT_F U32 ( .A(n23), .Z(n21) );
  BUFFER_H U33 ( .A(\A2[8] ), .Z(n23) );
  AND2_I U34 ( .A(n27), .B(n25), .Z(\CARRYB[1][6] ) );
  NAND2BAL_E U35 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  AND2_H U36 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U37 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  XOR2_D U38 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  AND2_H U39 ( .A(n6), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  AND2_H U40 ( .A(n12), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U41 ( .A(n18), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U42 ( .A(n20), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U43 ( .A(n14), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  AND2_H U44 ( .A(n16), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  AND2_H U45 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U46 ( .A(n63), .B(n37), .Z(\ab[2][2] ) );
  INVERT_E U47 ( .A(\ab[3][4] ), .Z(n4) );
  NOR2_D U48 ( .A(B[2]), .B(n62), .Z(\ab[3][2] ) );
  INVERT_H U49 ( .A(\ab[1][5] ), .Z(n5) );
  INVERT_H U50 ( .A(n5), .Z(n6) );
  CLKI_K U51 ( .A(\A1[3] ), .Z(n7) );
  INVERT_H U52 ( .A(n7), .Z(n8) );
  XOR2_B U53 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  CLKI_K U54 ( .A(\A1[7] ), .Z(n9) );
  INVERT_H U55 ( .A(n9), .Z(n10) );
  XOR2_B U56 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  INVERT_E U57 ( .A(\ab[1][0] ), .Z(n11) );
  INVERT_H U58 ( .A(n11), .Z(n12) );
  INVERT_E U59 ( .A(\ab[1][3] ), .Z(n13) );
  INVERT_H U60 ( .A(n13), .Z(n14) );
  INVERT_E U61 ( .A(\ab[1][4] ), .Z(n15) );
  INVERT_H U62 ( .A(n15), .Z(n16) );
  INVERT_E U63 ( .A(\ab[1][1] ), .Z(n17) );
  INVERT_H U64 ( .A(n17), .Z(n18) );
  INVERT_E U65 ( .A(\ab[1][2] ), .Z(n19) );
  INVERT_H U66 ( .A(n19), .Z(n20) );
  INVERT_F U67 ( .A(n21), .Z(n22) );
  INVERT_E U68 ( .A(\ab[0][7] ), .Z(n24) );
  INVERT_H U69 ( .A(n24), .Z(n25) );
  INVERT_E U70 ( .A(\ab[1][6] ), .Z(n26) );
  INVERT_H U71 ( .A(n26), .Z(n27) );
  CLKI_K U72 ( .A(\A1[8] ), .Z(n28) );
  XOR2_B U73 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  INVERT_F U74 ( .A(n34), .Z(n32) );
  INVERT_I U75 ( .A(n32), .Z(n33) );
  INVERT_I U76 ( .A(B[3]), .Z(n35) );
  INVERT_F U77 ( .A(n38), .Z(n36) );
  INVERT_I U78 ( .A(n36), .Z(n37) );
  INVERT_F U79 ( .A(n41), .Z(n39) );
  INVERT_I U80 ( .A(n39), .Z(n40) );
  INVERT_F U81 ( .A(n44), .Z(n42) );
  INVERT_I U82 ( .A(n42), .Z(n43) );
  INVERT_F U83 ( .A(n47), .Z(n45) );
  INVERT_I U84 ( .A(n45), .Z(n46) );
  INVERT_H U85 ( .A(n66), .Z(n48) );
  INVERT_K U86 ( .A(n48), .Z(n49) );
  INVERT_L U87 ( .A(A[1]), .Z(n64) );
  NOR2_E U88 ( .A(n65), .B(n43), .Z(\ab[0][4] ) );
  NOR2_E U89 ( .A(n65), .B(n68), .Z(\ab[0][5] ) );
  NOR2_E U90 ( .A(n65), .B(n35), .Z(\ab[0][3] ) );
  NOR2_E U91 ( .A(n65), .B(n37), .Z(\ab[0][2] ) );
  NOR2_E U92 ( .A(n46), .B(n65), .Z(\ab[0][6] ) );
  NOR2_E U93 ( .A(n65), .B(n40), .Z(\ab[0][1] ) );
  INVERT_M U94 ( .A(A[0]), .Z(n65) );
  BUFFER_H U95 ( .A(\CARRYB[1][5] ), .Z(n50) );
  INVERT_I U96 ( .A(B[5]), .Z(n68) );
  NOR2_D U97 ( .A(n63), .B(n68), .Z(\ab[2][5] ) );
  NOR2_C U98 ( .A(A[2]), .B(n49), .Z(\ab[2][7] ) );
  BUFFER_H U99 ( .A(\CARRYB[1][0] ), .Z(n51) );
  NOR2_C U100 ( .A(n64), .B(n33), .Z(\ab[1][0] ) );
  BUFFER_H U101 ( .A(\CARRYB[1][3] ), .Z(n52) );
  NOR2_C U102 ( .A(n64), .B(n35), .Z(\ab[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][4] ), .Z(n53) );
  NOR2_D U104 ( .A(n63), .B(n43), .Z(\ab[2][4] ) );
  NOR2_C U105 ( .A(n64), .B(n43), .Z(\ab[1][4] ) );
  NOR2_D U106 ( .A(n64), .B(n68), .Z(\ab[1][5] ) );
  INVERT_H U107 ( .A(\A2[5] ), .Z(n54) );
  INVERT_I U108 ( .A(n54), .Z(n55) );
  AND2_I U109 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U110 ( .A(\CARRYB[1][1] ), .Z(n56) );
  NOR2_C U111 ( .A(n64), .B(n40), .Z(\ab[1][1] ) );
  OR2_I U112 ( .A(A[1]), .B(n49), .Z(\ab[1][7] ) );
  BUFFER_H U113 ( .A(\CARRYB[1][2] ), .Z(n58) );
  NOR2_C U114 ( .A(n64), .B(n37), .Z(\ab[1][2] ) );
  NOR2_D U115 ( .A(n65), .B(n33), .Z(PRODUCT[0]) );
  INVERT_H U116 ( .A(\ab[1][7] ), .Z(n59) );
  OR2_J U117 ( .A(n63), .B(n46), .Z(\ab[2][6] ) );
  INVERT_H U118 ( .A(\ab[2][6] ), .Z(n60) );
  NOR2_C U119 ( .A(n46), .B(n64), .Z(\ab[1][6] ) );
  NOR2_C U120 ( .A(A[0]), .B(n49), .Z(\ab[0][7] ) );
  XOR2_C U121 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U122 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U123 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U124 ( .A(\ab[0][1] ), .B(n12), .Z(PRODUCT[1]) );
  XOR2_C U125 ( .A(\ab[0][2] ), .B(n18), .Z(\SUMB[1][1] ) );
  XOR2_C U126 ( .A(\ab[0][3] ), .B(n20), .Z(\SUMB[1][2] ) );
  XOR2_C U127 ( .A(\ab[0][4] ), .B(n14), .Z(\SUMB[1][3] ) );
  XOR2_C U128 ( .A(\ab[0][5] ), .B(n16), .Z(\SUMB[1][4] ) );
  XOR2_C U129 ( .A(\ab[0][6] ), .B(n6), .Z(\SUMB[1][5] ) );
  XOR2_C U130 ( .A(n25), .B(n27), .Z(\SUMB[1][6] ) );
  INVERT_D U131 ( .A(\CARRYB[3][7] ), .Z(n61) );
endmodule


module dsp_slice_3 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_3_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), .CI(
        1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_3_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  INVERT_L U4 ( .A(n2), .Z(sample_out[3]) );
  INVERT_I U5 ( .A(n4), .Z(n5) );
  INVERT_H U6 ( .A(n16), .Z(n2) );
  INVERT_I U7 ( .A(n12), .Z(n13) );
  INVERT_I U8 ( .A(n6), .Z(n7) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_2_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_2_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59, n60, n61;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n32), .Z(n30) );
  INVERT_E U3 ( .A(n4), .Z(n29) );
  AO21_F U4 ( .A1(n34), .A2(n16), .B(n6), .Z(n1) );
  AO21_F U5 ( .A1(n36), .A2(n58), .B(n28), .Z(n2) );
  AND2_H U6 ( .A(B[4]), .B(A[4]), .Z(n56) );
  INVERT_D U7 ( .A(n56), .Z(n3) );
  OA21_H U8 ( .A1(A[8]), .A2(n31), .B(B[8]), .Z(n42) );
  XOR2_B U9 ( .A(n43), .B(n31), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n59) );
  INVERT_D U11 ( .A(n59), .Z(n4) );
  INVERT_H U12 ( .A(n48), .Z(n5) );
  INVERT_H U13 ( .A(n5), .Z(n6) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n48) );
  INVERT_E U15 ( .A(n17), .Z(n15) );
  INVERT_E U16 ( .A(n18), .Z(n7) );
  INVERT_H U17 ( .A(n7), .Z(n8) );
  INVERT_E U18 ( .A(n20), .Z(n9) );
  INVERT_H U19 ( .A(n9), .Z(n10) );
  INVERT_F U20 ( .A(n24), .Z(n22) );
  BUFFER_H U21 ( .A(n55), .Z(n24) );
  INVERT_E U22 ( .A(n29), .Z(n27) );
  NAND2BAL_E U23 ( .A(n33), .B(n45), .Z(n46) );
  NAND2_F U24 ( .A(B[7]), .B(A[7]), .Z(n45) );
  NAND2BAL_E U25 ( .A(n35), .B(n53), .Z(n54) );
  NAND2_F U26 ( .A(B[5]), .B(A[5]), .Z(n53) );
  INVERT_E U27 ( .A(n49), .Z(n34) );
  INVERT_E U28 ( .A(n60), .Z(n36) );
  XOR2_E U29 ( .A(B[9]), .B(A[9]), .Z(n39) );
  INVERT_D U30 ( .A(n40), .Z(n11) );
  INVERT_E U31 ( .A(n11), .Z(n12) );
  AO21_E U32 ( .A1(n31), .A2(A[8]), .B(n42), .Z(n40) );
  XOR2_C U33 ( .A(n39), .B(n12), .Z(SUM[9]) );
  XNOR2_C U34 ( .A(n57), .B(n13), .Z(SUM[4]) );
  NOR2_C U35 ( .A(n8), .B(n23), .Z(n57) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n55) );
  XOR2_B U37 ( .A(B[8]), .B(A[8]), .Z(n43) );
  INVERT_D U38 ( .A(B[2]), .Z(n38) );
  CLKI_O U39 ( .A(n30), .Z(n31) );
  INVERT_H U40 ( .A(n2), .Z(n13) );
  INVERT_H U41 ( .A(n1), .Z(n14) );
  INVERT_F U42 ( .A(n15), .Z(n16) );
  OA21_F U43 ( .A1(n51), .A2(n21), .B(n53), .Z(n47) );
  INVERT_D U44 ( .A(n47), .Z(n17) );
  INVERT_D U45 ( .A(n3), .Z(n18) );
  INVERT_F U46 ( .A(n8), .Z(n19) );
  INVERT_D U47 ( .A(n52), .Z(n20) );
  INVERT_F U48 ( .A(n10), .Z(n21) );
  OA21_F U49 ( .A1(n23), .A2(n13), .B(n19), .Z(n52) );
  INVERT_F U50 ( .A(n22), .Z(n23) );
  INVERT_E U51 ( .A(n38), .Z(n25) );
  INVERT_H U52 ( .A(n25), .Z(n26) );
  INVERT_F U53 ( .A(n27), .Z(n28) );
  OA21_F U54 ( .A1(n44), .A2(n14), .B(n45), .Z(n41) );
  INVERT_D U55 ( .A(n41), .Z(n32) );
  XOR2_B U56 ( .A(n58), .B(n61), .Z(SUM[3]) );
  NOR2_C U57 ( .A(n28), .B(n60), .Z(n61) );
  NOR2_E U58 ( .A(B[3]), .B(A[3]), .Z(n60) );
  XOR2_B U59 ( .A(n46), .B(n14), .Z(SUM[7]) );
  INVERT_E U60 ( .A(n44), .Z(n33) );
  NOR2_E U61 ( .A(B[7]), .B(A[7]), .Z(n44) );
  XOR2_B U62 ( .A(n50), .B(n16), .Z(SUM[6]) );
  NOR2_C U63 ( .A(n6), .B(n49), .Z(n50) );
  NOR2_E U64 ( .A(B[6]), .B(A[6]), .Z(n49) );
  XOR2_B U65 ( .A(n54), .B(n21), .Z(SUM[5]) );
  INVERT_E U66 ( .A(n51), .Z(n35) );
  NOR2_E U67 ( .A(B[5]), .B(A[5]), .Z(n51) );
  NOR2_F U68 ( .A(n26), .B(n37), .Z(n58) );
  INVERT_H U69 ( .A(A[2]), .Z(n37) );
  AOI21_A U70 ( .A1(n26), .A2(n37), .B(n58), .Z(SUM[2]) );
endmodule


module dsp_slice_2_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  dsp_slice_2_DW01_add_1 FS_1 ( .A({n47, n12, n38, n42, \A1[5] , \A1[4] , n8, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n7, n43, \A2[6] , n40, 
        \A2[4] , n13, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_D S14_7 ( .A(n48), .B(n33), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S3_2_6 ( .A(n46), .B(\CARRYB[1][6] ), .CIN(n45), .COUT(\CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n44), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n5), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n36), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n35), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n34), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  NOR2_D U2 ( .A(B[3]), .B(n48), .Z(\ab[3][3] ) );
  INVERT_H U3 ( .A(ZB), .Z(n52) );
  BUFFER_J U4 ( .A(\A1[6] ), .Z(n42) );
  XNOR2_C U5 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  NOR2_D U6 ( .A(B[2]), .B(n48), .Z(\ab[3][2] ) );
  INVERT_H U7 ( .A(n50), .Z(n3) );
  INVERT_N U8 ( .A(A[1]), .Z(n50) );
  OR2_I U9 ( .A(n49), .B(n30), .Z(\ab[2][6] ) );
  NOR2_C U10 ( .A(n49), .B(n27), .Z(\ab[2][4] ) );
  NOR2_C U11 ( .A(n49), .B(n18), .Z(\ab[2][1] ) );
  NOR2_C U12 ( .A(n49), .B(n53), .Z(\ab[2][2] ) );
  NOR2_C U13 ( .A(n49), .B(n24), .Z(\ab[2][0] ) );
  NOR2_C U14 ( .A(n49), .B(n15), .Z(\ab[2][3] ) );
  NOR2_C U15 ( .A(n49), .B(n21), .Z(\ab[2][5] ) );
  INVERT_H U16 ( .A(\A2[3] ), .Z(n13) );
  NAND2BAL_E U17 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_D U18 ( .A(A[2]), .B(n33), .Z(\ab[2][7] ) );
  INVERT_F U19 ( .A(B[3]), .Z(n16) );
  INVERT_F U20 ( .A(B[1]), .Z(n19) );
  INVERT_F U21 ( .A(B[5]), .Z(n22) );
  INVERT_F U22 ( .A(B[0]), .Z(n25) );
  INVERT_F U23 ( .A(B[4]), .Z(n28) );
  INVERT_F U24 ( .A(B[6]), .Z(n31) );
  INVERT_D U25 ( .A(\CARRYB[1][5] ), .Z(n4) );
  INVERT_E U26 ( .A(n4), .Z(n5) );
  AND2_I U27 ( .A(\ab[1][6] ), .B(n10), .Z(\CARRYB[1][6] ) );
  INVERT_H U28 ( .A(\A2[8] ), .Z(n6) );
  INVERT_H U29 ( .A(n6), .Z(n7) );
  AND2_I U30 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U31 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  XOR2_D U32 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  AND2_H U33 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U34 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_H U35 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U36 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  AND2_H U37 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U38 ( .A(\A2[7] ), .Z(n43) );
  AND2_J U39 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  CLKI_O U40 ( .A(n11), .Z(n12) );
  AND2_H U41 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U42 ( .A(n33), .B(n48), .Z(\ab[3][7] ) );
  NOR2_D U43 ( .A(B[0]), .B(n48), .Z(\ab[3][0] ) );
  NOR2_D U44 ( .A(B[1]), .B(n48), .Z(\ab[3][1] ) );
  NOR2_D U45 ( .A(B[6]), .B(n48), .Z(\ab[3][6] ) );
  INVERT_N U46 ( .A(ZA), .Z(n48) );
  INVERT_H U47 ( .A(n2), .Z(n8) );
  INVERT_E U48 ( .A(\ab[0][7] ), .Z(n9) );
  INVERT_H U49 ( .A(n9), .Z(n10) );
  XOR2_B U50 ( .A(n10), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_E U51 ( .A(n30), .B(n50), .Z(\ab[1][6] ) );
  NOR2_E U52 ( .A(n50), .B(n15), .Z(\ab[1][3] ) );
  NOR2_E U53 ( .A(n50), .B(n18), .Z(\ab[1][1] ) );
  NOR2_E U54 ( .A(n50), .B(n27), .Z(\ab[1][4] ) );
  NOR2_E U55 ( .A(n50), .B(n24), .Z(\ab[1][0] ) );
  NOR2_E U56 ( .A(n50), .B(n21), .Z(\ab[1][5] ) );
  NOR2_E U57 ( .A(n51), .B(n15), .Z(\ab[0][3] ) );
  NOR2_E U58 ( .A(n51), .B(n27), .Z(\ab[0][4] ) );
  NOR2_E U59 ( .A(n51), .B(n21), .Z(\ab[0][5] ) );
  NOR2_E U60 ( .A(n51), .B(n18), .Z(\ab[0][1] ) );
  NOR2_E U61 ( .A(n30), .B(n51), .Z(\ab[0][6] ) );
  INVERT_M U62 ( .A(A[0]), .Z(n51) );
  NOR2_D U63 ( .A(B[4]), .B(n48), .Z(\ab[3][4] ) );
  NOR2_D U64 ( .A(B[5]), .B(n48), .Z(\ab[3][5] ) );
  CLKI_K U65 ( .A(\A1[8] ), .Z(n11) );
  XOR2_B U66 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  INVERT_F U67 ( .A(n16), .Z(n14) );
  INVERT_I U68 ( .A(n14), .Z(n15) );
  NOR2_E U69 ( .A(n50), .B(n53), .Z(\ab[1][2] ) );
  NOR2_E U70 ( .A(n51), .B(n53), .Z(\ab[0][2] ) );
  INVERT_I U71 ( .A(B[2]), .Z(n53) );
  INVERT_F U72 ( .A(n19), .Z(n17) );
  INVERT_I U73 ( .A(n17), .Z(n18) );
  INVERT_F U74 ( .A(n22), .Z(n20) );
  INVERT_I U75 ( .A(n20), .Z(n21) );
  INVERT_F U76 ( .A(n25), .Z(n23) );
  INVERT_I U77 ( .A(n23), .Z(n24) );
  INVERT_F U78 ( .A(n28), .Z(n26) );
  INVERT_I U79 ( .A(n26), .Z(n27) );
  INVERT_F U80 ( .A(n31), .Z(n29) );
  INVERT_I U81 ( .A(n29), .Z(n30) );
  INVERT_H U82 ( .A(n52), .Z(n32) );
  INVERT_K U83 ( .A(n32), .Z(n33) );
  INVERT_L U84 ( .A(A[2]), .Z(n49) );
  BUFFER_H U85 ( .A(\CARRYB[1][0] ), .Z(n34) );
  BUFFER_H U86 ( .A(\CARRYB[1][3] ), .Z(n35) );
  BUFFER_H U87 ( .A(\CARRYB[1][4] ), .Z(n36) );
  AND2_H U88 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_H U89 ( .A(\A1[7] ), .Z(n37) );
  INVERT_I U90 ( .A(n37), .Z(n38) );
  OR2_I U91 ( .A(n3), .B(n33), .Z(\ab[1][7] ) );
  INVERT_H U92 ( .A(\A2[5] ), .Z(n39) );
  INVERT_I U93 ( .A(n39), .Z(n40) );
  AND2_I U94 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_D U96 ( .A(n51), .B(n24), .Z(PRODUCT[0]) );
  NAND2_E U97 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U98 ( .A(\CARRYB[1][2] ), .Z(n44) );
  INVERT_H U99 ( .A(\ab[1][7] ), .Z(n45) );
  INVERT_H U100 ( .A(\ab[2][6] ), .Z(n46) );
  NOR2_C U101 ( .A(A[0]), .B(n33), .Z(\ab[0][7] ) );
  XOR2_C U102 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U103 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U104 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U105 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U106 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U107 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U108 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U109 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U110 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n47) );
endmodule


module dsp_slice_2 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n8, n9,
         n10, n11, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_2_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_2_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n9, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n8) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  INVERT_H U4 ( .A(n16), .Z(n2) );
  INVERT_K U5 ( .A(n2), .Z(sample_out[3]) );
  INVERT_I U6 ( .A(n4), .Z(n5) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_I U8 ( .A(n12), .Z(n13) );
  INVERT_H U9 ( .A(n6), .Z(accum_out[0]) );
  INVERT_H U10 ( .A(n10), .Z(n11) );
endmodule


module dsp_slice_1_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_1_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n38), .Z(n36) );
  INVERT_E U3 ( .A(n7), .Z(n35) );
  INVERT_H U4 ( .A(n17), .Z(n21) );
  AO21_F U5 ( .A1(n6), .A2(A[8]), .B(n48), .Z(n46) );
  AO21_F U6 ( .A1(n42), .A2(n64), .B(n34), .Z(n1) );
  AO21_F U7 ( .A1(n40), .A2(n23), .B(n9), .Z(n2) );
  OA21_H U8 ( .A1(A[8]), .A2(n6), .B(B[8]), .Z(n48) );
  AND2_H U9 ( .A(B[4]), .B(A[4]), .Z(n62) );
  INVERT_D U10 ( .A(n62), .Z(n3) );
  AND2_H U11 ( .A(B[7]), .B(A[7]), .Z(n51) );
  INVERT_D U12 ( .A(n51), .Z(n4) );
  NOR2_C U13 ( .A(B[4]), .B(A[4]), .Z(n61) );
  INVERT_H U14 ( .A(n37), .Z(n5) );
  INVERT_I U15 ( .A(n5), .Z(n6) );
  INVERT_H U16 ( .A(n36), .Z(n37) );
  AND2_H U17 ( .A(B[3]), .B(A[3]), .Z(n65) );
  INVERT_D U18 ( .A(n65), .Z(n7) );
  INVERT_H U19 ( .A(n54), .Z(n8) );
  INVERT_H U20 ( .A(n8), .Z(n9) );
  AND2_I U21 ( .A(B[6]), .B(A[6]), .Z(n54) );
  INVERT_E U22 ( .A(n24), .Z(n22) );
  INVERT_E U23 ( .A(n25), .Z(n10) );
  INVERT_H U24 ( .A(n10), .Z(n11) );
  INVERT_E U25 ( .A(n27), .Z(n12) );
  INVERT_H U26 ( .A(n12), .Z(n13) );
  INVERT_E U27 ( .A(n29), .Z(n14) );
  INVERT_H U28 ( .A(n14), .Z(n15) );
  INVERT_E U29 ( .A(n35), .Z(n33) );
  NAND2BAL_E U30 ( .A(n41), .B(n59), .Z(n60) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n59) );
  INVERT_E U32 ( .A(n55), .Z(n40) );
  INVERT_E U33 ( .A(n66), .Z(n42) );
  INVERT_E U34 ( .A(n20), .Z(n16) );
  INVERT_H U35 ( .A(n16), .Z(n17) );
  XOR2_E U36 ( .A(B[9]), .B(A[9]), .Z(n45) );
  NAND2_E U37 ( .A(n39), .B(n21), .Z(n52) );
  XOR2_C U38 ( .A(n45), .B(n46), .Z(SUM[9]) );
  XOR2_C U39 ( .A(n49), .B(n6), .Z(SUM[8]) );
  XNOR2_C U40 ( .A(n63), .B(n18), .Z(SUM[4]) );
  NOR2_C U41 ( .A(n11), .B(n30), .Z(n63) );
  XOR2_C U42 ( .A(B[8]), .B(A[8]), .Z(n49) );
  INVERT_D U43 ( .A(B[2]), .Z(n44) );
  INVERT_H U44 ( .A(n1), .Z(n18) );
  INVERT_H U45 ( .A(n2), .Z(n19) );
  INVERT_D U46 ( .A(n4), .Z(n20) );
  INVERT_F U47 ( .A(n22), .Z(n23) );
  OA21_F U48 ( .A1(n57), .A2(n28), .B(n59), .Z(n53) );
  INVERT_D U49 ( .A(n53), .Z(n24) );
  INVERT_D U50 ( .A(n3), .Z(n25) );
  INVERT_F U51 ( .A(n11), .Z(n26) );
  INVERT_D U52 ( .A(n58), .Z(n27) );
  INVERT_F U53 ( .A(n13), .Z(n28) );
  OA21_F U54 ( .A1(n30), .A2(n18), .B(n26), .Z(n58) );
  INVERT_D U55 ( .A(n61), .Z(n29) );
  INVERT_F U56 ( .A(n15), .Z(n30) );
  INVERT_E U57 ( .A(n44), .Z(n31) );
  INVERT_H U58 ( .A(n31), .Z(n32) );
  INVERT_F U59 ( .A(n33), .Z(n34) );
  OA21_F U60 ( .A1(n50), .A2(n19), .B(n21), .Z(n47) );
  INVERT_D U61 ( .A(n47), .Z(n38) );
  XOR2_B U62 ( .A(n64), .B(n67), .Z(SUM[3]) );
  NOR2_C U63 ( .A(n34), .B(n66), .Z(n67) );
  NOR2_E U64 ( .A(B[3]), .B(A[3]), .Z(n66) );
  XOR2_B U65 ( .A(n52), .B(n19), .Z(SUM[7]) );
  INVERT_E U66 ( .A(n50), .Z(n39) );
  NOR2_E U67 ( .A(B[7]), .B(A[7]), .Z(n50) );
  XOR2_B U68 ( .A(n56), .B(n23), .Z(SUM[6]) );
  NOR2_C U69 ( .A(n9), .B(n55), .Z(n56) );
  NOR2_E U70 ( .A(B[6]), .B(A[6]), .Z(n55) );
  XOR2_B U71 ( .A(n60), .B(n28), .Z(SUM[5]) );
  INVERT_E U72 ( .A(n57), .Z(n41) );
  NOR2_E U73 ( .A(B[5]), .B(A[5]), .Z(n57) );
  NOR2_F U74 ( .A(n32), .B(n43), .Z(n64) );
  INVERT_H U75 ( .A(A[2]), .Z(n43) );
  AOI21_A U76 ( .A1(n32), .A2(n43), .B(n64), .Z(SUM[2]) );
endmodule


module dsp_slice_1_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][5] , \ab[3][4] , \ab[3][3] , \ab[3][2] ,
         \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] , \ab[2][5] ,
         \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] , \ab[2][0] ,
         \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] , \ab[1][3] ,
         \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] , \ab[0][6] ,
         \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] , \ab[0][1] ,
         \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] , \CARRYB[3][4] ,
         \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] , \CARRYB[3][0] ,
         \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] , \CARRYB[2][3] ,
         \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] , \CARRYB[1][6] ,
         \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] , \CARRYB[1][2] ,
         \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] , \SUMB[3][6] ,
         \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] , \SUMB[3][1] ,
         \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[2] , \A1[1] , \A1[0] , \A2[9] ,
         \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] , \A2[2] , n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60,
         n61, n62, n63, n64, n65, n66;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  dsp_slice_1_DW01_add_1 FS_1 ( .A({n59, n5, n10, n55, \A1[5] , \A1[4] , n8, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n20, n33, \A2[6] , n53, 
        \A2[4] , n32, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_D S5_6 ( .A(n3), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_D S14_7 ( .A(n60), .B(n64), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S3_2_6 ( .A(n58), .B(\CARRYB[1][6] ), .CIN(n57), .COUT(\CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n56), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n54), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n51), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n50), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n7), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n49), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  NOR2_D U2 ( .A(B[3]), .B(n60), .Z(\ab[3][3] ) );
  BUFFER_J U3 ( .A(\A1[6] ), .Z(n55) );
  XNOR2_C U4 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(n2) );
  INVERT_H U5 ( .A(\A2[7] ), .Z(n33) );
  NOR2_D U6 ( .A(B[2]), .B(n60), .Z(\ab[3][2] ) );
  NOR2_D U7 ( .A(B[6]), .B(n60), .Z(n3) );
  AND2_J U8 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  NOR2_C U9 ( .A(n61), .B(n41), .Z(\ab[2][3] ) );
  NOR2_C U10 ( .A(n61), .B(n47), .Z(\ab[2][0] ) );
  INVERT_M U11 ( .A(A[2]), .Z(n61) );
  NOR2_C U12 ( .A(n61), .B(n35), .Z(\ab[2][4] ) );
  NOR2_C U13 ( .A(n61), .B(n38), .Z(\ab[2][5] ) );
  NOR2_C U14 ( .A(n61), .B(n44), .Z(\ab[2][1] ) );
  INVERT_H U15 ( .A(n31), .Z(n4) );
  INVERT_I U16 ( .A(n4), .Z(n5) );
  INVERT_H U17 ( .A(n30), .Z(n31) );
  INVERT_H U18 ( .A(\A2[3] ), .Z(n32) );
  NAND2BAL_E U19 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_F U20 ( .A(B[4]), .Z(n36) );
  INVERT_F U21 ( .A(B[5]), .Z(n39) );
  INVERT_F U22 ( .A(B[3]), .Z(n42) );
  INVERT_F U23 ( .A(B[1]), .Z(n45) );
  INVERT_F U24 ( .A(B[0]), .Z(n48) );
  INVERT_F U25 ( .A(n21), .Z(n19) );
  BUFFER_H U26 ( .A(\A2[8] ), .Z(n21) );
  INVERT_D U27 ( .A(\CARRYB[1][3] ), .Z(n6) );
  INVERT_E U28 ( .A(n6), .Z(n7) );
  AND2_I U29 ( .A(n29), .B(n23), .Z(\CARRYB[1][6] ) );
  NAND2BAL_E U30 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  AND2_H U31 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U32 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  XOR2_D U33 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  AND2_H U34 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_D U35 ( .A(B[0]), .B(n60), .Z(\ab[3][0] ) );
  NOR2_D U36 ( .A(B[1]), .B(n60), .Z(\ab[3][1] ) );
  NOR2_D U37 ( .A(B[5]), .B(n60), .Z(\ab[3][5] ) );
  NOR2_D U38 ( .A(B[4]), .B(n60), .Z(\ab[3][4] ) );
  INVERT_N U39 ( .A(ZA), .Z(n60) );
  INVERT_H U40 ( .A(n2), .Z(n8) );
  CLKI_K U41 ( .A(\A1[7] ), .Z(n9) );
  INVERT_H U42 ( .A(n9), .Z(n10) );
  XOR2_B U43 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  AND2_H U44 ( .A(n12), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_E U45 ( .A(n63), .B(n44), .Z(\ab[0][1] ) );
  AND2_H U46 ( .A(n14), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U47 ( .A(n63), .B(n38), .Z(\ab[0][5] ) );
  AND2_H U48 ( .A(n16), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  NOR2_E U49 ( .A(n63), .B(n66), .Z(\ab[0][2] ) );
  AND2_H U50 ( .A(n18), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U51 ( .A(n63), .B(n41), .Z(\ab[0][3] ) );
  INVERT_E U52 ( .A(\ab[1][0] ), .Z(n11) );
  INVERT_H U53 ( .A(n11), .Z(n12) );
  INVERT_E U54 ( .A(\ab[1][4] ), .Z(n13) );
  INVERT_H U55 ( .A(n13), .Z(n14) );
  INVERT_E U56 ( .A(\ab[1][1] ), .Z(n15) );
  INVERT_H U57 ( .A(n15), .Z(n16) );
  INVERT_E U58 ( .A(\ab[1][2] ), .Z(n17) );
  INVERT_H U59 ( .A(n17), .Z(n18) );
  INVERT_F U60 ( .A(n19), .Z(n20) );
  NOR2_E U61 ( .A(n35), .B(n63), .Z(\ab[0][4] ) );
  INVERT_E U62 ( .A(\ab[0][7] ), .Z(n22) );
  INVERT_H U63 ( .A(n22), .Z(n23) );
  INVERT_E U64 ( .A(\ab[1][3] ), .Z(n24) );
  INVERT_H U65 ( .A(n24), .Z(n25) );
  INVERT_E U66 ( .A(\ab[1][5] ), .Z(n26) );
  INVERT_H U67 ( .A(n26), .Z(n27) );
  INVERT_E U68 ( .A(\ab[1][6] ), .Z(n28) );
  INVERT_H U69 ( .A(n28), .Z(n29) );
  CLKI_K U70 ( .A(\A1[8] ), .Z(n30) );
  XOR2_B U71 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  INVERT_F U72 ( .A(n36), .Z(n34) );
  INVERT_I U73 ( .A(n34), .Z(n35) );
  INVERT_F U74 ( .A(n39), .Z(n37) );
  INVERT_I U75 ( .A(n37), .Z(n38) );
  INVERT_F U76 ( .A(n42), .Z(n40) );
  INVERT_I U77 ( .A(n40), .Z(n41) );
  INVERT_F U78 ( .A(n45), .Z(n43) );
  INVERT_I U79 ( .A(n43), .Z(n44) );
  INVERT_F U80 ( .A(n48), .Z(n46) );
  INVERT_I U81 ( .A(n46), .Z(n47) );
  INVERT_L U82 ( .A(A[1]), .Z(n62) );
  INVERT_I U83 ( .A(B[2]), .Z(n66) );
  NOR2_C U84 ( .A(n61), .B(n66), .Z(\ab[2][2] ) );
  NOR2_C U85 ( .A(A[2]), .B(n64), .Z(\ab[2][7] ) );
  INVERT_M U86 ( .A(A[0]), .Z(n63) );
  BUFFER_H U87 ( .A(\CARRYB[1][0] ), .Z(n49) );
  NOR2_C U88 ( .A(n62), .B(n47), .Z(\ab[1][0] ) );
  AND2_H U89 ( .A(n25), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U90 ( .A(n62), .B(n41), .Z(\ab[1][3] ) );
  BUFFER_H U91 ( .A(\CARRYB[1][4] ), .Z(n50) );
  NOR2_C U92 ( .A(n62), .B(n35), .Z(\ab[1][4] ) );
  NOR2_D U93 ( .A(n64), .B(n60), .Z(\ab[3][7] ) );
  INVERT_K U94 ( .A(ZB), .Z(n64) );
  NOR2_C U95 ( .A(n63), .B(n47), .Z(PRODUCT[0]) );
  BUFFER_H U96 ( .A(\CARRYB[1][5] ), .Z(n51) );
  NOR2_E U97 ( .A(n65), .B(n63), .Z(\ab[0][6] ) );
  AND2_H U98 ( .A(n27), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  NOR2_C U99 ( .A(n62), .B(n38), .Z(\ab[1][5] ) );
  INVERT_I U100 ( .A(B[6]), .Z(n65) );
  INVERT_H U101 ( .A(\A2[5] ), .Z(n52) );
  INVERT_I U102 ( .A(n52), .Z(n53) );
  AND2_I U103 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U104 ( .A(\CARRYB[1][1] ), .Z(n54) );
  NOR2_C U105 ( .A(n62), .B(n44), .Z(\ab[1][1] ) );
  OR2_I U106 ( .A(A[1]), .B(n64), .Z(\ab[1][7] ) );
  BUFFER_H U107 ( .A(\CARRYB[1][2] ), .Z(n56) );
  NOR2_C U108 ( .A(n62), .B(n66), .Z(\ab[1][2] ) );
  INVERT_H U109 ( .A(\ab[1][7] ), .Z(n57) );
  OR2_J U110 ( .A(n61), .B(n65), .Z(\ab[2][6] ) );
  INVERT_H U111 ( .A(\ab[2][6] ), .Z(n58) );
  NOR2_C U112 ( .A(n65), .B(n62), .Z(\ab[1][6] ) );
  NOR2_C U113 ( .A(A[0]), .B(n64), .Z(\ab[0][7] ) );
  XOR2_C U114 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U115 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U116 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U117 ( .A(\ab[0][1] ), .B(n12), .Z(PRODUCT[1]) );
  XOR2_C U118 ( .A(\ab[0][2] ), .B(n16), .Z(\SUMB[1][1] ) );
  XOR2_C U119 ( .A(\ab[0][3] ), .B(n18), .Z(\SUMB[1][2] ) );
  XOR2_C U120 ( .A(\ab[0][4] ), .B(n25), .Z(\SUMB[1][3] ) );
  XOR2_C U121 ( .A(\ab[0][5] ), .B(n14), .Z(\SUMB[1][4] ) );
  XOR2_C U122 ( .A(\ab[0][6] ), .B(n27), .Z(\SUMB[1][5] ) );
  XOR2_C U123 ( .A(n23), .B(n29), .Z(\SUMB[1][6] ) );
  INVERT_D U124 ( .A(\CARRYB[3][7] ), .Z(n59) );
endmodule


module dsp_slice_1 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n16, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n4, n5, n6, n7, n8,
         n9, n10, n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_1_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n9}), .CI(
        1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_1_DW02_mult_0 mult_32 ( .A({sample_out[3], n5, n7, n13}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .Q(
        sample_out[0]), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n8) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .Q(
        sample_out[1]), .QBAR(n6) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n4) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n16) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  INVERT_I U4 ( .A(n4), .Z(n5) );
  INVERT_H U5 ( .A(n16), .Z(n2) );
  INVERT_K U6 ( .A(n2), .Z(sample_out[3]) );
  INVERT_I U7 ( .A(n6), .Z(n7) );
  INVERT_I U8 ( .A(n12), .Z(n13) );
  INVERT_H U9 ( .A(n8), .Z(n9) );
  INVERT_H U10 ( .A(n10), .Z(accum_out[0]) );
endmodule


module dsp_slice_0_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n30), .Z(n28) );
  INVERT_E U3 ( .A(n4), .Z(n27) );
  AO21_F U4 ( .A1(n32), .A2(n16), .B(n6), .Z(n1) );
  AO21_F U5 ( .A1(n34), .A2(n56), .B(n26), .Z(n2) );
  AND2_H U6 ( .A(B[4]), .B(A[4]), .Z(n54) );
  INVERT_D U7 ( .A(n54), .Z(n3) );
  OA21_H U8 ( .A1(A[8]), .A2(n29), .B(B[8]), .Z(n40) );
  XOR2_B U9 ( .A(n41), .B(n29), .Z(SUM[8]) );
  AND2_H U10 ( .A(B[3]), .B(A[3]), .Z(n57) );
  INVERT_D U11 ( .A(n57), .Z(n4) );
  INVERT_H U12 ( .A(n46), .Z(n5) );
  INVERT_H U13 ( .A(n5), .Z(n6) );
  AND2_I U14 ( .A(B[6]), .B(A[6]), .Z(n46) );
  INVERT_E U15 ( .A(n17), .Z(n15) );
  INVERT_E U16 ( .A(n18), .Z(n7) );
  INVERT_H U17 ( .A(n7), .Z(n8) );
  INVERT_E U18 ( .A(n20), .Z(n9) );
  INVERT_H U19 ( .A(n9), .Z(n10) );
  INVERT_F U20 ( .A(n24), .Z(n22) );
  BUFFER_H U21 ( .A(n53), .Z(n24) );
  INVERT_E U22 ( .A(n27), .Z(n25) );
  NAND2BAL_E U23 ( .A(n33), .B(n51), .Z(n52) );
  NAND2_F U24 ( .A(B[5]), .B(A[5]), .Z(n51) );
  NAND2BAL_E U25 ( .A(n31), .B(n43), .Z(n44) );
  NAND2_F U26 ( .A(B[7]), .B(A[7]), .Z(n43) );
  INVERT_E U27 ( .A(n47), .Z(n32) );
  INVERT_E U28 ( .A(n58), .Z(n34) );
  XOR2_E U29 ( .A(B[9]), .B(A[9]), .Z(n37) );
  INVERT_D U30 ( .A(n38), .Z(n11) );
  INVERT_E U31 ( .A(n11), .Z(n12) );
  AO21_E U32 ( .A1(n29), .A2(A[8]), .B(n40), .Z(n38) );
  XOR2_C U33 ( .A(n37), .B(n12), .Z(SUM[9]) );
  XNOR2_C U34 ( .A(n55), .B(n13), .Z(SUM[4]) );
  NOR2_C U35 ( .A(n8), .B(n23), .Z(n55) );
  NOR2_C U36 ( .A(B[4]), .B(A[4]), .Z(n53) );
  XOR2_B U37 ( .A(B[8]), .B(A[8]), .Z(n41) );
  CLKI_O U38 ( .A(n28), .Z(n29) );
  INVERT_H U39 ( .A(n2), .Z(n13) );
  INVERT_H U40 ( .A(n1), .Z(n14) );
  INVERT_F U41 ( .A(n15), .Z(n16) );
  OA21_F U42 ( .A1(n49), .A2(n21), .B(n51), .Z(n45) );
  INVERT_D U43 ( .A(n45), .Z(n17) );
  INVERT_D U44 ( .A(n3), .Z(n18) );
  INVERT_F U45 ( .A(n8), .Z(n19) );
  INVERT_D U46 ( .A(n50), .Z(n20) );
  INVERT_F U47 ( .A(n10), .Z(n21) );
  OA21_F U48 ( .A1(n23), .A2(n13), .B(n19), .Z(n50) );
  INVERT_F U49 ( .A(n22), .Z(n23) );
  INVERT_H U50 ( .A(B[2]), .Z(n36) );
  INVERT_F U51 ( .A(n25), .Z(n26) );
  OA21_F U52 ( .A1(n42), .A2(n14), .B(n43), .Z(n39) );
  INVERT_D U53 ( .A(n39), .Z(n30) );
  XOR2_B U54 ( .A(n56), .B(n59), .Z(SUM[3]) );
  NOR2_C U55 ( .A(n26), .B(n58), .Z(n59) );
  NOR2_E U56 ( .A(B[3]), .B(A[3]), .Z(n58) );
  XOR2_B U57 ( .A(n44), .B(n14), .Z(SUM[7]) );
  INVERT_E U58 ( .A(n42), .Z(n31) );
  NOR2_E U59 ( .A(B[7]), .B(A[7]), .Z(n42) );
  XOR2_B U60 ( .A(n48), .B(n16), .Z(SUM[6]) );
  NOR2_C U61 ( .A(n6), .B(n47), .Z(n48) );
  NOR2_E U62 ( .A(B[6]), .B(A[6]), .Z(n47) );
  XOR2_B U63 ( .A(n52), .B(n21), .Z(SUM[5]) );
  INVERT_E U64 ( .A(n49), .Z(n33) );
  NOR2_E U65 ( .A(B[5]), .B(A[5]), .Z(n49) );
  NOR2_F U66 ( .A(n36), .B(n35), .Z(n56) );
  INVERT_H U67 ( .A(A[2]), .Z(n35) );
  AOI21_A U68 ( .A1(n36), .A2(n35), .B(n56), .Z(SUM[2]) );
endmodule


module dsp_slice_0_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, ZB,
         \A1[8] , \A1[7] , \A1[6] , \A1[5] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39;
  assign ZA = A[3];
  assign ZB = B[7];

  dsp_slice_0_DW01_add_1 FS_1 ( .A({n27, n11, n21, n22, \A1[5] , n7, n9, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n6, n23, \A2[6] , n14, 
        \A2[4] , n12, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_D S14_7 ( .A(n28), .B(n32), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S3_2_6 ( .A(n26), .B(n4), .CIN(n25), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n24), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n17), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n16), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n19), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n18), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n15), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_E S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  BUFFER_J U2 ( .A(\A1[6] ), .Z(n22) );
  XNOR2_C U3 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(n2) );
  NOR2_D U4 ( .A(B[2]), .B(n28), .Z(\ab[3][2] ) );
  NOR2_D U5 ( .A(n29), .B(n39), .Z(\ab[2][0] ) );
  NOR2_C U6 ( .A(n29), .B(n36), .Z(\ab[2][3] ) );
  INVERT_M U7 ( .A(A[2]), .Z(n29) );
  INVERT_H U8 ( .A(\A2[3] ), .Z(n12) );
  NAND2BAL_E U9 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_D U10 ( .A(A[2]), .B(n32), .Z(\ab[2][7] ) );
  INVERT_D U11 ( .A(\CARRYB[1][6] ), .Z(n3) );
  INVERT_E U12 ( .A(n3), .Z(n4) );
  INVERT_H U13 ( .A(\A2[8] ), .Z(n5) );
  INVERT_H U14 ( .A(n5), .Z(n6) );
  AND2_I U15 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U16 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  AND2_H U17 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  AND2_J U18 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  CLKI_O U19 ( .A(n10), .Z(n11) );
  NOR2_D U20 ( .A(n29), .B(n37), .Z(\ab[2][2] ) );
  NOR2_D U21 ( .A(n29), .B(n35), .Z(\ab[2][4] ) );
  NOR2_D U22 ( .A(n32), .B(n28), .Z(\ab[3][7] ) );
  NOR2_D U23 ( .A(B[1]), .B(n28), .Z(\ab[3][1] ) );
  INVERT_H U24 ( .A(n2), .Z(n7) );
  NOR2_D U25 ( .A(B[6]), .B(n28), .Z(\ab[3][6] ) );
  INVERT_N U26 ( .A(ZA), .Z(n28) );
  CLKI_K U27 ( .A(\A1[3] ), .Z(n8) );
  INVERT_H U28 ( .A(n8), .Z(n9) );
  XOR2_B U29 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  AND2_H U30 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  NOR2_E U31 ( .A(n30), .B(n35), .Z(\ab[1][4] ) );
  AND2_H U32 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  NOR2_E U33 ( .A(n30), .B(n39), .Z(\ab[1][0] ) );
  AND2_H U34 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_E U35 ( .A(n30), .B(n36), .Z(\ab[1][3] ) );
  AND2_H U36 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  NOR2_E U37 ( .A(n30), .B(n37), .Z(\ab[1][2] ) );
  NOR2_E U38 ( .A(n30), .B(n34), .Z(\ab[1][5] ) );
  NOR2_E U39 ( .A(n33), .B(n30), .Z(\ab[1][6] ) );
  INVERT_M U40 ( .A(A[1]), .Z(n30) );
  AND2_I U41 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  CLKI_K U42 ( .A(\A1[8] ), .Z(n10) );
  XOR2_B U43 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  NOR2_E U44 ( .A(n30), .B(n38), .Z(\ab[1][1] ) );
  INVERT_I U45 ( .A(B[1]), .Z(n38) );
  NOR2_E U46 ( .A(n31), .B(n35), .Z(\ab[0][4] ) );
  NOR2_E U47 ( .A(n31), .B(n34), .Z(\ab[0][5] ) );
  NOR2_E U48 ( .A(n31), .B(n36), .Z(\ab[0][3] ) );
  NOR2_E U49 ( .A(n31), .B(n37), .Z(\ab[0][2] ) );
  NOR2_E U50 ( .A(n31), .B(n38), .Z(\ab[0][1] ) );
  INVERT_M U51 ( .A(A[0]), .Z(n31) );
  INVERT_I U52 ( .A(B[3]), .Z(n36) );
  INVERT_I U53 ( .A(B[4]), .Z(n35) );
  INVERT_I U54 ( .A(B[2]), .Z(n37) );
  INVERT_I U55 ( .A(\A2[7] ), .Z(n23) );
  INVERT_I U56 ( .A(B[0]), .Z(n39) );
  NOR2_D U57 ( .A(B[3]), .B(n28), .Z(\ab[3][3] ) );
  INVERT_I U58 ( .A(B[5]), .Z(n34) );
  INVERT_H U59 ( .A(\A2[5] ), .Z(n13) );
  INVERT_I U60 ( .A(n13), .Z(n14) );
  AND2_I U61 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U62 ( .A(\CARRYB[1][4] ), .Z(n15) );
  BUFFER_H U63 ( .A(\CARRYB[1][0] ), .Z(n16) );
  BUFFER_H U64 ( .A(\CARRYB[1][1] ), .Z(n17) );
  NOR2_C U65 ( .A(n29), .B(n38), .Z(\ab[2][1] ) );
  BUFFER_H U66 ( .A(\CARRYB[1][5] ), .Z(n18) );
  NOR2_C U67 ( .A(n29), .B(n34), .Z(\ab[2][5] ) );
  NOR2_E U68 ( .A(n33), .B(n31), .Z(\ab[0][6] ) );
  AND2_H U69 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  BUFFER_H U70 ( .A(\CARRYB[1][3] ), .Z(n19) );
  INVERT_H U71 ( .A(\A1[7] ), .Z(n20) );
  INVERT_I U72 ( .A(n20), .Z(n21) );
  NOR2_E U73 ( .A(A[0]), .B(n32), .Z(\ab[0][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n32) );
  NOR2_D U75 ( .A(B[0]), .B(n28), .Z(\ab[3][0] ) );
  OR2_I U76 ( .A(A[1]), .B(n32), .Z(\ab[1][7] ) );
  NOR2_D U77 ( .A(n31), .B(n39), .Z(PRODUCT[0]) );
  INVERT_I U78 ( .A(B[6]), .Z(n33) );
  NOR2_D U79 ( .A(B[5]), .B(n28), .Z(\ab[3][5] ) );
  NOR2_D U80 ( .A(B[4]), .B(n28), .Z(\ab[3][4] ) );
  NAND2_E U81 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U82 ( .A(\CARRYB[1][2] ), .Z(n24) );
  INVERT_H U83 ( .A(\ab[1][7] ), .Z(n25) );
  OR2_J U84 ( .A(n29), .B(n33), .Z(\ab[2][6] ) );
  INVERT_H U85 ( .A(\ab[2][6] ), .Z(n26) );
  AND2_H U86 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  XOR2_C U87 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_C U88 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U89 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U90 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U91 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U92 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  XOR2_C U93 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U94 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  XOR2_C U95 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  XOR2_C U96 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  XOR2_C U97 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  INVERT_D U98 ( .A(\CARRYB[3][7] ), .Z(n27) );
endmodule


module dsp_slice_0 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n62, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n4, n5, n6, n7,
         n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21,
         n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35,
         n36, n37, n38, n39, n40, n41, n57, n58;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;

  dsp_slice_0_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n58}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_0_DW02_mult_0 mult_32 ( .A(sample_out), .B(coeff_in), .TC(1'b1), 
        .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n16)
         );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n57) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n15)
         );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .QBAR(n14) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .QBAR(n13) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .QBAR(n11) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .QBAR(n10) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .QBAR(n9) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .QBAR(n8) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .QBAR(n7) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .QBAR(n6) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .QBAR(n5) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .QBAR(n4) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n62) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  INVERT_I U4 ( .A(n15), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n2), .Z(sample_out[2]) );
  INVERT_H U6 ( .A(n62), .Z(n41) );
  INVERT_H U7 ( .A(n3), .Z(n17) );
  INVERT_J U8 ( .A(n17), .Z(n18) );
  INVERT_H U9 ( .A(n4), .Z(n19) );
  INVERT_J U10 ( .A(n19), .Z(n20) );
  INVERT_H U11 ( .A(n5), .Z(n21) );
  INVERT_J U12 ( .A(n21), .Z(n22) );
  INVERT_H U13 ( .A(n6), .Z(n23) );
  INVERT_J U14 ( .A(n23), .Z(n24) );
  INVERT_H U15 ( .A(n7), .Z(n25) );
  INVERT_J U16 ( .A(n25), .Z(n26) );
  INVERT_H U17 ( .A(n8), .Z(n27) );
  INVERT_J U18 ( .A(n27), .Z(n28) );
  INVERT_H U19 ( .A(n9), .Z(n29) );
  INVERT_J U20 ( .A(n29), .Z(n30) );
  INVERT_H U21 ( .A(n10), .Z(n31) );
  INVERT_J U22 ( .A(n31), .Z(n32) );
  INVERT_H U23 ( .A(n11), .Z(n33) );
  INVERT_J U24 ( .A(n33), .Z(n34) );
  INVERT_H U25 ( .A(n12), .Z(n35) );
  INVERT_J U26 ( .A(n35), .Z(n36) );
  INVERT_H U27 ( .A(n13), .Z(n37) );
  INVERT_J U28 ( .A(n37), .Z(n38) );
  INVERT_H U29 ( .A(n14), .Z(n39) );
  INVERT_J U30 ( .A(n39), .Z(n40) );
  INVERT_J U31 ( .A(n16), .Z(sample_out[0]) );
  INVERT_K U32 ( .A(n41), .Z(sample_out[3]) );
  INVERT_O U33 ( .A(n18), .Z(accum_out[0]) );
  INVERT_O U34 ( .A(n20), .Z(accum_out[1]) );
  INVERT_O U35 ( .A(n22), .Z(accum_out[2]) );
  INVERT_O U36 ( .A(n24), .Z(accum_out[3]) );
  INVERT_O U37 ( .A(n26), .Z(accum_out[4]) );
  INVERT_O U38 ( .A(n28), .Z(accum_out[5]) );
  INVERT_O U39 ( .A(n30), .Z(accum_out[6]) );
  INVERT_O U40 ( .A(n32), .Z(accum_out[7]) );
  INVERT_O U41 ( .A(n34), .Z(accum_out[8]) );
  INVERT_O U42 ( .A(n36), .Z(accum_out[9]) );
  INVERT_O U43 ( .A(n38), .Z(accum_out[10]) );
  INVERT_O U44 ( .A(n40), .Z(accum_out[11]) );
  INVERT_H U45 ( .A(n57), .Z(n58) );
endmodule


module coeff_memory ( clk, coeff_in, coeff_addr, coeff_write, coeff_out0, 
        coeff_out1, coeff_out2, coeff_out3, coeff_out4, coeff_out5, coeff_out6, 
        coeff_out7, coeff_out8, coeff_out9, coeff_out10, coeff_out11, 
        coeff_out12, coeff_out13, coeff_out14, coeff_out15, coeff_out16, 
        coeff_out17, coeff_out18, coeff_out19, coeff_out20, coeff_out21, 
        coeff_out22, coeff_out23, coeff_out24, coeff_out25, coeff_out26, 
        coeff_out27, coeff_out28, coeff_out29, coeff_out30, coeff_out31, 
        coeff_out32, coeff_out33, coeff_out34, coeff_out35, coeff_out36, 
        coeff_out37, coeff_out38, coeff_out39, coeff_out40, coeff_out41, 
        coeff_out42, coeff_out43, coeff_out44, coeff_out45, coeff_out46, 
        coeff_out47, coeff_out48, coeff_out49, coeff_out50, coeff_out51, 
        coeff_out52, coeff_out53, coeff_out54, coeff_out55, coeff_out56, 
        coeff_out57, coeff_out58, coeff_out59, coeff_out60, coeff_out61, 
        coeff_out62, coeff_out63, coeff_out64, coeff_out65, coeff_out66, 
        coeff_out67, coeff_out68, coeff_out69, coeff_out70 );
  input [7:0] coeff_in;
  input [6:0] coeff_addr;
  output [7:0] coeff_out0;
  output [7:0] coeff_out1;
  output [7:0] coeff_out2;
  output [7:0] coeff_out3;
  output [7:0] coeff_out4;
  output [7:0] coeff_out5;
  output [7:0] coeff_out6;
  output [7:0] coeff_out7;
  output [7:0] coeff_out8;
  output [7:0] coeff_out9;
  output [7:0] coeff_out10;
  output [7:0] coeff_out11;
  output [7:0] coeff_out12;
  output [7:0] coeff_out13;
  output [7:0] coeff_out14;
  output [7:0] coeff_out15;
  output [7:0] coeff_out16;
  output [7:0] coeff_out17;
  output [7:0] coeff_out18;
  output [7:0] coeff_out19;
  output [7:0] coeff_out20;
  output [7:0] coeff_out21;
  output [7:0] coeff_out22;
  output [7:0] coeff_out23;
  output [7:0] coeff_out24;
  output [7:0] coeff_out25;
  output [7:0] coeff_out26;
  output [7:0] coeff_out27;
  output [7:0] coeff_out28;
  output [7:0] coeff_out29;
  output [7:0] coeff_out30;
  output [7:0] coeff_out31;
  output [7:0] coeff_out32;
  output [7:0] coeff_out33;
  output [7:0] coeff_out34;
  output [7:0] coeff_out35;
  output [7:0] coeff_out36;
  output [7:0] coeff_out37;
  output [7:0] coeff_out38;
  output [7:0] coeff_out39;
  output [7:0] coeff_out40;
  output [7:0] coeff_out41;
  output [7:0] coeff_out42;
  output [7:0] coeff_out43;
  output [7:0] coeff_out44;
  output [7:0] coeff_out45;
  output [7:0] coeff_out46;
  output [7:0] coeff_out47;
  output [7:0] coeff_out48;
  output [7:0] coeff_out49;
  output [7:0] coeff_out50;
  output [7:0] coeff_out51;
  output [7:0] coeff_out52;
  output [7:0] coeff_out53;
  output [7:0] coeff_out54;
  output [7:0] coeff_out55;
  output [7:0] coeff_out56;
  output [7:0] coeff_out57;
  output [7:0] coeff_out58;
  output [7:0] coeff_out59;
  output [7:0] coeff_out60;
  output [7:0] coeff_out61;
  output [7:0] coeff_out62;
  output [7:0] coeff_out63;
  output [7:0] coeff_out64;
  output [7:0] coeff_out65;
  output [7:0] coeff_out66;
  output [7:0] coeff_out67;
  output [7:0] coeff_out68;
  output [7:0] coeff_out69;
  output [7:0] coeff_out70;
  input clk, coeff_write;
  wire   n2457, n2458, n2459, n2460, n2461, n2462, n2463, n2464, n2465, n2466,
         n2467, n2468, n2469, n2470, n2471, n2472, n2473, n2474, n2475, n2476,
         n2477, n2478, n2479, n2480, n2481, n2482, n2483, n2484, n2485, n2486,
         n2487, n2488, n2489, n2490, n2491, n2492, n2493, n2494, n2495, n2496,
         n2497, n2498, n2499, n2500, n2501, n2502, n2503, n2504, n2505, n2506,
         n2507, n2508, n2509, n2510, n2511, n2512, n2513, n2514, n2515, n2516,
         n2517, n2518, n2519, n2520, n2521, n2522, n2523, n2524, n2525, n2526,
         n2527, n2528, n2529, n2530, n2531, n2532, n2533, n2534, n2535, n2536,
         n2537, n2538, n2539, n2540, n2541, n2542, n2543, n2544, n2545, n2546,
         n2547, n2548, n2549, n2550, n2551, n2552, n2553, n2554, n2555, n2556,
         n2557, n2558, n2559, n2560, n2561, n2562, n2563, n2564, n2565, n2566,
         n2567, n2568, n2569, n2570, n2571, n2572, n2573, n2574, n2575, n2576,
         n2577, n2578, n2579, n2580, n2581, n2582, n2583, n2584, n2585, n2586,
         n2587, n2588, n2589, n2590, n2591, n2592, n2593, n2594, n2595, n2596,
         n2597, n2598, n2599, n2600, n2601, n2602, n2603, n2604, n2605, n2606,
         n2607, n2608, n2609, n2610, n2611, n2612, n2613, n2614, n2615, n2616,
         n2617, n2618, n2619, n2620, n2621, n2622, n2623, n2624, n2625, n2626,
         n2627, n2628, n2629, n2630, n2631, n2632, n2633, n2634, n2635, n2636,
         n2637, n2638, n2639, n2640, n2641, n2642, n2643, n2644, n2645, n2646,
         n2647, n2648, n2649, n2650, n2651, n2652, n2653, n2654, n2655, n2656,
         n2657, n2658, n2659, n2660, n2661, n2662, n2663, n2664, n2665, n2666,
         n2667, n2668, n2669, n2670, n2671, n2672, n2673, n2674, n2675, n2676,
         n2677, n2678, n2679, n2680, n2681, n2682, n2683, n2684, n2685, n2686,
         n2687, n2688, n2689, n2690, n2691, n2692, n2693, n2694, n2695, n2696,
         n2697, n2698, n2699, n2700, n2701, n2702, n2703, n2704, n2705, n2706,
         n2707, n2708, n2709, n2710, n2711, n2712, n2713, n2714, n2715, n2716,
         n2717, n2718, n2719, n2720, n2721, n2722, n2723, n2724, n2725, n2726,
         n2727, n2728, n2729, n2730, n2731, n2732, n2733, n2734, n2735, n2736,
         n2737, n2738, n2739, n2740, n2741, n2742, n2743, n2744, n2745, n2746,
         n2747, n2748, n2749, n2750, n2751, n2752, n2753, n2754, n2755, n2756,
         n2757, n2758, n2759, n2760, n2761, n2762, n2763, n2764, n2765, n2766,
         n2767, n2768, n2769, n2770, n2771, n2772, n2773, n2774, n2775, n2776,
         n2777, n2778, n2779, n2780, n2781, n2782, n2783, n2784, n2785, n2786,
         n2787, n2788, n2789, n2790, n2791, n2792, n2793, n2794, n2795, n2796,
         n2797, n2798, n2799, n2800, n2801, n2802, n2803, n2804, n2805, n2806,
         n2807, n2808, n2809, n2810, n2811, n2812, n2813, n2814, n2815, n2816,
         n2817, n2818, n2819, n2820, n2821, n2822, n2823, n2824, n2825, n2826,
         n2827, n2828, n2829, n2830, n2831, n2832, n2833, n2834, n2835, n2836,
         n2837, n2838, n2839, n2840, n2841, n2842, n2843, n2844, n2845, n2846,
         n2847, n2848, n2849, n2850, n2851, n2852, n2853, n2854, n2855, n2856,
         n2857, n2858, n2859, n2860, n2861, n2862, n2863, n2864, n2865, n2866,
         n2867, n2868, n2869, n2870, n2871, n2872, n2873, n2874, n2875, n2876,
         n2877, n2878, n2879, n2880, n2881, n2882, n2883, n2884, n2885, n2886,
         n2887, n2888, n2889, n2890, n2891, n2892, n2893, n2894, n2895, n2896,
         n2897, n2898, n2899, n2900, n2901, n2902, n2903, n2904, n2905, n2906,
         n2907, n2908, n2909, n2910, n2911, n2912, n2913, n2914, n2915, n2916,
         n2917, n2918, n2919, n2920, n2921, n2922, n2923, n2924, n2925, n2926,
         n2927, n2928, n2929, n2930, n2931, n2932, n2933, n2934, n2935, n2936,
         n2937, n2938, n2939, n2940, n2941, n2942, n2943, n2944, n2945, n2946,
         n2947, n2948, n2949, n2950, n2951, n2952, n2953, n2954, n78, n79, n80,
         n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n102, n103, n104, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178, n179, n180, n181, n182, n183, n184,
         n185, n186, n187, n188, n189, n190, n191, n192, n193, n194, n195,
         n196, n197, n198, n199, n200, n201, n202, n203, n204, n205, n206,
         n207, n208, n209, n210, n211, n212, n213, n214, n215, n216, n217,
         n218, n219, n220, n221, n222, n223, n224, n225, n226, n227, n228,
         n229, n230, n231, n232, n233, n234, n235, n236, n237, n238, n239,
         n240, n241, n242, n243, n244, n245, n246, n247, n248, n249, n250,
         n251, n252, n253, n254, n255, n256, n257, n258, n259, n260, n261,
         n262, n263, n264, n265, n266, n267, n268, n269, n270, n271, n272,
         n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, n283,
         n284, n285, n286, n287, n288, n289, n290, n291, n292, n293, n294,
         n295, n296, n297, n298, n299, n300, n301, n302, n303, n304, n305,
         n306, n307, n308, n309, n310, n311, n312, n313, n314, n315, n316,
         n317, n318, n319, n320, n321, n322, n323, n324, n325, n326, n327,
         n328, n329, n330, n331, n332, n333, n334, n335, n336, n337, n338,
         n339, n340, n341, n342, n343, n344, n345, n346, n347, n348, n349,
         n350, n351, n352, n353, n354, n355, n356, n357, n358, n359, n360,
         n361, n362, n363, n364, n365, n366, n367, n368, n369, n370, n371,
         n372, n373, n374, n375, n376, n377, n378, n379, n380, n381, n382,
         n383, n384, n385, n386, n387, n388, n389, n390, n391, n392, n393,
         n394, n395, n396, n397, n398, n399, n400, n401, n402, n403, n404,
         n405, n406, n407, n408, n409, n410, n411, n412, n413, n414, n415,
         n416, n417, n418, n419, n420, n421, n422, n423, n424, n425, n426,
         n427, n428, n429, n430, n431, n432, n433, n434, n435, n436, n437,
         n438, n439, n440, n441, n442, n443, n444, n445, n446, n447, n448,
         n449, n450, n451, n452, n453, n454, n455, n456, n457, n458, n459,
         n460, n461, n462, n463, n464, n465, n466, n467, n468, n469, n470,
         n471, n472, n473, n474, n475, n476, n477, n478, n479, n480, n481,
         n482, n483, n484, n485, n486, n487, n488, n489, n490, n491, n492,
         n493, n494, n495, n496, n497, n498, n499, n500, n501, n502, n503,
         n504, n505, n506, n507, n508, n509, n510, n511, n512, n513, n514,
         n515, n516, n517, n518, n519, n520, n521, n522, n523, n524, n525,
         n526, n527, n528, n529, n530, n531, n532, n533, n534, n535, n536,
         n537, n538, n539, n540, n541, n542, n543, n544, n545, n546, n547,
         n548, n549, n550, n551, n552, n553, n554, n555, n556, n557, n558,
         n559, n560, n561, n562, n563, n564, n565, n566, n567, n568, n569,
         n570, n571, n572, n573, n574, n575, n576, n577, n578, n579, n580,
         n581, n582, n583, n584, n585, n586, n587, n588, n589, n590, n591,
         n592, n593, n594, n595, n596, n597, n598, n599, n600, n601, n602,
         n603, n604, n605, n606, n607, n608, n609, n610, n611, n612, n613,
         n614, n615, n616, n617, n618, n619, n620, n621, n622, n623, n624,
         n625, n626, n627, n628, n629, n630, n631, n632, n633, n634, n635,
         n636, n637, n638, n639, n640, n641, n642, n643, n644, n645, n646,
         n647, n648, n649, n650, n651, n652, n653, n654, n655, n656, n657,
         n658, n659, n660, n661, n662, n663, n664, n665, n666, n667, n668,
         n669, n670, n671, n672, n673, n674, n675, n676, n677, n678, n679,
         n680, n681, n682, n683, n684, n685, n686, n687, n688, n689, n690,
         n691, n692, n693, n694, n695, n696, n697, n698, n699, n700, n701,
         n702, n703, n704, n705, n706, n707, n708, n709, n710, n711, n712,
         n713, n714, n715, n716, n717, n718, n719, n720, n721, n722, n723,
         n724, n725, n726, n727, n728, n729, n730, n731, n732, n733, n734,
         n735, n736, n737, n738, n739, n740, n741, n742, n743, n744, n745, n1,
         n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n101, n746, n747, n748, n749, n750, n751,
         n752, n753, n754, n755, n756, n757, n758, n759, n760, n761, n762,
         n763, n764, n765, n766, n767, n768, n769, n770, n771, n774, n775,
         n778, n779, n780, n781, n782, n783, n784, n785, n788, n789, n792,
         n793, n794, n795, n796, n797, n798, n799, n800, n801, n802, n803,
         n804, n805, n806, n807, n808, n809, n810, n811, n812, n813, n814,
         n815, n816, n817, n818, n819, n820, n821, n822, n823, n824, n825,
         n826, n827, n828, n829, n830, n831, n832, n833, n834, n835, n836,
         n837, n838, n839, n840, n841, n842, n843, n844, n845, n846, n847,
         n848, n849, n850, n851, n852, n853, n854, n855, n856, n857, n858,
         n859, n860, n861, n862, n863, n864, n865, n866, n867, n868, n869,
         n870, n871, n872, n873, n874, n875, n876, n877, n878, n879, n880,
         n881, n882, n883, n884, n885, n886, n887, n888, n889, n890, n891,
         n892, n893, n894, n895, n896, n897, n898, n899, n900, n901, n902,
         n903, n904, n905, n906, n907, n908, n909, n910, n911, n912, n913,
         n914, n915, n916, n917, n918, n919, n920, n921, n922, n923, n924,
         n925, n926, n927, n928, n929, n930, n931, n932, n933, n934, n935,
         n936, n937, n938, n939, n940, n941, n942, n943, n944, n945, n946,
         n947, n948, n949, n950, n951, n952, n953, n954, n955, n956, n957,
         n958, n959, n960, n961, n962, n963, n964, n965, n966, n967, n968,
         n969, n970, n971, n972, n973, n974, n975, n976, n977, n978, n979,
         n980, n981, n982, n983, n984, n985, n986, n987, n988, n989, n990,
         n991, n992, n993, n994, n995, n996, n997, n998, n999, n1000, n1001,
         n1002, n1003, n1004, n1005, n1006, n1007, n1008, n1009, n1010, n1011,
         n1012, n1013, n1014, n1015, n1016, n1017, n1018, n1019, n1020, n1021,
         n1022, n1023, n1024, n1025, n1026, n1027, n1028, n1029, n1030, n1031,
         n1032, n1033, n1042, n1044, n1053, n1055, n1061, n1062, n1070, n1071,
         n1072, n1073, n1074, n1075, n1076, n1077, n1078, n1079, n1080, n1081,
         n1082, n1083, n1084, n1085, n1086, n1087, n1088, n1089, n1090, n1091,
         n1092, n1093, n1094, n1095, n1096, n1097, n1098, n1099, n1100, n1101,
         n1102, n1103, n1104, n1105, n1106, n1107, n1108, n1109, n1110, n1112,
         n1114, n1116, n1118, n1120, n1122, n1124, n1126, n1128, n1130, n1132,
         n1134, n1136, n1138, n1140, n1142, n1144, n1146, n1148, n1150, n1152,
         n1154, n1156, n1158, n1160, n1162, n1164, n1166, n1168, n1170, n1172,
         n1174, n1176, n1178, n1180, n1182, n1184, n1186, n1188, n1190, n1192,
         n1194, n1196, n1198, n1200, n1202, n1204, n1206, n1208, n1210, n1212,
         n1214, n1216, n1218, n1220, n1222, n1224, n1226, n1228, n1230, n1232,
         n1234, n1236, n1238, n1240, n1242, n1243, n1244, n1246, n1248, n1250,
         n1252, n1254, n1256, n1258, n1260, n1262, n1264, n1266, n1268, n1270,
         n1272, n1274, n1276, n1278, n1280, n1282, n1284, n1286, n1288, n1290,
         n1292, n1294, n1296, n1298, n1300, n1302, n1304, n1306, n1308, n1310,
         n1312, n1314, n1316, n1318, n1320, n1322, n1324, n1326, n1328, n1330,
         n1332, n1334, n1336, n1338, n1340, n1342, n1344, n1346, n1348, n1350,
         n1352, n1354, n1356, n1358, n1360, n1362, n1364, n1366, n1368, n1370,
         n1372, n1374, n1376, n1378, n1380, n1382, n1384, n1386, n1388, n1390,
         n1392, n1394, n1396, n1398, n1400, n1402, n1404, n1406, n1408, n1410,
         n1412, n1414, n1416, n1418, n1420, n1422, n1424, n1426, n1428, n1430,
         n1432, n1434, n1436, n1438, n1440, n1442, n1443, n1444, n1445, n1446,
         n1448, n1450, n1452, n1454, n1456, n1458, n1460, n1462, n1464, n1466,
         n1468, n1470, n1472, n1474, n1476, n1478, n1480, n1482, n1484, n1486,
         n1488, n1490, n1492, n1494, n1496, n1498, n1500, n1502, n1504, n1506,
         n1508, n1510, n1512, n1514, n1515, n1516, n1518, n1520, n1522, n1524,
         n1526, n1528, n1530, n1532, n1534, n1536, n1538, n1540, n1542, n1544,
         n1546, n1548, n1550, n1552, n1554, n1556, n1558, n1560, n1562, n1564,
         n1566, n1568, n1570, n1572, n1574, n1576, n1578, n1580, n1582, n1584,
         n1586, n1588, n1590, n1592, n1594, n1596, n1598, n1600, n1602, n1604,
         n1606, n1608, n1610, n1612, n1614, n1616, n1618, n1620, n1622, n1624,
         n1626, n1628, n1630, n1632, n1634, n1636, n1638, n1640, n1642, n1644,
         n1646, n1648, n1650, n1652, n1654, n1656, n1658, n1660, n1662, n1664,
         n1666, n1668, n1670, n1672, n1674, n1676, n1678, n1680, n1682, n1684,
         n1686, n1688, n1690, n1692, n1694, n1696, n1698, n1700, n1702, n1704,
         n1706, n1708, n1710, n1712, n1714, n1716, n1718, n1720, n1722, n1724,
         n1726, n1728, n1730, n1732, n1734, n1736, n1738, n1740, n1742, n1744,
         n1746, n1748, n1750, n1752, n1754, n1756, n1758, n1760, n1762, n1764,
         n1766, n1768, n1770, n1772, n1774, n1776, n1778, n1780, n1782, n1784,
         n1786, n1788, n1790, n1792, n1794, n1796, n1798, n1800, n1802, n1804,
         n1806, n1808, n1810, n1812, n1814, n1816, n1818, n1820, n1822, n1824,
         n1826, n1828, n1830, n1832, n1834, n1836, n1838, n1840, n1842, n1844,
         n1846, n1848, n1850, n1852, n1854, n1856, n1858, n1860, n1862, n1864,
         n1866, n1868, n1870, n1872, n1874, n1876, n1878, n1880, n1882, n1884,
         n1886, n1888, n1890, n1892, n1894, n1896, n1898, n1900, n1902, n1904,
         n1906, n1908, n1910, n1912, n1914, n1916, n1918, n1920, n1922, n1924,
         n1926, n1928, n1930, n1932, n1934, n1936, n1938, n1940, n1942, n1944,
         n1946, n1948, n1950, n1952, n1954, n1956, n1958, n1960, n1962, n1963,
         n1964, n1965, n1966, n1967, n1968, n1969, n1970, n1971, n1972, n1973,
         n1974, n1975, n1976, n1978, n1980, n1982, n1984, n1986, n1988, n1990,
         n1992, n1994, n1996, n1998, n2000, n2002, n2004, n2006, n2008, n2010,
         n2012, n2014, n2016, n2018, n2020, n2022, n2024, n2026, n2028, n2030,
         n2032, n2034, n2036, n2038, n2040, n2042, n2044, n2046, n2048, n2050,
         n2052, n2054, n2056, n2058, n2060, n2062, n2064, n2066, n2068, n2070,
         n2072, n2074, n2076, n2078, n2080, n2082, n2084, n2086, n2088, n2090,
         n2092, n2094, n2096, n2098, n2100, n2102, n2104, n2106, n2108, n2110,
         n2112, n2114, n2116, n2118, n2120, n2122, n2124, n2126, n2128, n2130,
         n2132, n2134, n2136, n2138, n2140, n2142, n2144, n2146, n2148, n2150,
         n2152, n2154, n2156, n2158, n2160, n2162, n2164, n2166, n2168, n2170,
         n2172, n2174, n2176, n2178, n2180, n2182, n2184, n2186, n2188, n2190,
         n2192, n2193, n2194, n2195, n2196, n2197, n2198, n2199, n2200, n2201,
         n2202, n2203, n2204, n2205, n2206, n2207, n2208, n2209, n2210, n2211,
         n2212, n2213, n2214, n2215, n2216, n2217, n2218, n2219, n2220, n2221,
         n2222, n2223, n2224, n2225, n2226, n2227, n2228, n2229, n2230, n2231,
         n2232, n2233, n2234, n2235, n2236, n2237, n2238, n2239, n2240, n2241,
         n2242, n2243, n2244, n2245, n2246, n2247, n2248, n2249, n2250, n2251,
         n2252, n2253, n2254, n2255, n2256, n2257, n2258, n2259, n2260, n2261,
         n2262, n2263, n2264, n2265, n2266, n2267, n2268, n2269, n2270, n2271,
         n2272, n2273, n2274, n2275, n2276, n2277, n2278, n2279, n2280, n2281,
         n2282, n2283, n2284, n2285, n2286, n2287, n2288, n2289, n2290, n2291,
         n2292, n2293, n2294, n2295, n2296, n2297, n2298, n2299, n2300, n2301,
         n2302, n2303, n2304, n2305, n2306, n2307, n2308, n2309, n2310, n2311,
         n2312, n2313, n2314, n2315, n2316, n2317, n2318, n2319, n2320, n2321,
         n2322, n2323, n2324, n2325, n2326, n2327, n2328, n2329, n2330, n2331,
         n2332, n2333, n2334, n2335, n2336, n2337, n2338, n2339, n2340, n2341,
         n2342, n2343, n2344, n2345, n2346, n2347, n2348, n2349, n2350, n2351,
         n2352, n2353, n2354, n2355, n2356, n2357, n2358, n2359, n2360, n2361,
         n2362, n2363, n2364, n2365, n2366, n2367, n2368, n2369, n2370, n2371,
         n2372, n2373, n2374, n2375, n2376, n2377, n2378, n2379, n2380, n2381,
         n2382, n2383, n2384, n2385, n2386, n2387, n2388, n2389, n2390, n2391,
         n2392, n2393, n2394, n2395, n2396, n2397, n2398, n2399, n2400, n2401,
         n2402, n2403, n2404, n2405, n2406, n2407, n2408, n2409, n2410, n2411,
         n2412, n2413, n2414, n2415, n2416, n2417, n2418, n2419, n2420, n2421,
         n2422, n2423, n2424, n2425, n2426, n2427, n2428, n2429, n2430, n2431,
         n2432, n2433, n2434, n2435, n2436, n2437, n2438, n2439, n2440, n2441,
         n2442, n2443, n2444, n2445, n2446, n2447, n2448, n2449, n2450, n2451,
         n2452, n2453, n2454, n2455, n2456;

  DFF_E \coeff_internal_reg[63][4]  ( .D(n238), .CLK(clk), .Q(n2915), .QBAR(
        n2190) );
  DFF_E \coeff_internal_reg[47][4]  ( .D(n366), .CLK(clk), .Q(n2802), .QBAR(
        n2188) );
  DFF_E \coeff_internal_reg[46][4]  ( .D(n374), .CLK(clk), .Q(n2795), .QBAR(
        n2186) );
  DFF_E \coeff_internal_reg[44][4]  ( .D(n390), .CLK(clk), .Q(n2782), .QBAR(
        n2184) );
  DFF_E \coeff_internal_reg[43][4]  ( .D(n398), .CLK(clk), .Q(n2775), .QBAR(
        n2182) );
  DFF_E \coeff_internal_reg[42][4]  ( .D(n406), .CLK(clk), .Q(n2767), .QBAR(
        n2180) );
  DFF_E \coeff_internal_reg[41][4]  ( .D(n414), .CLK(clk), .Q(n2760), .QBAR(
        n2178) );
  DFF_E \coeff_internal_reg[40][4]  ( .D(n422), .CLK(clk), .Q(n2752), .QBAR(
        n2176) );
  DFF_E \coeff_internal_reg[39][4]  ( .D(n430), .CLK(clk), .Q(n2744), .QBAR(
        n2174) );
  DFF_E \coeff_internal_reg[38][4]  ( .D(n438), .CLK(clk), .Q(n2736), .QBAR(
        n2172) );
  DFF_E \coeff_internal_reg[37][4]  ( .D(n446), .CLK(clk), .Q(n2729), .QBAR(
        n2170) );
  DFF_E \coeff_internal_reg[36][4]  ( .D(n454), .CLK(clk), .Q(n2721), .QBAR(
        n2168) );
  DFF_E \coeff_internal_reg[35][4]  ( .D(n462), .CLK(clk), .Q(n2714), .QBAR(
        n2166) );
  DFF_E \coeff_internal_reg[34][4]  ( .D(n470), .CLK(clk), .Q(n2706), .QBAR(
        n2164) );
  DFF_E \coeff_internal_reg[33][4]  ( .D(n478), .CLK(clk), .Q(n2699), .QBAR(
        n2162) );
  DFF_E \coeff_internal_reg[32][4]  ( .D(n486), .CLK(clk), .Q(n2691), .QBAR(
        n2160) );
  DFF_E \coeff_internal_reg[31][4]  ( .D(n494), .CLK(clk), .Q(n2684), .QBAR(
        n2158) );
  DFF_E \coeff_internal_reg[15][4]  ( .D(n622), .CLK(clk), .Q(n2571), .QBAR(
        n2156) );
  DFF_E \coeff_internal_reg[14][4]  ( .D(n630), .CLK(clk), .Q(n2565), .QBAR(
        n2154) );
  DFF_E \coeff_internal_reg[13][4]  ( .D(n638), .CLK(clk), .Q(n2557), .QBAR(
        n2152) );
  DFF_E \coeff_internal_reg[12][4]  ( .D(n646), .CLK(clk), .Q(n2550), .QBAR(
        n2150) );
  DFF_E \coeff_internal_reg[11][4]  ( .D(n654), .CLK(clk), .Q(n2542), .QBAR(
        n2148) );
  DFF_E \coeff_internal_reg[10][4]  ( .D(n662), .CLK(clk), .Q(n2535), .QBAR(
        n2146) );
  DFF_E \coeff_internal_reg[9][4]  ( .D(n670), .CLK(clk), .Q(n2527), .QBAR(
        n2144) );
  DFF_E \coeff_internal_reg[8][4]  ( .D(n678), .CLK(clk), .Q(n2520), .QBAR(
        n2142) );
  DFF_E \coeff_internal_reg[7][4]  ( .D(n686), .CLK(clk), .Q(n2512), .QBAR(
        n2140) );
  DFF_E \coeff_internal_reg[6][4]  ( .D(n694), .CLK(clk), .Q(n2505), .QBAR(
        n2138) );
  DFF_E \coeff_internal_reg[5][4]  ( .D(n702), .CLK(clk), .Q(n2497), .QBAR(
        n2136) );
  DFF_E \coeff_internal_reg[4][4]  ( .D(n710), .CLK(clk), .Q(n2490), .QBAR(
        n2134) );
  DFF_E \coeff_internal_reg[3][4]  ( .D(n718), .CLK(clk), .Q(n2482), .QBAR(
        n2132) );
  DFF_E \coeff_internal_reg[2][4]  ( .D(n726), .CLK(clk), .Q(n2475), .QBAR(
        n2130) );
  DFF_E \coeff_internal_reg[1][4]  ( .D(n734), .CLK(clk), .Q(n2467), .QBAR(
        n2128) );
  DFF_E \coeff_internal_reg[0][4]  ( .D(n742), .CLK(clk), .Q(n2460), .QBAR(
        n2126) );
  DFF_E \coeff_internal_reg[63][3]  ( .D(n237), .CLK(clk), .Q(n2916), .QBAR(
        n2124) );
  DFF_E \coeff_internal_reg[47][3]  ( .D(n365), .CLK(clk), .Q(n2803), .QBAR(
        n2122) );
  DFF_E \coeff_internal_reg[46][3]  ( .D(n373), .CLK(clk), .Q(n2796), .QBAR(
        n2120) );
  DFF_E \coeff_internal_reg[44][3]  ( .D(n389), .CLK(clk), .Q(n2783), .QBAR(
        n2118) );
  DFF_E \coeff_internal_reg[43][3]  ( .D(n397), .CLK(clk), .Q(n2776), .QBAR(
        n2116) );
  DFF_E \coeff_internal_reg[42][3]  ( .D(n405), .CLK(clk), .Q(n2768), .QBAR(
        n2114) );
  DFF_E \coeff_internal_reg[41][3]  ( .D(n413), .CLK(clk), .Q(n2761), .QBAR(
        n2112) );
  DFF_E \coeff_internal_reg[39][3]  ( .D(n429), .CLK(clk), .Q(n2745), .QBAR(
        n2110) );
  DFF_E \coeff_internal_reg[38][3]  ( .D(n437), .CLK(clk), .Q(n2737), .QBAR(
        n2108) );
  DFF_E \coeff_internal_reg[37][3]  ( .D(n445), .CLK(clk), .Q(n2730), .QBAR(
        n2106) );
  DFF_E \coeff_internal_reg[36][3]  ( .D(n453), .CLK(clk), .Q(n2722), .QBAR(
        n2104) );
  DFF_E \coeff_internal_reg[35][3]  ( .D(n461), .CLK(clk), .Q(n2715), .QBAR(
        n2102) );
  DFF_E \coeff_internal_reg[34][3]  ( .D(n469), .CLK(clk), .Q(n2707), .QBAR(
        n2100) );
  DFF_E \coeff_internal_reg[33][3]  ( .D(n477), .CLK(clk), .Q(n2700), .QBAR(
        n2098) );
  DFF_E \coeff_internal_reg[32][3]  ( .D(n485), .CLK(clk), .Q(n2692), .QBAR(
        n2096) );
  DFF_E \coeff_internal_reg[31][3]  ( .D(n493), .CLK(clk), .Q(n2685), .QBAR(
        n2094) );
  DFF_E \coeff_internal_reg[15][3]  ( .D(n621), .CLK(clk), .Q(n2572), .QBAR(
        n2092) );
  DFF_E \coeff_internal_reg[14][3]  ( .D(n629), .CLK(clk), .Q(n2566), .QBAR(
        n2090) );
  DFF_E \coeff_internal_reg[13][3]  ( .D(n637), .CLK(clk), .Q(n2558), .QBAR(
        n2088) );
  DFF_E \coeff_internal_reg[12][3]  ( .D(n645), .CLK(clk), .Q(n2551), .QBAR(
        n2086) );
  DFF_E \coeff_internal_reg[11][3]  ( .D(n653), .CLK(clk), .Q(n2543), .QBAR(
        n2084) );
  DFF_E \coeff_internal_reg[10][3]  ( .D(n661), .CLK(clk), .Q(n2536), .QBAR(
        n2082) );
  DFF_E \coeff_internal_reg[9][3]  ( .D(n669), .CLK(clk), .Q(n2528), .QBAR(
        n2080) );
  DFF_E \coeff_internal_reg[8][3]  ( .D(n677), .CLK(clk), .Q(n2521), .QBAR(
        n2078) );
  DFF_E \coeff_internal_reg[7][3]  ( .D(n685), .CLK(clk), .Q(n2513), .QBAR(
        n2076) );
  DFF_E \coeff_internal_reg[6][3]  ( .D(n693), .CLK(clk), .Q(n2506), .QBAR(
        n2074) );
  DFF_E \coeff_internal_reg[5][3]  ( .D(n701), .CLK(clk), .Q(n2498), .QBAR(
        n2072) );
  DFF_E \coeff_internal_reg[4][3]  ( .D(n709), .CLK(clk), .Q(n2491), .QBAR(
        n2070) );
  DFF_E \coeff_internal_reg[3][3]  ( .D(n717), .CLK(clk), .Q(n2483), .QBAR(
        n2068) );
  DFF_E \coeff_internal_reg[2][3]  ( .D(n725), .CLK(clk), .Q(n2476), .QBAR(
        n2066) );
  DFF_E \coeff_internal_reg[1][3]  ( .D(n733), .CLK(clk), .Q(n2468), .QBAR(
        n2064) );
  DFF_E \coeff_internal_reg[0][3]  ( .D(n741), .CLK(clk), .Q(n2461), .QBAR(
        n2062) );
  DFF_E \coeff_internal_reg[63][0]  ( .D(n234), .CLK(clk), .Q(n2919), .QBAR(
        n2060) );
  DFF_E \coeff_internal_reg[44][0]  ( .D(n386), .CLK(clk), .QBAR(n2058) );
  DFF_E \coeff_internal_reg[31][0]  ( .D(n490), .CLK(clk), .Q(n2688), .QBAR(
        n2056) );
  DFF_E \coeff_internal_reg[15][0]  ( .D(n618), .CLK(clk), .Q(n2575), .QBAR(
        n2054) );
  DFF_E \coeff_internal_reg[63][5]  ( .D(n239), .CLK(clk), .Q(n2914), .QBAR(
        n2052) );
  DFF_E \coeff_internal_reg[47][5]  ( .D(n367), .CLK(clk), .QBAR(n2050) );
  DFF_E \coeff_internal_reg[46][5]  ( .D(n375), .CLK(clk), .Q(n2794), .QBAR(
        n2048) );
  DFF_E \coeff_internal_reg[44][5]  ( .D(n391), .CLK(clk), .QBAR(n2046) );
  DFF_E \coeff_internal_reg[43][5]  ( .D(n399), .CLK(clk), .Q(n2774), .QBAR(
        n2044) );
  DFF_E \coeff_internal_reg[42][5]  ( .D(n407), .CLK(clk), .QBAR(n2042) );
  DFF_E \coeff_internal_reg[41][5]  ( .D(n415), .CLK(clk), .Q(n2759), .QBAR(
        n2040) );
  DFF_E \coeff_internal_reg[40][5]  ( .D(n423), .CLK(clk), .Q(n2751), .QBAR(
        n2038) );
  DFF_E \coeff_internal_reg[39][5]  ( .D(n431), .CLK(clk), .Q(n2743), .QBAR(
        n2036) );
  DFF_E \coeff_internal_reg[38][5]  ( .D(n439), .CLK(clk), .QBAR(n2034) );
  DFF_E \coeff_internal_reg[37][5]  ( .D(n447), .CLK(clk), .Q(n2728), .QBAR(
        n2032) );
  DFF_E \coeff_internal_reg[36][5]  ( .D(n455), .CLK(clk), .QBAR(n2030) );
  DFF_E \coeff_internal_reg[35][5]  ( .D(n463), .CLK(clk), .Q(n2713), .QBAR(
        n2028) );
  DFF_E \coeff_internal_reg[34][5]  ( .D(n471), .CLK(clk), .QBAR(n2026) );
  DFF_E \coeff_internal_reg[33][5]  ( .D(n479), .CLK(clk), .Q(n2698), .QBAR(
        n2024) );
  DFF_E \coeff_internal_reg[32][5]  ( .D(n487), .CLK(clk), .QBAR(n2022) );
  DFF_E \coeff_internal_reg[31][5]  ( .D(n495), .CLK(clk), .Q(n2683), .QBAR(
        n2020) );
  DFF_E \coeff_internal_reg[15][5]  ( .D(n623), .CLK(clk), .Q(n2570), .QBAR(
        n2018) );
  DFF_E \coeff_internal_reg[14][5]  ( .D(n631), .CLK(clk), .Q(n2564), .QBAR(
        n2016) );
  DFF_E \coeff_internal_reg[13][5]  ( .D(n639), .CLK(clk), .QBAR(n2014) );
  DFF_E \coeff_internal_reg[12][5]  ( .D(n647), .CLK(clk), .Q(n2549), .QBAR(
        n2012) );
  DFF_E \coeff_internal_reg[11][5]  ( .D(n655), .CLK(clk), .QBAR(n2010) );
  DFF_E \coeff_internal_reg[10][5]  ( .D(n663), .CLK(clk), .Q(n2534), .QBAR(
        n2008) );
  DFF_E \coeff_internal_reg[9][5]  ( .D(n671), .CLK(clk), .QBAR(n2006) );
  DFF_E \coeff_internal_reg[8][5]  ( .D(n679), .CLK(clk), .Q(n2519), .QBAR(
        n2004) );
  DFF_E \coeff_internal_reg[7][5]  ( .D(n687), .CLK(clk), .QBAR(n2002) );
  DFF_E \coeff_internal_reg[6][5]  ( .D(n695), .CLK(clk), .Q(n2504), .QBAR(
        n2000) );
  DFF_E \coeff_internal_reg[5][5]  ( .D(n703), .CLK(clk), .QBAR(n1998) );
  DFF_E \coeff_internal_reg[4][5]  ( .D(n711), .CLK(clk), .Q(n2489), .QBAR(
        n1996) );
  DFF_E \coeff_internal_reg[3][5]  ( .D(n719), .CLK(clk), .QBAR(n1994) );
  DFF_E \coeff_internal_reg[2][5]  ( .D(n727), .CLK(clk), .Q(n2474), .QBAR(
        n1992) );
  DFF_E \coeff_internal_reg[1][5]  ( .D(n735), .CLK(clk), .QBAR(n1990) );
  DFF_E \coeff_internal_reg[0][5]  ( .D(n743), .CLK(clk), .Q(n2459), .QBAR(
        n1988) );
  DFF_E \coeff_internal_reg[63][1]  ( .D(n235), .CLK(clk), .Q(n2918), .QBAR(
        n1986) );
  DFF_E \coeff_internal_reg[44][1]  ( .D(n387), .CLK(clk), .QBAR(n1984) );
  DFF_E \coeff_internal_reg[31][1]  ( .D(n491), .CLK(clk), .Q(n2687), .QBAR(
        n1982) );
  DFF_E \coeff_internal_reg[15][1]  ( .D(n619), .CLK(clk), .Q(n2574), .QBAR(
        n1980) );
  DFF_E \coeff_internal_reg[44][2]  ( .D(n388), .CLK(clk), .QBAR(n1978) );
  DFF_E \coeff_internal_reg[31][2]  ( .D(n492), .CLK(clk), .Q(n2686), .QBAR(
        n1976) );
  DFF_E \coeff_internal_reg[70][7]  ( .D(n185), .CLK(clk), .Q(n2947), .QBAR(
        n1960) );
  DFF_E \coeff_internal_reg[47][7]  ( .D(n369), .CLK(clk), .Q(n2800), .QBAR(
        n1958) );
  DFF_E \coeff_internal_reg[46][7]  ( .D(n377), .CLK(clk), .Q(n2792), .QBAR(
        n1956) );
  DFF_E \coeff_internal_reg[45][7]  ( .D(n385), .CLK(clk), .Q(n2784), .QBAR(
        n1954) );
  DFF_E \coeff_internal_reg[44][7]  ( .D(n393), .CLK(clk), .Q(n2780), .QBAR(
        n1952) );
  DFF_E \coeff_internal_reg[43][7]  ( .D(n401), .CLK(clk), .Q(n2772), .QBAR(
        n1950) );
  DFF_E \coeff_internal_reg[42][7]  ( .D(n409), .CLK(clk), .Q(n2765), .QBAR(
        n1948) );
  DFF_E \coeff_internal_reg[41][7]  ( .D(n417), .CLK(clk), .Q(n2757), .QBAR(
        n1946) );
  DFF_E \coeff_internal_reg[40][7]  ( .D(n425), .CLK(clk), .Q(n2749), .QBAR(
        n1944) );
  DFF_E \coeff_internal_reg[39][7]  ( .D(n433), .CLK(clk), .Q(n2741), .QBAR(
        n1942) );
  DFF_E \coeff_internal_reg[38][7]  ( .D(n441), .CLK(clk), .Q(n2734), .QBAR(
        n1940) );
  DFF_E \coeff_internal_reg[37][7]  ( .D(n449), .CLK(clk), .Q(n2726), .QBAR(
        n1938) );
  DFF_E \coeff_internal_reg[36][7]  ( .D(n457), .CLK(clk), .Q(n2719), .QBAR(
        n1936) );
  DFF_E \coeff_internal_reg[35][7]  ( .D(n465), .CLK(clk), .Q(n2711), .QBAR(
        n1934) );
  DFF_E \coeff_internal_reg[34][7]  ( .D(n473), .CLK(clk), .Q(n2704), .QBAR(
        n1932) );
  DFF_E \coeff_internal_reg[33][7]  ( .D(n481), .CLK(clk), .Q(n2696), .QBAR(
        n1930) );
  DFF_E \coeff_internal_reg[32][7]  ( .D(n489), .CLK(clk), .Q(n2689), .QBAR(
        n1928) );
  DFF_E \coeff_internal_reg[14][7]  ( .D(n633), .CLK(clk), .Q(n2562), .QBAR(
        n1926) );
  DFF_E \coeff_internal_reg[13][7]  ( .D(n641), .CLK(clk), .Q(n2555), .QBAR(
        n1924) );
  DFF_E \coeff_internal_reg[12][7]  ( .D(n649), .CLK(clk), .Q(n2547), .QBAR(
        n1922) );
  DFF_E \coeff_internal_reg[11][7]  ( .D(n657), .CLK(clk), .Q(n2540), .QBAR(
        n1920) );
  DFF_E \coeff_internal_reg[10][7]  ( .D(n665), .CLK(clk), .Q(n2532), .QBAR(
        n1918) );
  DFF_E \coeff_internal_reg[9][7]  ( .D(n673), .CLK(clk), .Q(n2525), .QBAR(
        n1916) );
  DFF_E \coeff_internal_reg[8][7]  ( .D(n681), .CLK(clk), .Q(n2517), .QBAR(
        n1914) );
  DFF_E \coeff_internal_reg[7][7]  ( .D(n689), .CLK(clk), .Q(n2510), .QBAR(
        n1912) );
  DFF_E \coeff_internal_reg[6][7]  ( .D(n697), .CLK(clk), .Q(n2502), .QBAR(
        n1910) );
  DFF_E \coeff_internal_reg[5][7]  ( .D(n705), .CLK(clk), .Q(n2495), .QBAR(
        n1908) );
  DFF_E \coeff_internal_reg[4][7]  ( .D(n713), .CLK(clk), .Q(n2487), .QBAR(
        n1906) );
  DFF_E \coeff_internal_reg[3][7]  ( .D(n721), .CLK(clk), .Q(n2480), .QBAR(
        n1904) );
  DFF_E \coeff_internal_reg[2][7]  ( .D(n729), .CLK(clk), .Q(n2472), .QBAR(
        n1902) );
  DFF_E \coeff_internal_reg[1][7]  ( .D(n737), .CLK(clk), .Q(n2465), .QBAR(
        n1900) );
  DFF_E \coeff_internal_reg[0][7]  ( .D(n745), .CLK(clk), .Q(n2457), .QBAR(
        n1898) );
  DFF_E \coeff_internal_reg[45][4]  ( .D(n382), .CLK(clk), .Q(n2787), .QBAR(
        n1896) );
  DFF_E \coeff_internal_reg[45][3]  ( .D(n381), .CLK(clk), .Q(n2788), .QBAR(
        n1894) );
  DFF_E \coeff_internal_reg[45][5]  ( .D(n383), .CLK(clk), .Q(n2786), .QBAR(
        n1892) );
  DFF_E \coeff_internal_reg[45][1]  ( .D(n379), .CLK(clk), .Q(n2790), .QBAR(
        n1890) );
  DFF_E \coeff_internal_reg[40][6]  ( .D(n424), .CLK(clk), .Q(n2750), .QBAR(
        n1888) );
  DFF_E \coeff_internal_reg[70][4]  ( .D(n182), .CLK(clk), .Q(n2950), .QBAR(
        n1886) );
  DFF_E \coeff_internal_reg[64][4]  ( .D(n230), .CLK(clk), .Q(n2923), .QBAR(
        n1884) );
  DFF_E \coeff_internal_reg[62][4]  ( .D(n246), .CLK(clk), .Q(n2908), .QBAR(
        n1882) );
  DFF_E \coeff_internal_reg[61][4]  ( .D(n254), .CLK(clk), .Q(n2901), .QBAR(
        n1880) );
  DFF_E \coeff_internal_reg[60][4]  ( .D(n262), .CLK(clk), .Q(n2894), .QBAR(
        n1878) );
  DFF_E \coeff_internal_reg[59][4]  ( .D(n270), .CLK(clk), .Q(n2887), .QBAR(
        n1876) );
  DFF_E \coeff_internal_reg[58][4]  ( .D(n278), .CLK(clk), .Q(n2880), .QBAR(
        n1874) );
  DFF_E \coeff_internal_reg[57][4]  ( .D(n286), .CLK(clk), .Q(n2873), .QBAR(
        n1872) );
  DFF_E \coeff_internal_reg[56][4]  ( .D(n294), .CLK(clk), .Q(n2866), .QBAR(
        n1870) );
  DFF_E \coeff_internal_reg[55][4]  ( .D(n302), .CLK(clk), .Q(n2859), .QBAR(
        n1868) );
  DFF_E \coeff_internal_reg[54][4]  ( .D(n310), .CLK(clk), .Q(n2852), .QBAR(
        n1866) );
  DFF_E \coeff_internal_reg[53][4]  ( .D(n318), .CLK(clk), .Q(n2845), .QBAR(
        n1864) );
  DFF_E \coeff_internal_reg[52][4]  ( .D(n326), .CLK(clk), .Q(n2838), .QBAR(
        n1862) );
  DFF_E \coeff_internal_reg[50][4]  ( .D(n342), .CLK(clk), .Q(n2824), .QBAR(
        n1860) );
  DFF_E \coeff_internal_reg[49][4]  ( .D(n350), .CLK(clk), .Q(n2817), .QBAR(
        n1858) );
  DFF_E \coeff_internal_reg[48][4]  ( .D(n358), .CLK(clk), .Q(n2810), .QBAR(
        n1856) );
  DFF_E \coeff_internal_reg[30][4]  ( .D(n502), .CLK(clk), .Q(n2677), .QBAR(
        n1854) );
  DFF_E \coeff_internal_reg[29][4]  ( .D(n510), .CLK(clk), .Q(n2670), .QBAR(
        n1852) );
  DFF_E \coeff_internal_reg[28][4]  ( .D(n518), .CLK(clk), .Q(n2663), .QBAR(
        n1850) );
  DFF_E \coeff_internal_reg[27][4]  ( .D(n526), .CLK(clk), .Q(n2656), .QBAR(
        n1848) );
  DFF_E \coeff_internal_reg[26][4]  ( .D(n534), .CLK(clk), .Q(n2649), .QBAR(
        n1846) );
  DFF_E \coeff_internal_reg[25][4]  ( .D(n542), .CLK(clk), .Q(n2642), .QBAR(
        n1844) );
  DFF_E \coeff_internal_reg[24][4]  ( .D(n550), .CLK(clk), .Q(n2635), .QBAR(
        n1842) );
  DFF_E \coeff_internal_reg[23][4]  ( .D(n558), .CLK(clk), .Q(n2628), .QBAR(
        n1840) );
  DFF_E \coeff_internal_reg[22][4]  ( .D(n566), .CLK(clk), .Q(n2621), .QBAR(
        n1838) );
  DFF_E \coeff_internal_reg[21][4]  ( .D(n574), .CLK(clk), .Q(n2614), .QBAR(
        n1836) );
  DFF_E \coeff_internal_reg[20][4]  ( .D(n582), .CLK(clk), .Q(n2607), .QBAR(
        n1834) );
  DFF_E \coeff_internal_reg[19][4]  ( .D(n590), .CLK(clk), .Q(n2600), .QBAR(
        n1832) );
  DFF_E \coeff_internal_reg[18][4]  ( .D(n598), .CLK(clk), .Q(n2593), .QBAR(
        n1830) );
  DFF_E \coeff_internal_reg[17][4]  ( .D(n606), .CLK(clk), .Q(n2586), .QBAR(
        n1828) );
  DFF_E \coeff_internal_reg[16][4]  ( .D(n614), .CLK(clk), .Q(n2579), .QBAR(
        n1826) );
  DFF_E \coeff_internal_reg[70][3]  ( .D(n181), .CLK(clk), .Q(n2951), .QBAR(
        n1824) );
  DFF_E \coeff_internal_reg[64][3]  ( .D(n229), .CLK(clk), .Q(n2924), .QBAR(
        n1822) );
  DFF_E \coeff_internal_reg[62][3]  ( .D(n245), .CLK(clk), .Q(n2909), .QBAR(
        n1820) );
  DFF_E \coeff_internal_reg[61][3]  ( .D(n253), .CLK(clk), .Q(n2902), .QBAR(
        n1818) );
  DFF_E \coeff_internal_reg[60][3]  ( .D(n261), .CLK(clk), .Q(n2895), .QBAR(
        n1816) );
  DFF_E \coeff_internal_reg[59][3]  ( .D(n269), .CLK(clk), .Q(n2888), .QBAR(
        n1814) );
  DFF_E \coeff_internal_reg[58][3]  ( .D(n277), .CLK(clk), .Q(n2881), .QBAR(
        n1812) );
  DFF_E \coeff_internal_reg[57][3]  ( .D(n285), .CLK(clk), .Q(n2874), .QBAR(
        n1810) );
  DFF_E \coeff_internal_reg[56][3]  ( .D(n293), .CLK(clk), .Q(n2867), .QBAR(
        n1808) );
  DFF_E \coeff_internal_reg[55][3]  ( .D(n301), .CLK(clk), .Q(n2860), .QBAR(
        n1806) );
  DFF_E \coeff_internal_reg[54][3]  ( .D(n309), .CLK(clk), .Q(n2853), .QBAR(
        n1804) );
  DFF_E \coeff_internal_reg[53][3]  ( .D(n317), .CLK(clk), .Q(n2846), .QBAR(
        n1802) );
  DFF_E \coeff_internal_reg[52][3]  ( .D(n325), .CLK(clk), .Q(n2839), .QBAR(
        n1800) );
  DFF_E \coeff_internal_reg[51][3]  ( .D(n333), .CLK(clk), .Q(n2832), .QBAR(
        n1798) );
  DFF_E \coeff_internal_reg[50][3]  ( .D(n341), .CLK(clk), .Q(n2825), .QBAR(
        n1796) );
  DFF_E \coeff_internal_reg[49][3]  ( .D(n349), .CLK(clk), .Q(n2818), .QBAR(
        n1794) );
  DFF_E \coeff_internal_reg[48][3]  ( .D(n357), .CLK(clk), .Q(n2811), .QBAR(
        n1792) );
  DFF_E \coeff_internal_reg[40][3]  ( .D(n421), .CLK(clk), .Q(n2753), .QBAR(
        n1790) );
  DFF_E \coeff_internal_reg[30][3]  ( .D(n501), .CLK(clk), .Q(n2678), .QBAR(
        n1788) );
  DFF_E \coeff_internal_reg[29][3]  ( .D(n509), .CLK(clk), .Q(n2671), .QBAR(
        n1786) );
  DFF_E \coeff_internal_reg[28][3]  ( .D(n517), .CLK(clk), .Q(n2664), .QBAR(
        n1784) );
  DFF_E \coeff_internal_reg[27][3]  ( .D(n525), .CLK(clk), .Q(n2657), .QBAR(
        n1782) );
  DFF_E \coeff_internal_reg[26][3]  ( .D(n533), .CLK(clk), .Q(n2650), .QBAR(
        n1780) );
  DFF_E \coeff_internal_reg[25][3]  ( .D(n541), .CLK(clk), .Q(n2643), .QBAR(
        n1778) );
  DFF_E \coeff_internal_reg[24][3]  ( .D(n549), .CLK(clk), .Q(n2636), .QBAR(
        n1776) );
  DFF_E \coeff_internal_reg[23][3]  ( .D(n557), .CLK(clk), .Q(n2629), .QBAR(
        n1774) );
  DFF_E \coeff_internal_reg[22][3]  ( .D(n565), .CLK(clk), .Q(n2622), .QBAR(
        n1772) );
  DFF_E \coeff_internal_reg[21][3]  ( .D(n573), .CLK(clk), .Q(n2615), .QBAR(
        n1770) );
  DFF_E \coeff_internal_reg[20][3]  ( .D(n581), .CLK(clk), .Q(n2608), .QBAR(
        n1768) );
  DFF_E \coeff_internal_reg[19][3]  ( .D(n589), .CLK(clk), .Q(n2601), .QBAR(
        n1766) );
  DFF_E \coeff_internal_reg[18][3]  ( .D(n597), .CLK(clk), .Q(n2594), .QBAR(
        n1764) );
  DFF_E \coeff_internal_reg[17][3]  ( .D(n605), .CLK(clk), .Q(n2587), .QBAR(
        n1762) );
  DFF_E \coeff_internal_reg[16][3]  ( .D(n613), .CLK(clk), .Q(n2580), .QBAR(
        n1760) );
  DFF_E \coeff_internal_reg[70][0]  ( .D(n178), .CLK(clk), .Q(n2954), .QBAR(
        n1758) );
  DFF_E \coeff_internal_reg[47][0]  ( .D(n362), .CLK(clk), .Q(n2806), .QBAR(
        n1756) );
  DFF_E \coeff_internal_reg[46][0]  ( .D(n370), .CLK(clk), .Q(n2799), .QBAR(
        n1754) );
  DFF_E \coeff_internal_reg[45][0]  ( .D(n378), .CLK(clk), .Q(n2791), .QBAR(
        n1752) );
  DFF_E \coeff_internal_reg[43][0]  ( .D(n394), .CLK(clk), .Q(n2779), .QBAR(
        n1750) );
  DFF_E \coeff_internal_reg[42][0]  ( .D(n402), .CLK(clk), .Q(n2771), .QBAR(
        n1748) );
  DFF_E \coeff_internal_reg[41][0]  ( .D(n410), .CLK(clk), .Q(n2764), .QBAR(
        n1746) );
  DFF_E \coeff_internal_reg[40][0]  ( .D(n418), .CLK(clk), .Q(n2756), .QBAR(
        n1744) );
  DFF_E \coeff_internal_reg[39][0]  ( .D(n426), .CLK(clk), .Q(n2748), .QBAR(
        n1742) );
  DFF_E \coeff_internal_reg[38][0]  ( .D(n434), .CLK(clk), .Q(n2740), .QBAR(
        n1740) );
  DFF_E \coeff_internal_reg[37][0]  ( .D(n442), .CLK(clk), .Q(n2733), .QBAR(
        n1738) );
  DFF_E \coeff_internal_reg[36][0]  ( .D(n450), .CLK(clk), .Q(n2725), .QBAR(
        n1736) );
  DFF_E \coeff_internal_reg[35][0]  ( .D(n458), .CLK(clk), .Q(n2718), .QBAR(
        n1734) );
  DFF_E \coeff_internal_reg[34][0]  ( .D(n466), .CLK(clk), .Q(n2710), .QBAR(
        n1732) );
  DFF_E \coeff_internal_reg[33][0]  ( .D(n474), .CLK(clk), .Q(n2703), .QBAR(
        n1730) );
  DFF_E \coeff_internal_reg[32][0]  ( .D(n482), .CLK(clk), .Q(n2695), .QBAR(
        n1728) );
  DFF_E \coeff_internal_reg[14][0]  ( .D(n626), .CLK(clk), .Q(n2569), .QBAR(
        n1726) );
  DFF_E \coeff_internal_reg[13][0]  ( .D(n634), .CLK(clk), .Q(n2561), .QBAR(
        n1724) );
  DFF_E \coeff_internal_reg[12][0]  ( .D(n642), .CLK(clk), .Q(n2554), .QBAR(
        n1722) );
  DFF_E \coeff_internal_reg[11][0]  ( .D(n650), .CLK(clk), .Q(n2546), .QBAR(
        n1720) );
  DFF_E \coeff_internal_reg[10][0]  ( .D(n658), .CLK(clk), .Q(n2539), .QBAR(
        n1718) );
  DFF_E \coeff_internal_reg[9][0]  ( .D(n666), .CLK(clk), .Q(n2531), .QBAR(
        n1716) );
  DFF_E \coeff_internal_reg[8][0]  ( .D(n674), .CLK(clk), .Q(n2524), .QBAR(
        n1714) );
  DFF_E \coeff_internal_reg[7][0]  ( .D(n682), .CLK(clk), .Q(n2516), .QBAR(
        n1712) );
  DFF_E \coeff_internal_reg[6][0]  ( .D(n690), .CLK(clk), .Q(n2509), .QBAR(
        n1710) );
  DFF_E \coeff_internal_reg[5][0]  ( .D(n698), .CLK(clk), .Q(n2501), .QBAR(
        n1708) );
  DFF_E \coeff_internal_reg[4][0]  ( .D(n706), .CLK(clk), .Q(n2494), .QBAR(
        n1706) );
  DFF_E \coeff_internal_reg[3][0]  ( .D(n714), .CLK(clk), .Q(n2486), .QBAR(
        n1704) );
  DFF_E \coeff_internal_reg[2][0]  ( .D(n722), .CLK(clk), .Q(n2479), .QBAR(
        n1702) );
  DFF_E \coeff_internal_reg[1][0]  ( .D(n730), .CLK(clk), .Q(n2471), .QBAR(
        n1700) );
  DFF_E \coeff_internal_reg[0][0]  ( .D(n738), .CLK(clk), .Q(n2464), .QBAR(
        n1698) );
  DFF_E \coeff_internal_reg[70][5]  ( .D(n183), .CLK(clk), .Q(n2949), .QBAR(
        n1696) );
  DFF_E \coeff_internal_reg[64][5]  ( .D(n231), .CLK(clk), .Q(n2922), .QBAR(
        n1694) );
  DFF_E \coeff_internal_reg[62][5]  ( .D(n247), .CLK(clk), .Q(n2907), .QBAR(
        n1692) );
  DFF_E \coeff_internal_reg[61][5]  ( .D(n255), .CLK(clk), .Q(n2900), .QBAR(
        n1690) );
  DFF_E \coeff_internal_reg[60][5]  ( .D(n263), .CLK(clk), .Q(n2893), .QBAR(
        n1688) );
  DFF_E \coeff_internal_reg[59][5]  ( .D(n271), .CLK(clk), .Q(n2886), .QBAR(
        n1686) );
  DFF_E \coeff_internal_reg[58][5]  ( .D(n279), .CLK(clk), .Q(n2879), .QBAR(
        n1684) );
  DFF_E \coeff_internal_reg[56][5]  ( .D(n295), .CLK(clk), .Q(n2865), .QBAR(
        n1682) );
  DFF_E \coeff_internal_reg[55][5]  ( .D(n303), .CLK(clk), .Q(n2858), .QBAR(
        n1680) );
  DFF_E \coeff_internal_reg[54][5]  ( .D(n311), .CLK(clk), .Q(n2851), .QBAR(
        n1678) );
  DFF_E \coeff_internal_reg[53][5]  ( .D(n319), .CLK(clk), .Q(n2844), .QBAR(
        n1676) );
  DFF_E \coeff_internal_reg[52][5]  ( .D(n327), .CLK(clk), .Q(n2837), .QBAR(
        n1674) );
  DFF_E \coeff_internal_reg[51][5]  ( .D(n335), .CLK(clk), .Q(n2830), .QBAR(
        n1672) );
  DFF_E \coeff_internal_reg[49][5]  ( .D(n351), .CLK(clk), .Q(n2816), .QBAR(
        n1670) );
  DFF_E \coeff_internal_reg[48][5]  ( .D(n359), .CLK(clk), .Q(n2809), .QBAR(
        n1668) );
  DFF_E \coeff_internal_reg[30][5]  ( .D(n503), .CLK(clk), .Q(n2676), .QBAR(
        n1666) );
  DFF_E \coeff_internal_reg[29][5]  ( .D(n511), .CLK(clk), .Q(n2669), .QBAR(
        n1664) );
  DFF_E \coeff_internal_reg[28][5]  ( .D(n519), .CLK(clk), .Q(n2662), .QBAR(
        n1662) );
  DFF_E \coeff_internal_reg[27][5]  ( .D(n527), .CLK(clk), .Q(n2655), .QBAR(
        n1660) );
  DFF_E \coeff_internal_reg[26][5]  ( .D(n535), .CLK(clk), .Q(n2648), .QBAR(
        n1658) );
  DFF_E \coeff_internal_reg[25][5]  ( .D(n543), .CLK(clk), .Q(n2641), .QBAR(
        n1656) );
  DFF_E \coeff_internal_reg[24][5]  ( .D(n551), .CLK(clk), .Q(n2634), .QBAR(
        n1654) );
  DFF_E \coeff_internal_reg[23][5]  ( .D(n559), .CLK(clk), .Q(n2627), .QBAR(
        n1652) );
  DFF_E \coeff_internal_reg[22][5]  ( .D(n567), .CLK(clk), .Q(n2620), .QBAR(
        n1650) );
  DFF_E \coeff_internal_reg[21][5]  ( .D(n575), .CLK(clk), .Q(n2613), .QBAR(
        n1648) );
  DFF_E \coeff_internal_reg[20][5]  ( .D(n583), .CLK(clk), .Q(n2606), .QBAR(
        n1646) );
  DFF_E \coeff_internal_reg[19][5]  ( .D(n591), .CLK(clk), .Q(n2599), .QBAR(
        n1644) );
  DFF_E \coeff_internal_reg[18][5]  ( .D(n599), .CLK(clk), .Q(n2592), .QBAR(
        n1642) );
  DFF_E \coeff_internal_reg[17][5]  ( .D(n607), .CLK(clk), .Q(n2585), .QBAR(
        n1640) );
  DFF_E \coeff_internal_reg[16][5]  ( .D(n615), .CLK(clk), .Q(n2578), .QBAR(
        n1638) );
  DFF_E \coeff_internal_reg[70][1]  ( .D(n179), .CLK(clk), .Q(n2953), .QBAR(
        n1636) );
  DFF_E \coeff_internal_reg[47][1]  ( .D(n363), .CLK(clk), .Q(n2805), .QBAR(
        n1634) );
  DFF_E \coeff_internal_reg[46][1]  ( .D(n371), .CLK(clk), .Q(n2798), .QBAR(
        n1632) );
  DFF_E \coeff_internal_reg[43][1]  ( .D(n395), .CLK(clk), .Q(n2778), .QBAR(
        n1630) );
  DFF_E \coeff_internal_reg[42][1]  ( .D(n403), .CLK(clk), .Q(n2770), .QBAR(
        n1628) );
  DFF_E \coeff_internal_reg[41][1]  ( .D(n411), .CLK(clk), .Q(n2763), .QBAR(
        n1626) );
  DFF_E \coeff_internal_reg[40][1]  ( .D(n419), .CLK(clk), .Q(n2755), .QBAR(
        n1624) );
  DFF_E \coeff_internal_reg[39][1]  ( .D(n427), .CLK(clk), .Q(n2747), .QBAR(
        n1622) );
  DFF_E \coeff_internal_reg[38][1]  ( .D(n435), .CLK(clk), .Q(n2739), .QBAR(
        n1620) );
  DFF_E \coeff_internal_reg[37][1]  ( .D(n443), .CLK(clk), .Q(n2732), .QBAR(
        n1618) );
  DFF_E \coeff_internal_reg[36][1]  ( .D(n451), .CLK(clk), .Q(n2724), .QBAR(
        n1616) );
  DFF_E \coeff_internal_reg[35][1]  ( .D(n459), .CLK(clk), .Q(n2717), .QBAR(
        n1614) );
  DFF_E \coeff_internal_reg[34][1]  ( .D(n467), .CLK(clk), .Q(n2709), .QBAR(
        n1612) );
  DFF_E \coeff_internal_reg[33][1]  ( .D(n475), .CLK(clk), .Q(n2702), .QBAR(
        n1610) );
  DFF_E \coeff_internal_reg[32][1]  ( .D(n483), .CLK(clk), .Q(n2694), .QBAR(
        n1608) );
  DFF_E \coeff_internal_reg[14][1]  ( .D(n627), .CLK(clk), .Q(n2568), .QBAR(
        n1606) );
  DFF_E \coeff_internal_reg[13][1]  ( .D(n635), .CLK(clk), .Q(n2560), .QBAR(
        n1604) );
  DFF_E \coeff_internal_reg[12][1]  ( .D(n643), .CLK(clk), .Q(n2553), .QBAR(
        n1602) );
  DFF_E \coeff_internal_reg[11][1]  ( .D(n651), .CLK(clk), .Q(n2545), .QBAR(
        n1600) );
  DFF_E \coeff_internal_reg[10][1]  ( .D(n659), .CLK(clk), .Q(n2538), .QBAR(
        n1598) );
  DFF_E \coeff_internal_reg[9][1]  ( .D(n667), .CLK(clk), .Q(n2530), .QBAR(
        n1596) );
  DFF_E \coeff_internal_reg[8][1]  ( .D(n675), .CLK(clk), .Q(n2523), .QBAR(
        n1594) );
  DFF_E \coeff_internal_reg[7][1]  ( .D(n683), .CLK(clk), .Q(n2515), .QBAR(
        n1592) );
  DFF_E \coeff_internal_reg[6][1]  ( .D(n691), .CLK(clk), .Q(n2508), .QBAR(
        n1590) );
  DFF_E \coeff_internal_reg[5][1]  ( .D(n699), .CLK(clk), .Q(n2500), .QBAR(
        n1588) );
  DFF_E \coeff_internal_reg[4][1]  ( .D(n707), .CLK(clk), .Q(n2493), .QBAR(
        n1586) );
  DFF_E \coeff_internal_reg[3][1]  ( .D(n715), .CLK(clk), .Q(n2485), .QBAR(
        n1584) );
  DFF_E \coeff_internal_reg[2][1]  ( .D(n723), .CLK(clk), .Q(n2478), .QBAR(
        n1582) );
  DFF_E \coeff_internal_reg[1][1]  ( .D(n731), .CLK(clk), .Q(n2470), .QBAR(
        n1580) );
  DFF_E \coeff_internal_reg[0][1]  ( .D(n739), .CLK(clk), .Q(n2463), .QBAR(
        n1578) );
  DFF_E \coeff_internal_reg[70][6]  ( .D(n184), .CLK(clk), .Q(n2948), .QBAR(
        n1576) );
  DFF_E \coeff_internal_reg[47][6]  ( .D(n368), .CLK(clk), .Q(n2801), .QBAR(
        n1574) );
  DFF_E \coeff_internal_reg[46][6]  ( .D(n376), .CLK(clk), .Q(n2793), .QBAR(
        n1572) );
  DFF_E \coeff_internal_reg[45][6]  ( .D(n384), .CLK(clk), .Q(n2785), .QBAR(
        n1570) );
  DFF_E \coeff_internal_reg[44][6]  ( .D(n392), .CLK(clk), .Q(n2781), .QBAR(
        n1568) );
  DFF_E \coeff_internal_reg[43][6]  ( .D(n400), .CLK(clk), .Q(n2773), .QBAR(
        n1566) );
  DFF_E \coeff_internal_reg[42][6]  ( .D(n408), .CLK(clk), .Q(n2766), .QBAR(
        n1564) );
  DFF_E \coeff_internal_reg[41][6]  ( .D(n416), .CLK(clk), .Q(n2758), .QBAR(
        n1562) );
  DFF_E \coeff_internal_reg[39][6]  ( .D(n432), .CLK(clk), .Q(n2742), .QBAR(
        n1560) );
  DFF_E \coeff_internal_reg[38][6]  ( .D(n440), .CLK(clk), .Q(n2735), .QBAR(
        n1558) );
  DFF_E \coeff_internal_reg[37][6]  ( .D(n448), .CLK(clk), .Q(n2727), .QBAR(
        n1556) );
  DFF_E \coeff_internal_reg[36][6]  ( .D(n456), .CLK(clk), .Q(n2720), .QBAR(
        n1554) );
  DFF_E \coeff_internal_reg[35][6]  ( .D(n464), .CLK(clk), .Q(n2712), .QBAR(
        n1552) );
  DFF_E \coeff_internal_reg[34][6]  ( .D(n472), .CLK(clk), .Q(n2705), .QBAR(
        n1550) );
  DFF_E \coeff_internal_reg[33][6]  ( .D(n480), .CLK(clk), .Q(n2697), .QBAR(
        n1548) );
  DFF_E \coeff_internal_reg[32][6]  ( .D(n488), .CLK(clk), .Q(n2690), .QBAR(
        n1546) );
  DFF_E \coeff_internal_reg[14][6]  ( .D(n632), .CLK(clk), .Q(n2563), .QBAR(
        n1544) );
  DFF_E \coeff_internal_reg[13][6]  ( .D(n640), .CLK(clk), .Q(n2556), .QBAR(
        n1542) );
  DFF_E \coeff_internal_reg[12][6]  ( .D(n648), .CLK(clk), .Q(n2548), .QBAR(
        n1540) );
  DFF_E \coeff_internal_reg[11][6]  ( .D(n656), .CLK(clk), .Q(n2541), .QBAR(
        n1538) );
  DFF_E \coeff_internal_reg[10][6]  ( .D(n664), .CLK(clk), .Q(n2533), .QBAR(
        n1536) );
  DFF_E \coeff_internal_reg[9][6]  ( .D(n672), .CLK(clk), .Q(n2526), .QBAR(
        n1534) );
  DFF_E \coeff_internal_reg[8][6]  ( .D(n680), .CLK(clk), .Q(n2518), .QBAR(
        n1532) );
  DFF_E \coeff_internal_reg[7][6]  ( .D(n688), .CLK(clk), .Q(n2511), .QBAR(
        n1530) );
  DFF_E \coeff_internal_reg[6][6]  ( .D(n696), .CLK(clk), .Q(n2503), .QBAR(
        n1528) );
  DFF_E \coeff_internal_reg[5][6]  ( .D(n704), .CLK(clk), .Q(n2496), .QBAR(
        n1526) );
  DFF_E \coeff_internal_reg[4][6]  ( .D(n712), .CLK(clk), .Q(n2488), .QBAR(
        n1524) );
  DFF_E \coeff_internal_reg[3][6]  ( .D(n720), .CLK(clk), .Q(n2481), .QBAR(
        n1522) );
  DFF_E \coeff_internal_reg[2][6]  ( .D(n728), .CLK(clk), .Q(n2473), .QBAR(
        n1520) );
  DFF_E \coeff_internal_reg[1][6]  ( .D(n736), .CLK(clk), .Q(n2466), .QBAR(
        n1518) );
  DFF_E \coeff_internal_reg[0][6]  ( .D(n744), .CLK(clk), .Q(n2458), .QBAR(
        n1516) );
  DFF_E \coeff_internal_reg[69][7]  ( .D(n193), .CLK(clk), .Q(n2939), .QBAR(
        n1512) );
  DFF_E \coeff_internal_reg[64][7]  ( .D(n233), .CLK(clk), .Q(n2920), .QBAR(
        n1510) );
  DFF_E \coeff_internal_reg[63][7]  ( .D(n241), .CLK(clk), .Q(n2912), .QBAR(
        n1508) );
  DFF_E \coeff_internal_reg[62][7]  ( .D(n249), .CLK(clk), .Q(n2905), .QBAR(
        n1506) );
  DFF_E \coeff_internal_reg[61][7]  ( .D(n257), .CLK(clk), .Q(n2898), .QBAR(
        n1504) );
  DFF_E \coeff_internal_reg[60][7]  ( .D(n265), .CLK(clk), .Q(n2891), .QBAR(
        n1502) );
  DFF_E \coeff_internal_reg[59][7]  ( .D(n273), .CLK(clk), .Q(n2884), .QBAR(
        n1500) );
  DFF_E \coeff_internal_reg[58][7]  ( .D(n281), .CLK(clk), .Q(n2877), .QBAR(
        n1498) );
  DFF_E \coeff_internal_reg[57][7]  ( .D(n289), .CLK(clk), .Q(n2870), .QBAR(
        n1496) );
  DFF_E \coeff_internal_reg[56][7]  ( .D(n297), .CLK(clk), .Q(n2863), .QBAR(
        n1494) );
  DFF_E \coeff_internal_reg[55][7]  ( .D(n305), .CLK(clk), .Q(n2856), .QBAR(
        n1492) );
  DFF_E \coeff_internal_reg[54][7]  ( .D(n313), .CLK(clk), .Q(n2849), .QBAR(
        n1490) );
  DFF_E \coeff_internal_reg[53][7]  ( .D(n321), .CLK(clk), .Q(n2842), .QBAR(
        n1488) );
  DFF_E \coeff_internal_reg[52][7]  ( .D(n329), .CLK(clk), .Q(n2835), .QBAR(
        n1486) );
  DFF_E \coeff_internal_reg[51][7]  ( .D(n337), .CLK(clk), .Q(n2828), .QBAR(
        n1484) );
  DFF_E \coeff_internal_reg[50][7]  ( .D(n345), .CLK(clk), .Q(n2821), .QBAR(
        n1482) );
  DFF_E \coeff_internal_reg[49][7]  ( .D(n353), .CLK(clk), .Q(n2814), .QBAR(
        n1480) );
  DFF_E \coeff_internal_reg[48][7]  ( .D(n361), .CLK(clk), .Q(n2807), .QBAR(
        n1478) );
  DFF_E \coeff_internal_reg[31][7]  ( .D(n497), .CLK(clk), .Q(n2681), .QBAR(
        n1476) );
  DFF_E \coeff_internal_reg[30][7]  ( .D(n505), .CLK(clk), .Q(n2674), .QBAR(
        n1474) );
  DFF_E \coeff_internal_reg[29][7]  ( .D(n513), .CLK(clk), .Q(n2667), .QBAR(
        n1472) );
  DFF_E \coeff_internal_reg[28][7]  ( .D(n521), .CLK(clk), .Q(n2660), .QBAR(
        n1470) );
  DFF_E \coeff_internal_reg[27][7]  ( .D(n529), .CLK(clk), .Q(n2653), .QBAR(
        n1468) );
  DFF_E \coeff_internal_reg[26][7]  ( .D(n537), .CLK(clk), .Q(n2646), .QBAR(
        n1466) );
  DFF_E \coeff_internal_reg[25][7]  ( .D(n545), .CLK(clk), .Q(n2639), .QBAR(
        n1464) );
  DFF_E \coeff_internal_reg[24][7]  ( .D(n553), .CLK(clk), .Q(n2632), .QBAR(
        n1462) );
  DFF_E \coeff_internal_reg[23][7]  ( .D(n561), .CLK(clk), .Q(n2625), .QBAR(
        n1460) );
  DFF_E \coeff_internal_reg[22][7]  ( .D(n569), .CLK(clk), .Q(n2618), .QBAR(
        n1458) );
  DFF_E \coeff_internal_reg[21][7]  ( .D(n577), .CLK(clk), .Q(n2611), .QBAR(
        n1456) );
  DFF_E \coeff_internal_reg[20][7]  ( .D(n585), .CLK(clk), .Q(n2604), .QBAR(
        n1454) );
  DFF_E \coeff_internal_reg[19][7]  ( .D(n593), .CLK(clk), .Q(n2597), .QBAR(
        n1452) );
  DFF_E \coeff_internal_reg[18][7]  ( .D(n601), .CLK(clk), .Q(n2590), .QBAR(
        n1450) );
  DFF_E \coeff_internal_reg[17][7]  ( .D(n609), .CLK(clk), .Q(n2583), .QBAR(
        n1448) );
  DFF_E \coeff_internal_reg[16][7]  ( .D(n617), .CLK(clk), .Q(n2576), .QBAR(
        n1446) );
  DFF_E \coeff_internal_reg[70][2]  ( .D(n180), .CLK(clk), .Q(n2952), .QBAR(
        n1440) );
  DFF_E \coeff_internal_reg[47][2]  ( .D(n364), .CLK(clk), .Q(n2804), .QBAR(
        n1438) );
  DFF_E \coeff_internal_reg[46][2]  ( .D(n372), .CLK(clk), .Q(n2797), .QBAR(
        n1436) );
  DFF_E \coeff_internal_reg[45][2]  ( .D(n380), .CLK(clk), .Q(n2789), .QBAR(
        n1434) );
  DFF_E \coeff_internal_reg[40][2]  ( .D(n420), .CLK(clk), .Q(n2754), .QBAR(
        n1432) );
  DFF_E \coeff_internal_reg[34][2]  ( .D(n468), .CLK(clk), .Q(n2708), .QBAR(
        n1430) );
  DFF_E \coeff_internal_reg[51][4]  ( .D(n334), .CLK(clk), .Q(n2831), .QBAR(
        n1428) );
  DFF_E \coeff_internal_reg[64][0]  ( .D(n226), .CLK(clk), .Q(n2926), .QBAR(
        n1426) );
  DFF_E \coeff_internal_reg[62][0]  ( .D(n242), .CLK(clk), .Q(n2911), .QBAR(
        n1424) );
  DFF_E \coeff_internal_reg[61][0]  ( .D(n250), .CLK(clk), .Q(n2904), .QBAR(
        n1422) );
  DFF_E \coeff_internal_reg[60][0]  ( .D(n258), .CLK(clk), .Q(n2897), .QBAR(
        n1420) );
  DFF_E \coeff_internal_reg[59][0]  ( .D(n266), .CLK(clk), .Q(n2890), .QBAR(
        n1418) );
  DFF_E \coeff_internal_reg[58][0]  ( .D(n274), .CLK(clk), .Q(n2883), .QBAR(
        n1416) );
  DFF_E \coeff_internal_reg[57][0]  ( .D(n282), .CLK(clk), .Q(n2876), .QBAR(
        n1414) );
  DFF_E \coeff_internal_reg[56][0]  ( .D(n290), .CLK(clk), .Q(n2869), .QBAR(
        n1412) );
  DFF_E \coeff_internal_reg[55][0]  ( .D(n298), .CLK(clk), .Q(n2862), .QBAR(
        n1410) );
  DFF_E \coeff_internal_reg[54][0]  ( .D(n306), .CLK(clk), .Q(n2855), .QBAR(
        n1408) );
  DFF_E \coeff_internal_reg[53][0]  ( .D(n314), .CLK(clk), .Q(n2848), .QBAR(
        n1406) );
  DFF_E \coeff_internal_reg[52][0]  ( .D(n322), .CLK(clk), .Q(n2841), .QBAR(
        n1404) );
  DFF_E \coeff_internal_reg[51][0]  ( .D(n330), .CLK(clk), .Q(n2834), .QBAR(
        n1402) );
  DFF_E \coeff_internal_reg[50][0]  ( .D(n338), .CLK(clk), .Q(n2827), .QBAR(
        n1400) );
  DFF_E \coeff_internal_reg[49][0]  ( .D(n346), .CLK(clk), .Q(n2820), .QBAR(
        n1398) );
  DFF_E \coeff_internal_reg[48][0]  ( .D(n354), .CLK(clk), .Q(n2813), .QBAR(
        n1396) );
  DFF_E \coeff_internal_reg[30][0]  ( .D(n498), .CLK(clk), .Q(n2680), .QBAR(
        n1394) );
  DFF_E \coeff_internal_reg[29][0]  ( .D(n506), .CLK(clk), .Q(n2673), .QBAR(
        n1392) );
  DFF_E \coeff_internal_reg[28][0]  ( .D(n514), .CLK(clk), .Q(n2666), .QBAR(
        n1390) );
  DFF_E \coeff_internal_reg[27][0]  ( .D(n522), .CLK(clk), .Q(n2659), .QBAR(
        n1388) );
  DFF_E \coeff_internal_reg[26][0]  ( .D(n530), .CLK(clk), .Q(n2652), .QBAR(
        n1386) );
  DFF_E \coeff_internal_reg[25][0]  ( .D(n538), .CLK(clk), .Q(n2645), .QBAR(
        n1384) );
  DFF_E \coeff_internal_reg[24][0]  ( .D(n546), .CLK(clk), .Q(n2638), .QBAR(
        n1382) );
  DFF_E \coeff_internal_reg[23][0]  ( .D(n554), .CLK(clk), .Q(n2631), .QBAR(
        n1380) );
  DFF_E \coeff_internal_reg[22][0]  ( .D(n562), .CLK(clk), .Q(n2624), .QBAR(
        n1378) );
  DFF_E \coeff_internal_reg[21][0]  ( .D(n570), .CLK(clk), .Q(n2617), .QBAR(
        n1376) );
  DFF_E \coeff_internal_reg[20][0]  ( .D(n578), .CLK(clk), .Q(n2610), .QBAR(
        n1374) );
  DFF_E \coeff_internal_reg[19][0]  ( .D(n586), .CLK(clk), .Q(n2603), .QBAR(
        n1372) );
  DFF_E \coeff_internal_reg[18][0]  ( .D(n594), .CLK(clk), .Q(n2596), .QBAR(
        n1370) );
  DFF_E \coeff_internal_reg[17][0]  ( .D(n602), .CLK(clk), .Q(n2589), .QBAR(
        n1368) );
  DFF_E \coeff_internal_reg[16][0]  ( .D(n610), .CLK(clk), .Q(n2582), .QBAR(
        n1366) );
  DFF_E \coeff_internal_reg[57][5]  ( .D(n287), .CLK(clk), .Q(n2872), .QBAR(
        n1364) );
  DFF_E \coeff_internal_reg[50][5]  ( .D(n343), .CLK(clk), .Q(n2823), .QBAR(
        n1362) );
  DFF_E \coeff_internal_reg[69][6]  ( .D(n192), .CLK(clk), .Q(n2940), .QBAR(
        n1360) );
  DFF_E \coeff_internal_reg[64][6]  ( .D(n232), .CLK(clk), .Q(n2921), .QBAR(
        n1358) );
  DFF_E \coeff_internal_reg[63][6]  ( .D(n240), .CLK(clk), .Q(n2913), .QBAR(
        n1356) );
  DFF_E \coeff_internal_reg[62][6]  ( .D(n248), .CLK(clk), .Q(n2906), .QBAR(
        n1354) );
  DFF_E \coeff_internal_reg[61][6]  ( .D(n256), .CLK(clk), .Q(n2899), .QBAR(
        n1352) );
  DFF_E \coeff_internal_reg[60][6]  ( .D(n264), .CLK(clk), .Q(n2892), .QBAR(
        n1350) );
  DFF_E \coeff_internal_reg[59][6]  ( .D(n272), .CLK(clk), .Q(n2885), .QBAR(
        n1348) );
  DFF_E \coeff_internal_reg[58][6]  ( .D(n280), .CLK(clk), .Q(n2878), .QBAR(
        n1346) );
  DFF_E \coeff_internal_reg[57][6]  ( .D(n288), .CLK(clk), .Q(n2871), .QBAR(
        n1344) );
  DFF_E \coeff_internal_reg[56][6]  ( .D(n296), .CLK(clk), .Q(n2864), .QBAR(
        n1342) );
  DFF_E \coeff_internal_reg[55][6]  ( .D(n304), .CLK(clk), .Q(n2857), .QBAR(
        n1340) );
  DFF_E \coeff_internal_reg[54][6]  ( .D(n312), .CLK(clk), .Q(n2850), .QBAR(
        n1338) );
  DFF_E \coeff_internal_reg[53][6]  ( .D(n320), .CLK(clk), .Q(n2843), .QBAR(
        n1336) );
  DFF_E \coeff_internal_reg[52][6]  ( .D(n328), .CLK(clk), .Q(n2836), .QBAR(
        n1334) );
  DFF_E \coeff_internal_reg[51][6]  ( .D(n336), .CLK(clk), .Q(n2829), .QBAR(
        n1332) );
  DFF_E \coeff_internal_reg[50][6]  ( .D(n344), .CLK(clk), .Q(n2822), .QBAR(
        n1330) );
  DFF_E \coeff_internal_reg[49][6]  ( .D(n352), .CLK(clk), .Q(n2815), .QBAR(
        n1328) );
  DFF_E \coeff_internal_reg[48][6]  ( .D(n360), .CLK(clk), .Q(n2808), .QBAR(
        n1326) );
  DFF_E \coeff_internal_reg[31][6]  ( .D(n496), .CLK(clk), .Q(n2682), .QBAR(
        n1324) );
  DFF_E \coeff_internal_reg[30][6]  ( .D(n504), .CLK(clk), .Q(n2675), .QBAR(
        n1322) );
  DFF_E \coeff_internal_reg[29][6]  ( .D(n512), .CLK(clk), .Q(n2668), .QBAR(
        n1320) );
  DFF_E \coeff_internal_reg[28][6]  ( .D(n520), .CLK(clk), .Q(n2661), .QBAR(
        n1318) );
  DFF_E \coeff_internal_reg[27][6]  ( .D(n528), .CLK(clk), .Q(n2654), .QBAR(
        n1316) );
  DFF_E \coeff_internal_reg[26][6]  ( .D(n536), .CLK(clk), .Q(n2647), .QBAR(
        n1314) );
  DFF_E \coeff_internal_reg[25][6]  ( .D(n544), .CLK(clk), .Q(n2640), .QBAR(
        n1312) );
  DFF_E \coeff_internal_reg[24][6]  ( .D(n552), .CLK(clk), .Q(n2633), .QBAR(
        n1310) );
  DFF_E \coeff_internal_reg[23][6]  ( .D(n560), .CLK(clk), .Q(n2626), .QBAR(
        n1308) );
  DFF_E \coeff_internal_reg[22][6]  ( .D(n568), .CLK(clk), .Q(n2619), .QBAR(
        n1306) );
  DFF_E \coeff_internal_reg[21][6]  ( .D(n576), .CLK(clk), .Q(n2612), .QBAR(
        n1304) );
  DFF_E \coeff_internal_reg[20][6]  ( .D(n584), .CLK(clk), .Q(n2605), .QBAR(
        n1302) );
  DFF_E \coeff_internal_reg[19][6]  ( .D(n592), .CLK(clk), .Q(n2598), .QBAR(
        n1300) );
  DFF_E \coeff_internal_reg[18][6]  ( .D(n600), .CLK(clk), .Q(n2591), .QBAR(
        n1298) );
  DFF_E \coeff_internal_reg[17][6]  ( .D(n608), .CLK(clk), .Q(n2584), .QBAR(
        n1296) );
  DFF_E \coeff_internal_reg[16][6]  ( .D(n616), .CLK(clk), .Q(n2577), .QBAR(
        n1294) );
  DFF_E \coeff_internal_reg[43][2]  ( .D(n396), .CLK(clk), .Q(n2777), .QBAR(
        n1292) );
  DFF_E \coeff_internal_reg[42][2]  ( .D(n404), .CLK(clk), .Q(n2769), .QBAR(
        n1290) );
  DFF_E \coeff_internal_reg[41][2]  ( .D(n412), .CLK(clk), .Q(n2762), .QBAR(
        n1288) );
  DFF_E \coeff_internal_reg[39][2]  ( .D(n428), .CLK(clk), .Q(n2746), .QBAR(
        n1286) );
  DFF_E \coeff_internal_reg[38][2]  ( .D(n436), .CLK(clk), .Q(n2738), .QBAR(
        n1284) );
  DFF_E \coeff_internal_reg[37][2]  ( .D(n444), .CLK(clk), .Q(n2731), .QBAR(
        n1282) );
  DFF_E \coeff_internal_reg[36][2]  ( .D(n452), .CLK(clk), .Q(n2723), .QBAR(
        n1280) );
  DFF_E \coeff_internal_reg[35][2]  ( .D(n460), .CLK(clk), .Q(n2716), .QBAR(
        n1278) );
  DFF_E \coeff_internal_reg[33][2]  ( .D(n476), .CLK(clk), .Q(n2701), .QBAR(
        n1276) );
  DFF_E \coeff_internal_reg[32][2]  ( .D(n484), .CLK(clk), .Q(n2693), .QBAR(
        n1274) );
  DFF_E \coeff_internal_reg[14][2]  ( .D(n628), .CLK(clk), .Q(n2567), .QBAR(
        n1272) );
  DFF_E \coeff_internal_reg[13][2]  ( .D(n636), .CLK(clk), .Q(n2559), .QBAR(
        n1270) );
  DFF_E \coeff_internal_reg[12][2]  ( .D(n644), .CLK(clk), .Q(n2552), .QBAR(
        n1268) );
  DFF_E \coeff_internal_reg[11][2]  ( .D(n652), .CLK(clk), .Q(n2544), .QBAR(
        n1266) );
  DFF_E \coeff_internal_reg[10][2]  ( .D(n660), .CLK(clk), .Q(n2537), .QBAR(
        n1264) );
  DFF_E \coeff_internal_reg[9][2]  ( .D(n668), .CLK(clk), .Q(n2529), .QBAR(
        n1262) );
  DFF_E \coeff_internal_reg[8][2]  ( .D(n676), .CLK(clk), .Q(n2522), .QBAR(
        n1260) );
  DFF_E \coeff_internal_reg[7][2]  ( .D(n684), .CLK(clk), .Q(n2514), .QBAR(
        n1258) );
  DFF_E \coeff_internal_reg[6][2]  ( .D(n692), .CLK(clk), .Q(n2507), .QBAR(
        n1256) );
  DFF_E \coeff_internal_reg[5][2]  ( .D(n700), .CLK(clk), .Q(n2499), .QBAR(
        n1254) );
  DFF_E \coeff_internal_reg[4][2]  ( .D(n708), .CLK(clk), .Q(n2492), .QBAR(
        n1252) );
  DFF_E \coeff_internal_reg[3][2]  ( .D(n716), .CLK(clk), .Q(n2484), .QBAR(
        n1250) );
  DFF_E \coeff_internal_reg[2][2]  ( .D(n724), .CLK(clk), .Q(n2477), .QBAR(
        n1248) );
  DFF_E \coeff_internal_reg[1][2]  ( .D(n732), .CLK(clk), .Q(n2469), .QBAR(
        n1246) );
  DFF_E \coeff_internal_reg[0][2]  ( .D(n740), .CLK(clk), .Q(n2462), .QBAR(
        n1244) );
  DFF_E \coeff_internal_reg[64][1]  ( .D(n227), .CLK(clk), .Q(n2925), .QBAR(
        n1240) );
  DFF_E \coeff_internal_reg[62][1]  ( .D(n243), .CLK(clk), .Q(n2910), .QBAR(
        n1238) );
  DFF_E \coeff_internal_reg[57][1]  ( .D(n283), .CLK(clk), .Q(n2875), .QBAR(
        n1236) );
  DFF_E \coeff_internal_reg[51][1]  ( .D(n331), .CLK(clk), .Q(n2833), .QBAR(
        n1234) );
  DFF_E \coeff_internal_reg[30][1]  ( .D(n499), .CLK(clk), .Q(n2679), .QBAR(
        n1232) );
  DFF_E \coeff_internal_reg[28][1]  ( .D(n515), .CLK(clk), .Q(n2665), .QBAR(
        n1230) );
  DFF_E \coeff_internal_reg[27][1]  ( .D(n523), .CLK(clk), .Q(n2658), .QBAR(
        n1228) );
  DFF_E \coeff_internal_reg[21][1]  ( .D(n571), .CLK(clk), .Q(n2616), .QBAR(
        n1226) );
  DFF_E \coeff_internal_reg[63][2]  ( .D(n236), .CLK(clk), .Q(n2917), .QBAR(
        n1224) );
  DFF_E \coeff_internal_reg[57][2]  ( .D(n284), .CLK(clk), .QBAR(n1222) );
  DFF_E \coeff_internal_reg[56][2]  ( .D(n292), .CLK(clk), .QBAR(n1220) );
  DFF_E \coeff_internal_reg[51][2]  ( .D(n332), .CLK(clk), .QBAR(n1218) );
  DFF_E \coeff_internal_reg[50][2]  ( .D(n340), .CLK(clk), .QBAR(n1216) );
  DFF_E \coeff_internal_reg[49][2]  ( .D(n348), .CLK(clk), .QBAR(n1214) );
  DFF_E \coeff_internal_reg[29][2]  ( .D(n508), .CLK(clk), .QBAR(n1212) );
  DFF_E \coeff_internal_reg[26][2]  ( .D(n532), .CLK(clk), .QBAR(n1210) );
  DFF_E \coeff_internal_reg[20][2]  ( .D(n580), .CLK(clk), .QBAR(n1208) );
  DFF_E \coeff_internal_reg[61][1]  ( .D(n251), .CLK(clk), .Q(n2903), .QBAR(
        n1206) );
  DFF_E \coeff_internal_reg[60][1]  ( .D(n259), .CLK(clk), .Q(n2896), .QBAR(
        n1204) );
  DFF_E \coeff_internal_reg[59][1]  ( .D(n267), .CLK(clk), .Q(n2889), .QBAR(
        n1202) );
  DFF_E \coeff_internal_reg[58][1]  ( .D(n275), .CLK(clk), .Q(n2882), .QBAR(
        n1200) );
  DFF_E \coeff_internal_reg[56][1]  ( .D(n291), .CLK(clk), .Q(n2868), .QBAR(
        n1198) );
  DFF_E \coeff_internal_reg[55][1]  ( .D(n299), .CLK(clk), .Q(n2861), .QBAR(
        n1196) );
  DFF_E \coeff_internal_reg[54][1]  ( .D(n307), .CLK(clk), .Q(n2854), .QBAR(
        n1194) );
  DFF_E \coeff_internal_reg[53][1]  ( .D(n315), .CLK(clk), .Q(n2847), .QBAR(
        n1192) );
  DFF_E \coeff_internal_reg[52][1]  ( .D(n323), .CLK(clk), .Q(n2840), .QBAR(
        n1190) );
  DFF_E \coeff_internal_reg[50][1]  ( .D(n339), .CLK(clk), .Q(n2826), .QBAR(
        n1188) );
  DFF_E \coeff_internal_reg[49][1]  ( .D(n347), .CLK(clk), .Q(n2819), .QBAR(
        n1186) );
  DFF_E \coeff_internal_reg[48][1]  ( .D(n355), .CLK(clk), .Q(n2812), .QBAR(
        n1184) );
  DFF_E \coeff_internal_reg[29][1]  ( .D(n507), .CLK(clk), .Q(n2672), .QBAR(
        n1182) );
  DFF_E \coeff_internal_reg[26][1]  ( .D(n531), .CLK(clk), .Q(n2651), .QBAR(
        n1180) );
  DFF_E \coeff_internal_reg[25][1]  ( .D(n539), .CLK(clk), .Q(n2644), .QBAR(
        n1178) );
  DFF_E \coeff_internal_reg[24][1]  ( .D(n547), .CLK(clk), .Q(n2637), .QBAR(
        n1176) );
  DFF_E \coeff_internal_reg[23][1]  ( .D(n555), .CLK(clk), .Q(n2630), .QBAR(
        n1174) );
  DFF_E \coeff_internal_reg[22][1]  ( .D(n563), .CLK(clk), .Q(n2623), .QBAR(
        n1172) );
  DFF_E \coeff_internal_reg[20][1]  ( .D(n579), .CLK(clk), .Q(n2609), .QBAR(
        n1170) );
  DFF_E \coeff_internal_reg[19][1]  ( .D(n587), .CLK(clk), .Q(n2602), .QBAR(
        n1168) );
  DFF_E \coeff_internal_reg[18][1]  ( .D(n595), .CLK(clk), .Q(n2595), .QBAR(
        n1166) );
  DFF_E \coeff_internal_reg[17][1]  ( .D(n603), .CLK(clk), .Q(n2588), .QBAR(
        n1164) );
  DFF_E \coeff_internal_reg[16][1]  ( .D(n611), .CLK(clk), .Q(n2581), .QBAR(
        n1162) );
  DFF_E \coeff_internal_reg[69][2]  ( .D(n188), .CLK(clk), .Q(n2944), .QBAR(
        n1160) );
  DFF_E \coeff_internal_reg[68][2]  ( .D(n196), .CLK(clk), .Q(n2936), .QBAR(
        n1158) );
  DFF_E \coeff_internal_reg[64][2]  ( .D(n228), .CLK(clk), .QBAR(n1156) );
  DFF_E \coeff_internal_reg[62][2]  ( .D(n244), .CLK(clk), .QBAR(n1154) );
  DFF_E \coeff_internal_reg[61][2]  ( .D(n252), .CLK(clk), .QBAR(n1152) );
  DFF_E \coeff_internal_reg[60][2]  ( .D(n260), .CLK(clk), .QBAR(n1150) );
  DFF_E \coeff_internal_reg[59][2]  ( .D(n268), .CLK(clk), .QBAR(n1148) );
  DFF_E \coeff_internal_reg[58][2]  ( .D(n276), .CLK(clk), .QBAR(n1146) );
  DFF_E \coeff_internal_reg[55][2]  ( .D(n300), .CLK(clk), .QBAR(n1144) );
  DFF_E \coeff_internal_reg[54][2]  ( .D(n308), .CLK(clk), .QBAR(n1142) );
  DFF_E \coeff_internal_reg[53][2]  ( .D(n316), .CLK(clk), .QBAR(n1140) );
  DFF_E \coeff_internal_reg[52][2]  ( .D(n324), .CLK(clk), .QBAR(n1138) );
  DFF_E \coeff_internal_reg[48][2]  ( .D(n356), .CLK(clk), .QBAR(n1136) );
  DFF_E \coeff_internal_reg[30][2]  ( .D(n500), .CLK(clk), .QBAR(n1134) );
  DFF_E \coeff_internal_reg[28][2]  ( .D(n516), .CLK(clk), .QBAR(n1132) );
  DFF_E \coeff_internal_reg[27][2]  ( .D(n524), .CLK(clk), .QBAR(n1130) );
  DFF_E \coeff_internal_reg[25][2]  ( .D(n540), .CLK(clk), .QBAR(n1128) );
  DFF_E \coeff_internal_reg[24][2]  ( .D(n548), .CLK(clk), .QBAR(n1126) );
  DFF_E \coeff_internal_reg[23][2]  ( .D(n556), .CLK(clk), .QBAR(n1124) );
  DFF_E \coeff_internal_reg[22][2]  ( .D(n564), .CLK(clk), .QBAR(n1122) );
  DFF_E \coeff_internal_reg[21][2]  ( .D(n572), .CLK(clk), .QBAR(n1120) );
  DFF_E \coeff_internal_reg[19][2]  ( .D(n588), .CLK(clk), .QBAR(n1118) );
  DFF_E \coeff_internal_reg[18][2]  ( .D(n596), .CLK(clk), .QBAR(n1116) );
  DFF_E \coeff_internal_reg[17][2]  ( .D(n604), .CLK(clk), .QBAR(n1114) );
  DFF_E \coeff_internal_reg[16][2]  ( .D(n612), .CLK(clk), .QBAR(n1112) );
  DFF_E \coeff_internal_reg[15][2]  ( .D(n620), .CLK(clk), .Q(n2573), .QBAR(
        n1110) );
  DFF_E \coeff_internal_reg[65][3]  ( .D(n221), .CLK(clk), .Q(n2927) );
  DFF_E \coeff_internal_reg[66][5]  ( .D(n215), .CLK(clk), .Q(n2928), .QBAR(
        n1055) );
  DFF_E \coeff_internal_reg[66][4]  ( .D(n214), .CLK(clk), .Q(n2929), .QBAR(
        n1053) );
  DFF_E \coeff_internal_reg[66][3]  ( .D(n213), .CLK(clk), .Q(n2930) );
  DFF_E \coeff_internal_reg[67][3]  ( .D(n205), .CLK(clk), .Q(n2931) );
  DFF_E \coeff_internal_reg[68][5]  ( .D(n199), .CLK(clk), .Q(n2933), .QBAR(
        n1044) );
  DFF_E \coeff_internal_reg[68][4]  ( .D(n198), .CLK(clk), .Q(n2934), .QBAR(
        n1042) );
  DFF_E \coeff_internal_reg[68][3]  ( .D(n197), .CLK(clk), .Q(n2935) );
  DFF_E \coeff_internal_reg[69][3]  ( .D(n189), .CLK(clk), .Q(n2943) );
  DFF_E \coeff_internal_reg[15][7]  ( .D(n625), .CLK(clk), .Q(n30), .QBAR(n770) );
  DFF_E \coeff_internal_reg[15][6]  ( .D(n624), .CLK(clk), .Q(n29), .QBAR(n754) );
  DFF_E \coeff_internal_reg[66][7]  ( .D(n217), .CLK(clk), .QBAR(n23) );
  DFF_E \coeff_internal_reg[66][6]  ( .D(n216), .CLK(clk), .QBAR(n9) );
  DFF_E \coeff_internal_reg[66][2]  ( .D(n212), .CLK(clk), .QBAR(n7) );
  DFF_E \coeff_internal_reg[66][1]  ( .D(n211), .CLK(clk), .QBAR(n8) );
  DFF_E \coeff_internal_reg[66][0]  ( .D(n210), .CLK(clk), .QBAR(n22) );
  DFF_E \coeff_internal_reg[68][7]  ( .D(n201), .CLK(clk), .QBAR(n19) );
  DFF_E \coeff_internal_reg[67][7]  ( .D(n209), .CLK(clk), .QBAR(n27) );
  DFF_E \coeff_internal_reg[67][6]  ( .D(n208), .CLK(clk), .QBAR(n26) );
  DFF_E \coeff_internal_reg[67][5]  ( .D(n207), .CLK(clk), .QBAR(n11) );
  DFF_E \coeff_internal_reg[65][7]  ( .D(n225), .CLK(clk), .QBAR(n25) );
  DFF_E \coeff_internal_reg[65][6]  ( .D(n224), .CLK(clk), .QBAR(n24) );
  DFF_E \coeff_internal_reg[65][5]  ( .D(n223), .CLK(clk), .QBAR(n10) );
  DFF_E \coeff_internal_reg[65][4]  ( .D(n222), .CLK(clk), .QBAR(n3) );
  DFF_E \coeff_internal_reg[65][2]  ( .D(n220), .CLK(clk), .QBAR(n2) );
  DFF_E \coeff_internal_reg[65][1]  ( .D(n219), .CLK(clk), .QBAR(n1) );
  DFF_E \coeff_internal_reg[65][0]  ( .D(n218), .CLK(clk), .QBAR(n20) );
  DFF_E \coeff_internal_reg[67][4]  ( .D(n206), .CLK(clk), .QBAR(n6) );
  DFF_E \coeff_internal_reg[67][2]  ( .D(n204), .CLK(clk), .QBAR(n5) );
  DFF_E \coeff_internal_reg[67][1]  ( .D(n203), .CLK(clk), .QBAR(n4) );
  DFF_E \coeff_internal_reg[67][0]  ( .D(n202), .CLK(clk), .QBAR(n21) );
  DFF_E \coeff_internal_reg[69][0]  ( .D(n186), .CLK(clk), .Q(n2946), .QBAR(
        n18) );
  DFF_E \coeff_internal_reg[68][6]  ( .D(n200), .CLK(clk), .Q(n2932), .QBAR(
        n17) );
  DFF_E \coeff_internal_reg[68][0]  ( .D(n194), .CLK(clk), .Q(n2938), .QBAR(
        n16) );
  DFF_E \coeff_internal_reg[68][1]  ( .D(n195), .CLK(clk), .Q(n2937), .QBAR(
        n15) );
  DFF_E \coeff_internal_reg[69][5]  ( .D(n191), .CLK(clk), .Q(n2941), .QBAR(
        n14) );
  DFF_E \coeff_internal_reg[69][1]  ( .D(n187), .CLK(clk), .Q(n2945), .QBAR(
        n13) );
  DFF_E \coeff_internal_reg[69][4]  ( .D(n190), .CLK(clk), .Q(n2942), .QBAR(
        n12) );
  INVERT_H U2 ( .A(n916), .Z(n917) );
  INVERT_H U3 ( .A(n914), .Z(n915) );
  INVERT_H U4 ( .A(n912), .Z(n913) );
  NAND4_C U5 ( .A(coeff_write), .B(coeff_addr[5]), .C(n2453), .D(n2451), .Z(
        n81) );
  INVERT_H U6 ( .A(n160), .Z(n1070) );
  AND2_I U7 ( .A(coeff_addr[1]), .B(coeff_addr[0]), .Z(n160) );
  NAND4_C U8 ( .A(coeff_addr[4]), .B(coeff_write), .C(coeff_addr[5]), .D(n2451), .Z(n152) );
  INVERT_E U9 ( .A(n757), .Z(n1091) );
  INVERT_K U10 ( .A(n2199), .Z(n1442) );
  INVERT_I U11 ( .A(n2064), .Z(coeff_out1[3]) );
  INVERT_I U12 ( .A(n2068), .Z(coeff_out3[3]) );
  INVERT_I U13 ( .A(n2072), .Z(coeff_out5[3]) );
  INVERT_I U14 ( .A(n2076), .Z(coeff_out7[3]) );
  INVERT_I U15 ( .A(n2080), .Z(coeff_out9[3]) );
  INVERT_I U16 ( .A(n2084), .Z(coeff_out11[3]) );
  INVERT_I U17 ( .A(n2088), .Z(coeff_out13[3]) );
  INVERT_I U18 ( .A(n2096), .Z(coeff_out32[3]) );
  INVERT_I U19 ( .A(n2100), .Z(coeff_out34[3]) );
  INVERT_I U20 ( .A(n2104), .Z(coeff_out36[3]) );
  INVERT_I U21 ( .A(n2108), .Z(coeff_out38[3]) );
  INVERT_I U22 ( .A(n2114), .Z(coeff_out42[3]) );
  INVERT_I U23 ( .A(n2122), .Z(coeff_out47[3]) );
  INVERT_H U24 ( .A(coeff_addr[2]), .Z(n2455) );
  INVERT_I U25 ( .A(n1640), .Z(coeff_out17[5]) );
  INVERT_I U26 ( .A(n1644), .Z(coeff_out19[5]) );
  INVERT_I U27 ( .A(n1648), .Z(coeff_out21[5]) );
  INVERT_I U28 ( .A(n1652), .Z(coeff_out23[5]) );
  INVERT_I U29 ( .A(n1656), .Z(coeff_out25[5]) );
  INVERT_I U30 ( .A(n1660), .Z(coeff_out27[5]) );
  INVERT_I U31 ( .A(n1664), .Z(coeff_out29[5]) );
  INVERT_I U32 ( .A(n1670), .Z(coeff_out49[5]) );
  INVERT_I U33 ( .A(n1672), .Z(coeff_out51[5]) );
  INVERT_I U34 ( .A(n1676), .Z(coeff_out53[5]) );
  INVERT_I U35 ( .A(n1680), .Z(coeff_out55[5]) );
  INVERT_I U36 ( .A(n1364), .Z(coeff_out57[5]) );
  INVERT_I U37 ( .A(n1686), .Z(coeff_out59[5]) );
  INVERT_I U38 ( .A(n1690), .Z(coeff_out61[5]) );
  INVERT_H U39 ( .A(n920), .Z(n921) );
  INVERT_H U40 ( .A(n788), .Z(n789) );
  INVERT_H U41 ( .A(n784), .Z(n785) );
  INVERT_H U42 ( .A(n782), .Z(n783) );
  INVERT_H U43 ( .A(n780), .Z(n781) );
  INVERT_H U44 ( .A(n918), .Z(n919) );
  INVERT_H U45 ( .A(n774), .Z(n775) );
  INVERT_E U46 ( .A(n36), .Z(n1075) );
  INVERT_E U47 ( .A(n31), .Z(n1079) );
  NOR2_I U48 ( .A(coeff_addr[0]), .B(coeff_addr[1]), .Z(n156) );
  INVERT_I U49 ( .A(n1368), .Z(coeff_out17[0]) );
  INVERT_I U50 ( .A(n1372), .Z(coeff_out19[0]) );
  INVERT_I U51 ( .A(n1376), .Z(coeff_out21[0]) );
  INVERT_I U52 ( .A(n1380), .Z(coeff_out23[0]) );
  INVERT_I U53 ( .A(n1384), .Z(coeff_out25[0]) );
  INVERT_I U54 ( .A(n1388), .Z(coeff_out27[0]) );
  INVERT_I U55 ( .A(n1392), .Z(coeff_out29[0]) );
  INVERT_I U56 ( .A(n1398), .Z(coeff_out49[0]) );
  INVERT_I U57 ( .A(n1402), .Z(coeff_out51[0]) );
  INVERT_I U58 ( .A(n1406), .Z(coeff_out53[0]) );
  INVERT_I U59 ( .A(n1410), .Z(coeff_out55[0]) );
  INVERT_I U60 ( .A(n1414), .Z(coeff_out57[0]) );
  INVERT_I U61 ( .A(n1418), .Z(coeff_out59[0]) );
  INVERT_I U62 ( .A(n1422), .Z(coeff_out61[0]) );
  INVERT_H U63 ( .A(n778), .Z(n779) );
  INVERT_D U64 ( .A(n74), .Z(n72) );
  INVERT_H U65 ( .A(n103), .Z(n1084) );
  INVERT_D U66 ( .A(n53), .Z(n51) );
  INVERT_D U67 ( .A(n59), .Z(n57) );
  INVERT_D U68 ( .A(n77), .Z(n75) );
  INVERT_D U69 ( .A(n68), .Z(n66) );
  INVERT_E U70 ( .A(n32), .Z(n37) );
  INVERT_D U71 ( .A(n44), .Z(n42) );
  INVERT_D U72 ( .A(n56), .Z(n54) );
  INVERT_D U73 ( .A(n62), .Z(n60) );
  INVERT_D U74 ( .A(n41), .Z(n39) );
  INVERT_D U75 ( .A(n71), .Z(n69) );
  INVERT_K U76 ( .A(n1087), .Z(n1088) );
  INVERT_E U77 ( .A(n50), .Z(n48) );
  INVERT_D U78 ( .A(n753), .Z(n751) );
  INVERT_D U79 ( .A(n750), .Z(n748) );
  INVERT_E U80 ( .A(n47), .Z(n45) );
  INVERT_D U81 ( .A(n65), .Z(n63) );
  INVERT_D U82 ( .A(n747), .Z(n101) );
  INVERT_L U83 ( .A(n2200), .Z(n2197) );
  INVERT_I U84 ( .A(n6), .Z(coeff_out67[4]) );
  INVERT_I U85 ( .A(n3), .Z(coeff_out65[4]) );
  INVERT_I U86 ( .A(n21), .Z(coeff_out67[0]) );
  INVERT_I U87 ( .A(n4), .Z(coeff_out67[1]) );
  INVERT_I U88 ( .A(n26), .Z(coeff_out67[6]) );
  INVERT_I U89 ( .A(n20), .Z(coeff_out65[0]) );
  INVERT_I U90 ( .A(n1), .Z(coeff_out65[1]) );
  INVERT_I U91 ( .A(n24), .Z(coeff_out65[6]) );
  INVERT_H U92 ( .A(n783), .Z(coeff_out66[2]) );
  INVERT_H U93 ( .A(n754), .Z(coeff_out15[6]) );
  INVERT_H U94 ( .A(n17), .Z(coeff_out68[6]) );
  INVERT_H U95 ( .A(n15), .Z(coeff_out68[1]) );
  INVERT_H U96 ( .A(n789), .Z(coeff_out65[2]) );
  INVERT_H U97 ( .A(n775), .Z(coeff_out67[2]) );
  INVERT_H U98 ( .A(n16), .Z(coeff_out68[0]) );
  INVERT_H U99 ( .A(n12), .Z(coeff_out69[4]) );
  INVERT_H U100 ( .A(n13), .Z(coeff_out69[1]) );
  INVERT_H U101 ( .A(n14), .Z(coeff_out69[5]) );
  INVERT_H U102 ( .A(n785), .Z(coeff_out66[6]) );
  INVERT_H U103 ( .A(n18), .Z(coeff_out69[0]) );
  INVERT_H U104 ( .A(n779), .Z(coeff_out66[0]) );
  NAND2BAL_E U105 ( .A(n172), .B(n156), .Z(n105) );
  NAND2BAL_E U106 ( .A(n769), .B(n159), .Z(n85) );
  INVERT_H U107 ( .A(n99), .Z(n771) );
  AND2_I U108 ( .A(n172), .B(n769), .Z(n28) );
  INVERT_H U109 ( .A(n83), .Z(n1076) );
  INVERT_H U110 ( .A(n93), .Z(n35) );
  NAND2_E U111 ( .A(n2193), .B(n1088), .Z(n122) );
  NAND2_E U112 ( .A(n1088), .B(n1442), .Z(n98) );
  NAND2_E U113 ( .A(n2193), .B(n1094), .Z(n119) );
  NAND2_E U114 ( .A(n1086), .B(n1443), .Z(n100) );
  INVERT_H U115 ( .A(n80), .Z(n1080) );
  INVERT_H U116 ( .A(n10), .Z(n920) );
  INVERT_H U117 ( .A(n25), .Z(n916) );
  INVERT_H U118 ( .A(n11), .Z(n918) );
  INVERT_H U119 ( .A(n27), .Z(n912) );
  INVERT_H U120 ( .A(n2), .Z(n788) );
  INVERT_H U121 ( .A(n5), .Z(n774) );
  INVERT_H U122 ( .A(n7), .Z(n782) );
  INVERT_H U123 ( .A(n8), .Z(n780) );
  INVERT_H U124 ( .A(n22), .Z(n778) );
  INVERT_H U125 ( .A(n9), .Z(n784) );
  INVERT_H U126 ( .A(n23), .Z(n914) );
  INVERT_K U127 ( .A(n2203), .Z(n2194) );
  INVERT_I U128 ( .A(n1630), .Z(coeff_out43[1]) );
  INVERT_I U129 ( .A(n1626), .Z(coeff_out41[1]) );
  INVERT_I U130 ( .A(n1622), .Z(coeff_out39[1]) );
  INVERT_I U131 ( .A(n1618), .Z(coeff_out37[1]) );
  INVERT_I U132 ( .A(n1614), .Z(coeff_out35[1]) );
  INVERT_I U133 ( .A(n1610), .Z(coeff_out33[1]) );
  INVERT_I U134 ( .A(n1440), .Z(coeff_out70[2]) );
  INVERT_I U135 ( .A(n1160), .Z(coeff_out69[2]) );
  INVERT_I U136 ( .A(n1158), .Z(coeff_out68[2]) );
  INVERT_I U137 ( .A(n1426), .Z(coeff_out64[0]) );
  INVERT_I U138 ( .A(n1240), .Z(coeff_out64[1]) );
  INVERT_I U139 ( .A(n2060), .Z(coeff_out63[0]) );
  INVERT_I U140 ( .A(n1986), .Z(coeff_out63[1]) );
  INVERT_I U141 ( .A(n1424), .Z(coeff_out62[0]) );
  INVERT_I U142 ( .A(n1238), .Z(coeff_out62[1]) );
  INVERT_I U143 ( .A(n1206), .Z(coeff_out61[1]) );
  INVERT_I U144 ( .A(n1420), .Z(coeff_out60[0]) );
  INVERT_I U145 ( .A(n1204), .Z(coeff_out60[1]) );
  INVERT_I U146 ( .A(n1202), .Z(coeff_out59[1]) );
  INVERT_I U147 ( .A(n1416), .Z(coeff_out58[0]) );
  INVERT_I U148 ( .A(n1200), .Z(coeff_out58[1]) );
  INVERT_I U149 ( .A(n1236), .Z(coeff_out57[1]) );
  INVERT_I U150 ( .A(n1412), .Z(coeff_out56[0]) );
  INVERT_I U151 ( .A(n1198), .Z(coeff_out56[1]) );
  INVERT_I U152 ( .A(n1196), .Z(coeff_out55[1]) );
  INVERT_I U153 ( .A(n1408), .Z(coeff_out54[0]) );
  INVERT_I U154 ( .A(n1194), .Z(coeff_out54[1]) );
  INVERT_I U155 ( .A(n1192), .Z(coeff_out53[1]) );
  INVERT_I U156 ( .A(n1404), .Z(coeff_out52[0]) );
  INVERT_I U157 ( .A(n1190), .Z(coeff_out52[1]) );
  INVERT_I U158 ( .A(n1234), .Z(coeff_out51[1]) );
  INVERT_I U159 ( .A(n1400), .Z(coeff_out50[0]) );
  INVERT_I U160 ( .A(n1188), .Z(coeff_out50[1]) );
  INVERT_I U161 ( .A(n1186), .Z(coeff_out49[1]) );
  INVERT_I U162 ( .A(n1396), .Z(coeff_out48[0]) );
  INVERT_I U163 ( .A(n1184), .Z(coeff_out48[1]) );
  INVERT_I U164 ( .A(n1754), .Z(coeff_out46[0]) );
  INVERT_I U165 ( .A(n1632), .Z(coeff_out46[1]) );
  INVERT_I U166 ( .A(n2048), .Z(coeff_out46[5]) );
  INVERT_I U167 ( .A(n1752), .Z(coeff_out45[0]) );
  INVERT_I U168 ( .A(n1890), .Z(coeff_out45[1]) );
  INVERT_I U169 ( .A(n1750), .Z(coeff_out43[0]) );
  INVERT_I U170 ( .A(n2044), .Z(coeff_out43[5]) );
  INVERT_I U171 ( .A(n1748), .Z(coeff_out42[0]) );
  INVERT_I U172 ( .A(n1628), .Z(coeff_out42[1]) );
  INVERT_I U173 ( .A(n1746), .Z(coeff_out41[0]) );
  INVERT_I U174 ( .A(n2040), .Z(coeff_out41[5]) );
  INVERT_I U175 ( .A(n1624), .Z(coeff_out40[1]) );
  INVERT_I U176 ( .A(n1790), .Z(coeff_out40[3]) );
  INVERT_I U177 ( .A(n1742), .Z(coeff_out39[0]) );
  INVERT_I U178 ( .A(n2036), .Z(coeff_out39[5]) );
  INVERT_I U179 ( .A(n1740), .Z(coeff_out38[0]) );
  INVERT_I U180 ( .A(n1620), .Z(coeff_out38[1]) );
  INVERT_I U181 ( .A(n1738), .Z(coeff_out37[0]) );
  INVERT_I U182 ( .A(n2032), .Z(coeff_out37[5]) );
  INVERT_I U183 ( .A(n1736), .Z(coeff_out36[0]) );
  INVERT_I U184 ( .A(n1616), .Z(coeff_out36[1]) );
  INVERT_I U185 ( .A(n1734), .Z(coeff_out35[0]) );
  INVERT_I U186 ( .A(n2028), .Z(coeff_out35[5]) );
  INVERT_I U187 ( .A(n1732), .Z(coeff_out34[0]) );
  INVERT_I U188 ( .A(n1612), .Z(coeff_out34[1]) );
  INVERT_I U189 ( .A(n1730), .Z(coeff_out33[0]) );
  INVERT_I U190 ( .A(n2024), .Z(coeff_out33[5]) );
  INVERT_I U191 ( .A(n1728), .Z(coeff_out32[0]) );
  INVERT_I U192 ( .A(n1608), .Z(coeff_out32[1]) );
  INVERT_I U193 ( .A(n2056), .Z(coeff_out31[0]) );
  INVERT_I U194 ( .A(n1976), .Z(coeff_out31[2]) );
  INVERT_I U195 ( .A(n1394), .Z(coeff_out30[0]) );
  INVERT_I U196 ( .A(n1232), .Z(coeff_out30[1]) );
  INVERT_I U197 ( .A(n1182), .Z(coeff_out29[1]) );
  INVERT_I U198 ( .A(n1390), .Z(coeff_out28[0]) );
  INVERT_I U199 ( .A(n1230), .Z(coeff_out28[1]) );
  INVERT_I U200 ( .A(n1228), .Z(coeff_out27[1]) );
  INVERT_I U201 ( .A(n1386), .Z(coeff_out26[0]) );
  INVERT_I U202 ( .A(n1180), .Z(coeff_out26[1]) );
  INVERT_I U203 ( .A(n1178), .Z(coeff_out25[1]) );
  INVERT_I U204 ( .A(n1382), .Z(coeff_out24[0]) );
  INVERT_I U205 ( .A(n1176), .Z(coeff_out24[1]) );
  INVERT_I U206 ( .A(n1174), .Z(coeff_out23[1]) );
  INVERT_I U207 ( .A(n1378), .Z(coeff_out22[0]) );
  INVERT_I U208 ( .A(n1172), .Z(coeff_out22[1]) );
  INVERT_I U209 ( .A(n1226), .Z(coeff_out21[1]) );
  INVERT_I U210 ( .A(n1374), .Z(coeff_out20[0]) );
  INVERT_I U211 ( .A(n1170), .Z(coeff_out20[1]) );
  INVERT_I U212 ( .A(n1168), .Z(coeff_out19[1]) );
  INVERT_I U213 ( .A(n1370), .Z(coeff_out18[0]) );
  INVERT_I U214 ( .A(n1166), .Z(coeff_out18[1]) );
  INVERT_I U215 ( .A(n1164), .Z(coeff_out17[1]) );
  INVERT_I U216 ( .A(n1366), .Z(coeff_out16[0]) );
  INVERT_I U217 ( .A(n1162), .Z(coeff_out16[1]) );
  INVERT_I U218 ( .A(n2054), .Z(coeff_out15[0]) );
  INVERT_I U219 ( .A(n1980), .Z(coeff_out15[1]) );
  INVERT_I U220 ( .A(n1726), .Z(coeff_out14[0]) );
  INVERT_I U221 ( .A(n1606), .Z(coeff_out14[1]) );
  INVERT_I U222 ( .A(n2016), .Z(coeff_out14[5]) );
  INVERT_I U223 ( .A(n1722), .Z(coeff_out12[0]) );
  INVERT_I U224 ( .A(n1602), .Z(coeff_out12[1]) );
  INVERT_I U225 ( .A(n2012), .Z(coeff_out12[5]) );
  INVERT_I U226 ( .A(n1718), .Z(coeff_out10[0]) );
  INVERT_I U227 ( .A(n1598), .Z(coeff_out10[1]) );
  INVERT_I U228 ( .A(n2008), .Z(coeff_out10[5]) );
  INVERT_I U229 ( .A(n1714), .Z(coeff_out8[0]) );
  INVERT_I U230 ( .A(n1594), .Z(coeff_out8[1]) );
  INVERT_I U231 ( .A(n2004), .Z(coeff_out8[5]) );
  INVERT_I U232 ( .A(n1710), .Z(coeff_out6[0]) );
  INVERT_I U233 ( .A(n1590), .Z(coeff_out6[1]) );
  INVERT_I U234 ( .A(n2000), .Z(coeff_out6[5]) );
  INVERT_I U235 ( .A(n1706), .Z(coeff_out4[0]) );
  INVERT_I U236 ( .A(n1586), .Z(coeff_out4[1]) );
  INVERT_I U237 ( .A(n1996), .Z(coeff_out4[5]) );
  INVERT_I U238 ( .A(n1702), .Z(coeff_out2[0]) );
  INVERT_I U239 ( .A(n1582), .Z(coeff_out2[1]) );
  INVERT_I U240 ( .A(n1992), .Z(coeff_out2[5]) );
  INVERT_I U241 ( .A(n1698), .Z(coeff_out0[0]) );
  INVERT_I U242 ( .A(n1578), .Z(coeff_out0[1]) );
  INVERT_I U243 ( .A(n1988), .Z(coeff_out0[5]) );
  INVERT_I U244 ( .A(n1894), .Z(coeff_out45[3]) );
  INVERT_I U245 ( .A(n1758), .Z(coeff_out70[0]) );
  INVERT_I U246 ( .A(n1636), .Z(coeff_out70[1]) );
  INVERT_I U247 ( .A(n1824), .Z(coeff_out70[3]) );
  INVERT_I U248 ( .A(n2124), .Z(coeff_out63[3]) );
  INVERT_I U249 ( .A(n2190), .Z(coeff_out63[4]) );
  INVERT_I U250 ( .A(n2052), .Z(coeff_out63[5]) );
  INVERT_I U251 ( .A(n1818), .Z(coeff_out61[3]) );
  INVERT_I U252 ( .A(n1814), .Z(coeff_out59[3]) );
  INVERT_I U253 ( .A(n1810), .Z(coeff_out57[3]) );
  INVERT_I U254 ( .A(n1806), .Z(coeff_out55[3]) );
  INVERT_I U255 ( .A(n1802), .Z(coeff_out53[3]) );
  INVERT_I U256 ( .A(n1798), .Z(coeff_out51[3]) );
  INVERT_I U257 ( .A(n1794), .Z(coeff_out49[3]) );
  INVERT_I U258 ( .A(n1634), .Z(coeff_out47[1]) );
  INVERT_I U259 ( .A(n1438), .Z(coeff_out47[2]) );
  INVERT_I U260 ( .A(n1436), .Z(coeff_out46[2]) );
  INVERT_I U261 ( .A(n2120), .Z(coeff_out46[3]) );
  INVERT_I U262 ( .A(n2186), .Z(coeff_out46[4]) );
  INVERT_I U263 ( .A(n1434), .Z(coeff_out45[2]) );
  INVERT_I U264 ( .A(n1892), .Z(coeff_out45[5]) );
  INVERT_I U265 ( .A(n2118), .Z(coeff_out44[3]) );
  INVERT_I U266 ( .A(n2116), .Z(coeff_out43[3]) );
  INVERT_I U267 ( .A(n2182), .Z(coeff_out43[4]) );
  INVERT_I U268 ( .A(n1290), .Z(coeff_out42[2]) );
  INVERT_I U269 ( .A(n2112), .Z(coeff_out41[3]) );
  INVERT_I U270 ( .A(n2178), .Z(coeff_out41[4]) );
  INVERT_I U271 ( .A(n2110), .Z(coeff_out39[3]) );
  INVERT_I U272 ( .A(n2174), .Z(coeff_out39[4]) );
  INVERT_I U273 ( .A(n1284), .Z(coeff_out38[2]) );
  INVERT_I U274 ( .A(n2106), .Z(coeff_out37[3]) );
  INVERT_I U275 ( .A(n2170), .Z(coeff_out37[4]) );
  INVERT_I U276 ( .A(n1280), .Z(coeff_out36[2]) );
  INVERT_I U277 ( .A(n2102), .Z(coeff_out35[3]) );
  INVERT_I U278 ( .A(n2166), .Z(coeff_out35[4]) );
  INVERT_I U279 ( .A(n1430), .Z(coeff_out34[2]) );
  INVERT_I U280 ( .A(n2098), .Z(coeff_out33[3]) );
  INVERT_I U281 ( .A(n2162), .Z(coeff_out33[4]) );
  INVERT_I U282 ( .A(n1274), .Z(coeff_out32[2]) );
  INVERT_I U283 ( .A(n2094), .Z(coeff_out31[3]) );
  INVERT_I U284 ( .A(n1786), .Z(coeff_out29[3]) );
  INVERT_I U285 ( .A(n1782), .Z(coeff_out27[3]) );
  INVERT_I U286 ( .A(n1778), .Z(coeff_out25[3]) );
  INVERT_I U287 ( .A(n1774), .Z(coeff_out23[3]) );
  INVERT_I U288 ( .A(n1770), .Z(coeff_out21[3]) );
  INVERT_I U289 ( .A(n1766), .Z(coeff_out19[3]) );
  INVERT_I U290 ( .A(n1762), .Z(coeff_out17[3]) );
  INVERT_I U291 ( .A(n2092), .Z(coeff_out15[3]) );
  INVERT_I U292 ( .A(n1272), .Z(coeff_out14[2]) );
  INVERT_I U293 ( .A(n2090), .Z(coeff_out14[3]) );
  INVERT_I U294 ( .A(n2154), .Z(coeff_out14[4]) );
  INVERT_I U295 ( .A(n1604), .Z(coeff_out13[1]) );
  INVERT_I U296 ( .A(n1270), .Z(coeff_out13[2]) );
  INVERT_I U297 ( .A(n1268), .Z(coeff_out12[2]) );
  INVERT_I U298 ( .A(n2086), .Z(coeff_out12[3]) );
  INVERT_I U299 ( .A(n2150), .Z(coeff_out12[4]) );
  INVERT_I U300 ( .A(n1600), .Z(coeff_out11[1]) );
  INVERT_I U301 ( .A(n1266), .Z(coeff_out11[2]) );
  INVERT_I U302 ( .A(n1264), .Z(coeff_out10[2]) );
  INVERT_I U303 ( .A(n2082), .Z(coeff_out10[3]) );
  INVERT_I U304 ( .A(n2146), .Z(coeff_out10[4]) );
  INVERT_I U305 ( .A(n1596), .Z(coeff_out9[1]) );
  INVERT_I U306 ( .A(n1262), .Z(coeff_out9[2]) );
  INVERT_I U307 ( .A(n1260), .Z(coeff_out8[2]) );
  INVERT_I U308 ( .A(n2078), .Z(coeff_out8[3]) );
  INVERT_I U309 ( .A(n2142), .Z(coeff_out8[4]) );
  INVERT_I U310 ( .A(n1592), .Z(coeff_out7[1]) );
  INVERT_I U311 ( .A(n1258), .Z(coeff_out7[2]) );
  INVERT_I U312 ( .A(n1256), .Z(coeff_out6[2]) );
  INVERT_I U313 ( .A(n2074), .Z(coeff_out6[3]) );
  INVERT_I U314 ( .A(n2138), .Z(coeff_out6[4]) );
  INVERT_I U315 ( .A(n1588), .Z(coeff_out5[1]) );
  INVERT_I U316 ( .A(n1254), .Z(coeff_out5[2]) );
  INVERT_I U317 ( .A(n1252), .Z(coeff_out4[2]) );
  INVERT_I U318 ( .A(n2070), .Z(coeff_out4[3]) );
  INVERT_I U319 ( .A(n2134), .Z(coeff_out4[4]) );
  INVERT_I U320 ( .A(n1584), .Z(coeff_out3[1]) );
  INVERT_I U321 ( .A(n1250), .Z(coeff_out3[2]) );
  INVERT_I U322 ( .A(n1248), .Z(coeff_out2[2]) );
  INVERT_I U323 ( .A(n2066), .Z(coeff_out2[3]) );
  INVERT_I U324 ( .A(n2130), .Z(coeff_out2[4]) );
  INVERT_I U325 ( .A(n1580), .Z(coeff_out1[1]) );
  INVERT_I U326 ( .A(n1246), .Z(coeff_out1[2]) );
  INVERT_I U327 ( .A(n1244), .Z(coeff_out0[2]) );
  INVERT_I U328 ( .A(n2062), .Z(coeff_out0[3]) );
  INVERT_I U329 ( .A(n2126), .Z(coeff_out0[4]) );
  NAND2_E U330 ( .A(n34), .B(n769), .Z(n93) );
  AND2_H U331 ( .A(n769), .B(n756), .Z(n110) );
  INVERT_D U332 ( .A(n110), .Z(n31) );
  INVERT_J U333 ( .A(n162), .Z(n769) );
  NAND2BAL_E U334 ( .A(n172), .B(n1071), .Z(n99) );
  AND2_H U335 ( .A(n2196), .B(n1072), .Z(n154) );
  INVERT_D U336 ( .A(n154), .Z(n32) );
  INVERT_F U337 ( .A(n167), .Z(n33) );
  INVERT_J U338 ( .A(n33), .Z(n34) );
  NOR2_D U339 ( .A(n2455), .B(coeff_addr[3]), .Z(n167) );
  INVERT_M U340 ( .A(n1101), .Z(n2413) );
  AO22_F U341 ( .A1(n2413), .A2(n2212), .B1(coeff_out65[0]), .B2(n1101), .Z(
        n218) );
  AO22_F U342 ( .A1(n2413), .A2(n2234), .B1(coeff_out65[1]), .B2(n1101), .Z(
        n219) );
  AO22_F U343 ( .A1(n2413), .A2(n2256), .B1(n788), .B2(n1101), .Z(n220) );
  AO22_F U344 ( .A1(n2413), .A2(n2300), .B1(coeff_out65[4]), .B2(n1101), .Z(
        n222) );
  INVERT_N U345 ( .A(n1100), .Z(n1101) );
  AO22_F U346 ( .A1(n2413), .A2(n2322), .B1(n920), .B2(n1101), .Z(n223) );
  AO22_F U347 ( .A1(n2413), .A2(n2344), .B1(coeff_out65[6]), .B2(n1101), .Z(
        n224) );
  AO22_F U348 ( .A1(n2413), .A2(n2366), .B1(n916), .B2(n1101), .Z(n225) );
  INVERT_M U349 ( .A(n1107), .Z(n2415) );
  AO22_F U350 ( .A1(n2415), .A2(n2212), .B1(coeff_out67[0]), .B2(n1107), .Z(
        n202) );
  AO22_F U351 ( .A1(n2415), .A2(n2234), .B1(coeff_out67[1]), .B2(n1107), .Z(
        n203) );
  AO22_F U352 ( .A1(n2415), .A2(n2256), .B1(n774), .B2(n1107), .Z(n204) );
  AO22_F U353 ( .A1(n2415), .A2(n2300), .B1(coeff_out67[4]), .B2(n1107), .Z(
        n206) );
  INVERT_N U354 ( .A(n1106), .Z(n1107) );
  AO22_F U355 ( .A1(n2415), .A2(n2322), .B1(n918), .B2(n1107), .Z(n207) );
  AO22_F U356 ( .A1(n2415), .A2(n2344), .B1(coeff_out67[6]), .B2(n1107), .Z(
        n208) );
  AO22_F U357 ( .A1(n2415), .A2(n2366), .B1(n912), .B2(n1107), .Z(n209) );
  INVERT_H U358 ( .A(n781), .Z(coeff_out66[1]) );
  INVERT_I U359 ( .A(n1112), .Z(coeff_out16[2]) );
  INVERT_I U360 ( .A(n1116), .Z(coeff_out18[2]) );
  INVERT_I U361 ( .A(n1122), .Z(coeff_out22[2]) );
  INVERT_I U362 ( .A(n1126), .Z(coeff_out24[2]) );
  INVERT_I U363 ( .A(n1132), .Z(coeff_out28[2]) );
  INVERT_I U364 ( .A(n1134), .Z(coeff_out30[2]) );
  INVERT_I U365 ( .A(n1136), .Z(coeff_out48[2]) );
  INVERT_I U366 ( .A(n1138), .Z(coeff_out52[2]) );
  INVERT_I U367 ( .A(n1142), .Z(coeff_out54[2]) );
  INVERT_I U368 ( .A(n1146), .Z(coeff_out58[2]) );
  INVERT_I U369 ( .A(n1150), .Z(coeff_out60[2]) );
  INVERT_I U370 ( .A(n1154), .Z(coeff_out62[2]) );
  INVERT_I U371 ( .A(n1156), .Z(coeff_out64[2]) );
  INVERT_I U372 ( .A(n1208), .Z(coeff_out20[2]) );
  INVERT_I U373 ( .A(n1210), .Z(coeff_out26[2]) );
  INVERT_I U374 ( .A(n1216), .Z(coeff_out50[2]) );
  INVERT_I U375 ( .A(n1218), .Z(coeff_out51[2]) );
  INVERT_I U376 ( .A(n1220), .Z(coeff_out56[2]) );
  INVERT_I U377 ( .A(n1990), .Z(coeff_out1[5]) );
  INVERT_I U378 ( .A(n1994), .Z(coeff_out3[5]) );
  INVERT_I U379 ( .A(n1998), .Z(coeff_out5[5]) );
  INVERT_I U380 ( .A(n2002), .Z(coeff_out7[5]) );
  INVERT_I U381 ( .A(n2006), .Z(coeff_out9[5]) );
  INVERT_I U382 ( .A(n2010), .Z(coeff_out11[5]) );
  INVERT_I U383 ( .A(n2014), .Z(coeff_out13[5]) );
  INVERT_I U384 ( .A(n2022), .Z(coeff_out32[5]) );
  INVERT_I U385 ( .A(n2026), .Z(coeff_out34[5]) );
  INVERT_I U386 ( .A(n2030), .Z(coeff_out36[5]) );
  INVERT_I U387 ( .A(n2034), .Z(coeff_out38[5]) );
  INVERT_I U388 ( .A(n2042), .Z(coeff_out42[5]) );
  INVERT_I U389 ( .A(n2046), .Z(coeff_out44[5]) );
  INVERT_I U390 ( .A(n2050), .Z(coeff_out47[5]) );
  INVERT_I U391 ( .A(n2058), .Z(coeff_out44[0]) );
  INVERT_I U392 ( .A(n1114), .Z(coeff_out17[2]) );
  INVERT_I U393 ( .A(n1118), .Z(coeff_out19[2]) );
  INVERT_I U394 ( .A(n1120), .Z(coeff_out21[2]) );
  INVERT_I U395 ( .A(n1124), .Z(coeff_out23[2]) );
  INVERT_I U396 ( .A(n1128), .Z(coeff_out25[2]) );
  INVERT_I U397 ( .A(n1130), .Z(coeff_out27[2]) );
  INVERT_I U398 ( .A(n1140), .Z(coeff_out53[2]) );
  INVERT_I U399 ( .A(n1144), .Z(coeff_out55[2]) );
  INVERT_I U400 ( .A(n1148), .Z(coeff_out59[2]) );
  INVERT_I U401 ( .A(n1152), .Z(coeff_out61[2]) );
  INVERT_I U402 ( .A(n1212), .Z(coeff_out29[2]) );
  INVERT_I U403 ( .A(n1214), .Z(coeff_out49[2]) );
  INVERT_I U404 ( .A(n1978), .Z(coeff_out44[2]) );
  INVERT_I U405 ( .A(n1222), .Z(coeff_out57[2]) );
  INVERT_I U406 ( .A(n1898), .Z(coeff_out0[7]) );
  INVERT_I U407 ( .A(n1900), .Z(coeff_out1[7]) );
  INVERT_I U408 ( .A(n1902), .Z(coeff_out2[7]) );
  INVERT_I U409 ( .A(n1904), .Z(coeff_out3[7]) );
  INVERT_I U410 ( .A(n1906), .Z(coeff_out4[7]) );
  INVERT_I U411 ( .A(n1908), .Z(coeff_out5[7]) );
  INVERT_I U412 ( .A(n1910), .Z(coeff_out6[7]) );
  INVERT_I U413 ( .A(n1912), .Z(coeff_out7[7]) );
  INVERT_I U414 ( .A(n1914), .Z(coeff_out8[7]) );
  INVERT_I U415 ( .A(n1916), .Z(coeff_out9[7]) );
  INVERT_I U416 ( .A(n1918), .Z(coeff_out10[7]) );
  INVERT_I U417 ( .A(n1920), .Z(coeff_out11[7]) );
  INVERT_I U418 ( .A(n1922), .Z(coeff_out12[7]) );
  INVERT_I U419 ( .A(n1924), .Z(coeff_out13[7]) );
  INVERT_I U420 ( .A(n1926), .Z(coeff_out14[7]) );
  INVERT_I U421 ( .A(n1928), .Z(coeff_out32[7]) );
  INVERT_I U422 ( .A(n1930), .Z(coeff_out33[7]) );
  INVERT_I U423 ( .A(n1932), .Z(coeff_out34[7]) );
  INVERT_I U424 ( .A(n1934), .Z(coeff_out35[7]) );
  INVERT_I U425 ( .A(n1936), .Z(coeff_out36[7]) );
  INVERT_I U426 ( .A(n1938), .Z(coeff_out37[7]) );
  INVERT_I U427 ( .A(n1940), .Z(coeff_out38[7]) );
  INVERT_I U428 ( .A(n1942), .Z(coeff_out39[7]) );
  INVERT_I U429 ( .A(n1944), .Z(coeff_out40[7]) );
  INVERT_I U430 ( .A(n1946), .Z(coeff_out41[7]) );
  INVERT_I U431 ( .A(n1948), .Z(coeff_out42[7]) );
  INVERT_I U432 ( .A(n1950), .Z(coeff_out43[7]) );
  INVERT_I U433 ( .A(n1954), .Z(coeff_out45[7]) );
  INVERT_I U434 ( .A(n1956), .Z(coeff_out46[7]) );
  INVERT_I U435 ( .A(n1958), .Z(coeff_out47[7]) );
  INVERT_I U436 ( .A(n1960), .Z(coeff_out70[7]) );
  NAND2BAL_E U437 ( .A(n756), .B(n164), .Z(n112) );
  AND2_H U438 ( .A(n34), .B(n1071), .Z(n91) );
  INVERT_D U439 ( .A(n91), .Z(n36) );
  INVERT_J U440 ( .A(n1070), .Z(n1071) );
  INVERT_J U441 ( .A(n112), .Z(n1072) );
  NAND2BAL_E U442 ( .A(n172), .B(n164), .Z(n103) );
  NOR2_I U443 ( .A(coeff_addr[2]), .B(coeff_addr[3]), .Z(n172) );
  INVERT_E U444 ( .A(n37), .Z(n38) );
  INVERT_E U445 ( .A(n39), .Z(n40) );
  BUFFER_F U446 ( .A(n129), .Z(n41) );
  INVERT_E U447 ( .A(n42), .Z(n43) );
  BUFFER_F U448 ( .A(n150), .Z(n44) );
  INVERT_E U449 ( .A(n45), .Z(n46) );
  AND2_H U450 ( .A(n762), .B(n1442), .Z(n84) );
  INVERT_D U451 ( .A(n84), .Z(n47) );
  INVERT_E U452 ( .A(n48), .Z(n49) );
  AND2_H U453 ( .A(n1090), .B(n1442), .Z(n96) );
  INVERT_D U454 ( .A(n96), .Z(n50) );
  INVERT_E U455 ( .A(n51), .Z(n52) );
  BUFFER_F U456 ( .A(n121), .Z(n53) );
  INVERT_E U457 ( .A(n54), .Z(n55) );
  BUFFER_F U458 ( .A(n138), .Z(n56) );
  NAND2_E U459 ( .A(n1442), .B(n1092), .Z(n94) );
  INVERT_E U460 ( .A(n57), .Z(n58) );
  BUFFER_F U461 ( .A(n120), .Z(n59) );
  INVERT_E U462 ( .A(n60), .Z(n61) );
  BUFFER_F U463 ( .A(n137), .Z(n62) );
  NAND2BAL_E U464 ( .A(n761), .B(n1443), .Z(n86) );
  INVERT_E U465 ( .A(n63), .Z(n64) );
  BUFFER_F U466 ( .A(n82), .Z(n65) );
  INVERT_E U467 ( .A(n66), .Z(n67) );
  BUFFER_F U468 ( .A(n175), .Z(n68) );
  INVERT_E U469 ( .A(n69), .Z(n70) );
  BUFFER_F U470 ( .A(n104), .Z(n71) );
  INVERT_E U471 ( .A(n72), .Z(n73) );
  BUFFER_F U472 ( .A(n125), .Z(n74) );
  INVERT_E U473 ( .A(n75), .Z(n76) );
  BUFFER_F U474 ( .A(n109), .Z(n77) );
  INVERT_E U475 ( .A(n101), .Z(n746) );
  BUFFER_F U476 ( .A(n176), .Z(n747) );
  INVERT_E U477 ( .A(n748), .Z(n749) );
  BUFFER_F U478 ( .A(n88), .Z(n750) );
  INVERT_E U479 ( .A(n751), .Z(n752) );
  BUFFER_F U480 ( .A(n90), .Z(n753) );
  INVERT_I U481 ( .A(n1984), .Z(coeff_out44[1]) );
  INVERT_I U482 ( .A(n1982), .Z(coeff_out31[1]) );
  NAND2BAL_E U483 ( .A(n159), .B(n164), .Z(n87) );
  NAND2BAL_E U484 ( .A(n159), .B(n156), .Z(n89) );
  NOR2_I U485 ( .A(n2454), .B(coeff_addr[2]), .Z(n159) );
  INVERT_F U486 ( .A(n157), .Z(n755) );
  INVERT_J U487 ( .A(n755), .Z(n756) );
  NOR2_D U488 ( .A(n2454), .B(n2455), .Z(n157) );
  AND2_H U489 ( .A(n34), .B(n156), .Z(n97) );
  INVERT_D U490 ( .A(n97), .Z(n757) );
  INVERT_I U491 ( .A(n1097), .Z(n1095) );
  INVERT_H U492 ( .A(n922), .Z(n923) );
  INVERT_F U493 ( .A(n38), .Z(n922) );
  INVERT_H U494 ( .A(n924), .Z(n925) );
  INVERT_H U495 ( .A(n927), .Z(n928) );
  INVERT_F U496 ( .A(n40), .Z(n927) );
  INVERT_F U497 ( .A(n43), .Z(n929) );
  INVERT_H U498 ( .A(n931), .Z(n932) );
  INVERT_H U499 ( .A(n934), .Z(n935) );
  INVERT_F U500 ( .A(n46), .Z(n934) );
  INVERT_H U501 ( .A(n936), .Z(n937) );
  INVERT_F U502 ( .A(n49), .Z(n936) );
  INVERT_H U503 ( .A(n938), .Z(n939) );
  INVERT_F U504 ( .A(n52), .Z(n938) );
  INVERT_H U505 ( .A(n940), .Z(n941) );
  INVERT_F U506 ( .A(n55), .Z(n940) );
  INVERT_H U507 ( .A(n942), .Z(n943) );
  INVERT_H U508 ( .A(n945), .Z(n946) );
  INVERT_H U509 ( .A(n948), .Z(n949) );
  INVERT_H U510 ( .A(n951), .Z(n952) );
  INVERT_F U511 ( .A(n58), .Z(n951) );
  INVERT_H U512 ( .A(n953), .Z(n954) );
  INVERT_F U513 ( .A(n61), .Z(n953) );
  INVERT_H U514 ( .A(n955), .Z(n956) );
  INVERT_H U515 ( .A(n958), .Z(n959) );
  INVERT_H U516 ( .A(n961), .Z(n962) );
  INVERT_H U517 ( .A(n964), .Z(n965) );
  INVERT_H U518 ( .A(n967), .Z(n968) );
  INVERT_H U519 ( .A(n970), .Z(n971) );
  INVERT_F U520 ( .A(n64), .Z(n970) );
  INVERT_H U521 ( .A(n972), .Z(n973) );
  INVERT_F U522 ( .A(n67), .Z(n972) );
  INVERT_H U523 ( .A(n974), .Z(n975) );
  INVERT_F U524 ( .A(n70), .Z(n974) );
  INVERT_H U525 ( .A(n976), .Z(n977) );
  INVERT_F U526 ( .A(n73), .Z(n976) );
  INVERT_H U527 ( .A(n978), .Z(n979) );
  INVERT_H U528 ( .A(n981), .Z(n982) );
  INVERT_H U529 ( .A(n984), .Z(n985) );
  INVERT_F U530 ( .A(n76), .Z(n984) );
  INVERT_H U531 ( .A(n986), .Z(n987) );
  INVERT_H U532 ( .A(n989), .Z(n990) );
  INVERT_H U533 ( .A(n992), .Z(n993) );
  INVERT_H U534 ( .A(n995), .Z(n996) );
  INVERT_F U535 ( .A(n746), .Z(n995) );
  INVERT_H U536 ( .A(n997), .Z(n998) );
  INVERT_H U537 ( .A(n1000), .Z(n1001) );
  INVERT_F U538 ( .A(n749), .Z(n1000) );
  INVERT_H U539 ( .A(n1002), .Z(n1003) );
  INVERT_H U540 ( .A(n1005), .Z(n1006) );
  INVERT_H U541 ( .A(n1008), .Z(n1009) );
  INVERT_F U542 ( .A(n752), .Z(n1008) );
  INVERT_H U543 ( .A(n1010), .Z(n1011) );
  INVERT_H U544 ( .A(n1013), .Z(n1014) );
  INVERT_H U545 ( .A(n1016), .Z(n1017) );
  INVERT_H U546 ( .A(n1019), .Z(n1020) );
  INVERT_H U547 ( .A(n1022), .Z(n1023) );
  INVERT_H U548 ( .A(n1025), .Z(n1026) );
  INVERT_H U549 ( .A(n1028), .Z(n1029) );
  INVERT_H U550 ( .A(n1031), .Z(n1032) );
  AO22_F U551 ( .A1(n2434), .A2(n2341), .B1(n29), .B2(n1109), .Z(n624) );
  AO22_F U552 ( .A1(n2434), .A2(n2363), .B1(n30), .B2(n1109), .Z(n625) );
  INVERT_H U553 ( .A(n1074), .Z(n758) );
  INVERT_J U554 ( .A(n758), .Z(n759) );
  INVERT_H U555 ( .A(n1073), .Z(n1074) );
  INVERT_J U556 ( .A(n89), .Z(n760) );
  INVERT_J U557 ( .A(n87), .Z(n761) );
  INVERT_J U558 ( .A(n85), .Z(n762) );
  INVERT_H U559 ( .A(n1076), .Z(n763) );
  INVERT_J U560 ( .A(n763), .Z(n764) );
  INVERT_H U561 ( .A(n1078), .Z(n765) );
  INVERT_J U562 ( .A(n765), .Z(n766) );
  INVERT_H U563 ( .A(n1077), .Z(n1078) );
  INVERT_H U564 ( .A(n1080), .Z(n767) );
  INVERT_J U565 ( .A(n767), .Z(n768) );
  INVERT_I U566 ( .A(n1880), .Z(coeff_out61[4]) );
  INVERT_I U567 ( .A(n1876), .Z(coeff_out59[4]) );
  INVERT_I U568 ( .A(n1872), .Z(coeff_out57[4]) );
  INVERT_I U569 ( .A(n1868), .Z(coeff_out55[4]) );
  INVERT_I U570 ( .A(n1864), .Z(coeff_out53[4]) );
  INVERT_I U571 ( .A(n1428), .Z(coeff_out51[4]) );
  INVERT_I U572 ( .A(n1858), .Z(coeff_out49[4]) );
  INVERT_I U573 ( .A(n1852), .Z(coeff_out29[4]) );
  INVERT_I U574 ( .A(n1848), .Z(coeff_out27[4]) );
  INVERT_I U575 ( .A(n1844), .Z(coeff_out25[4]) );
  INVERT_I U576 ( .A(n1840), .Z(coeff_out23[4]) );
  INVERT_I U577 ( .A(n1836), .Z(coeff_out21[4]) );
  INVERT_I U578 ( .A(n1832), .Z(coeff_out19[4]) );
  INVERT_I U579 ( .A(n1828), .Z(coeff_out17[4]) );
  INVERT_H U580 ( .A(n107), .Z(n1097) );
  NAND2_E U581 ( .A(n1071), .B(n756), .Z(n107) );
  NOR2_I U582 ( .A(n2456), .B(coeff_addr[1]), .Z(n164) );
  NAND2BAL_E U583 ( .A(coeff_addr[1]), .B(n2456), .Z(n162) );
  INVERT_I U584 ( .A(coeff_addr[0]), .Z(n2456) );
  INVERT_I U585 ( .A(n2184), .Z(coeff_out44[4]) );
  INVERT_I U586 ( .A(n2158), .Z(coeff_out31[4]) );
  INVERT_I U587 ( .A(n2020), .Z(coeff_out31[5]) );
  INVERT_I U588 ( .A(n1744), .Z(coeff_out40[0]) );
  INVERT_M U589 ( .A(n1103), .Z(n2414) );
  AO22_F U590 ( .A1(n2414), .A2(n2256), .B1(n782), .B2(n1103), .Z(n212) );
  AO22_F U591 ( .A1(n2414), .A2(n2234), .B1(n780), .B2(n1103), .Z(n211) );
  AO22_F U592 ( .A1(n2414), .A2(n2212), .B1(n778), .B2(n1103), .Z(n210) );
  AO22_F U593 ( .A1(n2414), .A2(n2344), .B1(n784), .B2(n1103), .Z(n216) );
  AO22_F U594 ( .A1(n2414), .A2(n2366), .B1(n914), .B2(n1103), .Z(n217) );
  INVERT_N U595 ( .A(n1102), .Z(n1103) );
  INVERT_I U596 ( .A(n78), .Z(n792) );
  INVERT_N U597 ( .A(n792), .Z(n793) );
  INVERT_I U598 ( .A(n1032), .Z(n794) );
  INVERT_N U599 ( .A(n794), .Z(n795) );
  INVERT_I U600 ( .A(n996), .Z(n796) );
  INVERT_N U601 ( .A(n796), .Z(n797) );
  INVERT_I U602 ( .A(n973), .Z(n798) );
  INVERT_N U603 ( .A(n798), .Z(n799) );
  INVERT_I U604 ( .A(n946), .Z(n800) );
  INVERT_N U605 ( .A(n800), .Z(n801) );
  INVERT_I U606 ( .A(n173), .Z(n802) );
  INVERT_N U607 ( .A(n802), .Z(n803) );
  INVERT_I U608 ( .A(n171), .Z(n804) );
  INVERT_N U609 ( .A(n804), .Z(n805) );
  INVERT_I U610 ( .A(n932), .Z(n806) );
  INVERT_N U611 ( .A(n806), .Z(n807) );
  INVERT_I U612 ( .A(n943), .Z(n808) );
  INVERT_N U613 ( .A(n808), .Z(n809) );
  INVERT_I U614 ( .A(n959), .Z(n810) );
  INVERT_N U615 ( .A(n810), .Z(n811) );
  INVERT_I U616 ( .A(n1006), .Z(n812) );
  INVERT_N U617 ( .A(n812), .Z(n813) );
  INVERT_I U618 ( .A(n998), .Z(n814) );
  INVERT_N U619 ( .A(n814), .Z(n815) );
  INVERT_I U620 ( .A(n1020), .Z(n816) );
  INVERT_N U621 ( .A(n816), .Z(n817) );
  INVERT_I U622 ( .A(n1014), .Z(n818) );
  INVERT_N U623 ( .A(n818), .Z(n819) );
  INVERT_I U624 ( .A(n1026), .Z(n820) );
  INVERT_N U625 ( .A(n820), .Z(n821) );
  INVERT_I U626 ( .A(n987), .Z(n822) );
  INVERT_N U627 ( .A(n822), .Z(n823) );
  INVERT_I U628 ( .A(n923), .Z(n824) );
  INVERT_N U629 ( .A(n824), .Z(n825) );
  INVERT_I U630 ( .A(n982), .Z(n826) );
  INVERT_N U631 ( .A(n826), .Z(n827) );
  INVERT_I U632 ( .A(n979), .Z(n828) );
  INVERT_N U633 ( .A(n828), .Z(n829) );
  INVERT_I U634 ( .A(n956), .Z(n830) );
  INVERT_N U635 ( .A(n830), .Z(n831) );
  INVERT_I U636 ( .A(n968), .Z(n832) );
  INVERT_N U637 ( .A(n832), .Z(n833) );
  INVERT_I U638 ( .A(n139), .Z(n834) );
  INVERT_N U639 ( .A(n834), .Z(n835) );
  INVERT_I U640 ( .A(n941), .Z(n836) );
  INVERT_N U641 ( .A(n836), .Z(n837) );
  INVERT_I U642 ( .A(n954), .Z(n838) );
  INVERT_N U643 ( .A(n838), .Z(n839) );
  INVERT_I U644 ( .A(n965), .Z(n840) );
  INVERT_N U645 ( .A(n840), .Z(n841) );
  INVERT_I U646 ( .A(n135), .Z(n842) );
  INVERT_N U647 ( .A(n842), .Z(n843) );
  INVERT_I U648 ( .A(n134), .Z(n844) );
  INVERT_N U649 ( .A(n844), .Z(n845) );
  INVERT_I U650 ( .A(n133), .Z(n846) );
  INVERT_N U651 ( .A(n846), .Z(n847) );
  INVERT_I U652 ( .A(n132), .Z(n848) );
  INVERT_N U653 ( .A(n848), .Z(n849) );
  INVERT_I U654 ( .A(n131), .Z(n850) );
  INVERT_N U655 ( .A(n850), .Z(n851) );
  INVERT_I U656 ( .A(n993), .Z(n852) );
  INVERT_N U657 ( .A(n852), .Z(n853) );
  INVERT_I U658 ( .A(n928), .Z(n854) );
  INVERT_N U659 ( .A(n854), .Z(n855) );
  INVERT_I U660 ( .A(n128), .Z(n856) );
  INVERT_N U661 ( .A(n856), .Z(n857) );
  INVERT_I U662 ( .A(n977), .Z(n858) );
  INVERT_N U663 ( .A(n858), .Z(n859) );
  INVERT_I U664 ( .A(n124), .Z(n860) );
  INVERT_N U665 ( .A(n860), .Z(n861) );
  INVERT_I U666 ( .A(n123), .Z(n862) );
  INVERT_N U667 ( .A(n862), .Z(n863) );
  INVERT_I U668 ( .A(n122), .Z(n864) );
  INVERT_N U669 ( .A(n864), .Z(n865) );
  INVERT_I U670 ( .A(n939), .Z(n866) );
  INVERT_N U671 ( .A(n866), .Z(n867) );
  INVERT_I U672 ( .A(n952), .Z(n868) );
  INVERT_N U673 ( .A(n868), .Z(n869) );
  INVERT_I U674 ( .A(n119), .Z(n870) );
  INVERT_N U675 ( .A(n870), .Z(n871) );
  INVERT_I U676 ( .A(n1011), .Z(n872) );
  INVERT_N U677 ( .A(n872), .Z(n873) );
  INVERT_I U678 ( .A(n1003), .Z(n874) );
  INVERT_N U679 ( .A(n874), .Z(n875) );
  INVERT_I U680 ( .A(n1023), .Z(n876) );
  INVERT_N U681 ( .A(n876), .Z(n877) );
  INVERT_I U682 ( .A(n1017), .Z(n878) );
  INVERT_N U683 ( .A(n878), .Z(n879) );
  INVERT_I U684 ( .A(n1029), .Z(n880) );
  INVERT_N U685 ( .A(n880), .Z(n881) );
  INVERT_I U686 ( .A(n990), .Z(n882) );
  INVERT_N U687 ( .A(n882), .Z(n883) );
  INVERT_I U688 ( .A(n925), .Z(n884) );
  INVERT_N U689 ( .A(n884), .Z(n885) );
  INVERT_I U690 ( .A(n985), .Z(n886) );
  INVERT_N U691 ( .A(n886), .Z(n887) );
  INVERT_I U692 ( .A(n975), .Z(n888) );
  INVERT_N U693 ( .A(n888), .Z(n889) );
  INVERT_I U694 ( .A(n949), .Z(n890) );
  INVERT_N U695 ( .A(n890), .Z(n891) );
  INVERT_I U696 ( .A(n100), .Z(n892) );
  INVERT_N U697 ( .A(n892), .Z(n893) );
  INVERT_I U698 ( .A(n98), .Z(n894) );
  INVERT_N U699 ( .A(n894), .Z(n895) );
  INVERT_I U700 ( .A(n937), .Z(n896) );
  INVERT_N U701 ( .A(n896), .Z(n897) );
  INVERT_I U702 ( .A(n94), .Z(n898) );
  INVERT_N U703 ( .A(n898), .Z(n899) );
  INVERT_I U704 ( .A(n962), .Z(n900) );
  INVERT_N U705 ( .A(n900), .Z(n901) );
  INVERT_I U706 ( .A(n1009), .Z(n902) );
  INVERT_N U707 ( .A(n902), .Z(n903) );
  INVERT_I U708 ( .A(n1001), .Z(n904) );
  INVERT_N U709 ( .A(n904), .Z(n905) );
  INVERT_I U710 ( .A(n86), .Z(n906) );
  INVERT_N U711 ( .A(n906), .Z(n907) );
  INVERT_I U712 ( .A(n935), .Z(n908) );
  INVERT_N U713 ( .A(n908), .Z(n909) );
  INVERT_I U714 ( .A(n971), .Z(n910) );
  INVERT_N U715 ( .A(n910), .Z(n911) );
  INVERT_I U716 ( .A(n19), .Z(coeff_out68[7]) );
  INVERT_M U717 ( .A(n1243), .Z(n2416) );
  AO22_F U718 ( .A1(n2416), .A2(n2234), .B1(n2937), .B2(n1243), .Z(n195) );
  AO22_F U719 ( .A1(n2416), .A2(n2212), .B1(n2938), .B2(n1243), .Z(n194) );
  AO22_F U720 ( .A1(n2416), .A2(n2344), .B1(n2932), .B2(n1243), .Z(n200) );
  AO22_F U721 ( .A1(n2416), .A2(n2366), .B1(coeff_out68[7]), .B2(n1243), .Z(
        n201) );
  INVERT_N U722 ( .A(n1242), .Z(n1243) );
  INVERT_M U723 ( .A(n1515), .Z(n2417) );
  AO22_F U724 ( .A1(n2417), .A2(n2300), .B1(n2942), .B2(n1515), .Z(n190) );
  AO22_F U725 ( .A1(n2417), .A2(n2234), .B1(n2945), .B2(n1515), .Z(n187) );
  AO22_F U726 ( .A1(n2417), .A2(n2212), .B1(n2946), .B2(n1515), .Z(n186) );
  AO22_F U727 ( .A1(n2417), .A2(n2322), .B1(n2941), .B2(n1515), .Z(n191) );
  INVERT_N U728 ( .A(n1514), .Z(n1515) );
  INVERT_E U729 ( .A(n926), .Z(n924) );
  AND2_H U730 ( .A(n2194), .B(n1072), .Z(n111) );
  INVERT_D U731 ( .A(n111), .Z(n926) );
  INVERT_I U732 ( .A(n929), .Z(n930) );
  INVERT_E U733 ( .A(n933), .Z(n931) );
  AND2_H U734 ( .A(n2196), .B(n1090), .Z(n170) );
  INVERT_D U735 ( .A(n170), .Z(n933) );
  INVERT_E U736 ( .A(n944), .Z(n942) );
  AND2_H U737 ( .A(n2196), .B(n1092), .Z(n169) );
  INVERT_D U738 ( .A(n169), .Z(n944) );
  INVERT_E U739 ( .A(n947), .Z(n945) );
  AND2_H U740 ( .A(n2196), .B(n1083), .Z(n174) );
  INVERT_D U741 ( .A(n174), .Z(n947) );
  INVERT_E U742 ( .A(n950), .Z(n948) );
  AND2_H U743 ( .A(n1083), .B(n1442), .Z(n102) );
  INVERT_D U744 ( .A(n102), .Z(n950) );
  NAND2_E U745 ( .A(n2192), .B(n1083), .Z(n124) );
  INVERT_E U746 ( .A(n957), .Z(n955) );
  AND2_H U747 ( .A(n1962), .B(n1083), .Z(n141) );
  INVERT_D U748 ( .A(n141), .Z(n957) );
  INVERT_E U749 ( .A(n960), .Z(n958) );
  AND2_H U750 ( .A(n2196), .B(n1094), .Z(n168) );
  INVERT_D U751 ( .A(n168), .Z(n960) );
  NAND2_E U752 ( .A(n2196), .B(n1086), .Z(n173) );
  INVERT_E U753 ( .A(n963), .Z(n961) );
  AND2_H U754 ( .A(n1094), .B(n1442), .Z(n92) );
  INVERT_D U755 ( .A(n92), .Z(n963) );
  NAND2BAL_E U756 ( .A(n2194), .B(n1086), .Z(n123) );
  INVERT_E U757 ( .A(n966), .Z(n964) );
  AND2_H U758 ( .A(n1962), .B(n1094), .Z(n136) );
  INVERT_D U759 ( .A(n136), .Z(n966) );
  INVERT_E U760 ( .A(n969), .Z(n967) );
  AND2_H U761 ( .A(n1962), .B(n1086), .Z(n140) );
  INVERT_D U762 ( .A(n140), .Z(n969) );
  NAND2_E U763 ( .A(n2196), .B(n1088), .Z(n171) );
  NAND2BAL_E U764 ( .A(n1962), .B(n1088), .Z(n139) );
  INVERT_E U765 ( .A(n980), .Z(n978) );
  AND2_H U766 ( .A(n1962), .B(n1081), .Z(n142) );
  INVERT_D U767 ( .A(n142), .Z(n980) );
  INVERT_E U768 ( .A(n983), .Z(n981) );
  AND2_H U769 ( .A(n766), .B(n2196), .Z(n153) );
  INVERT_D U770 ( .A(n153), .Z(n983) );
  NAND2_E U771 ( .A(n1962), .B(n766), .Z(n128) );
  INVERT_E U772 ( .A(n988), .Z(n986) );
  AND2_H U773 ( .A(n2197), .B(n768), .Z(n155) );
  INVERT_D U774 ( .A(n155), .Z(n988) );
  INVERT_E U775 ( .A(n991), .Z(n989) );
  AND2_H U776 ( .A(n2193), .B(n768), .Z(n113) );
  INVERT_D U777 ( .A(n113), .Z(n991) );
  INVERT_E U778 ( .A(n994), .Z(n992) );
  AND2_H U779 ( .A(n1963), .B(n768), .Z(n130) );
  INVERT_D U780 ( .A(n130), .Z(n994) );
  INVERT_E U781 ( .A(n999), .Z(n997) );
  AND2_H U782 ( .A(n2197), .B(n760), .Z(n165) );
  INVERT_D U783 ( .A(n165), .Z(n999) );
  INVERT_E U784 ( .A(n1004), .Z(n1002) );
  AND2_H U785 ( .A(n2194), .B(n760), .Z(n117) );
  INVERT_D U786 ( .A(n117), .Z(n1004) );
  NAND2_E U787 ( .A(n1963), .B(n760), .Z(n134) );
  INVERT_E U788 ( .A(n1007), .Z(n1005) );
  AND2_H U789 ( .A(n2197), .B(n759), .Z(n166) );
  INVERT_D U790 ( .A(n166), .Z(n1007) );
  INVERT_E U791 ( .A(n1012), .Z(n1010) );
  AND2_H U792 ( .A(n2193), .B(n759), .Z(n118) );
  INVERT_D U793 ( .A(n118), .Z(n1012) );
  NAND2_E U794 ( .A(n1963), .B(n759), .Z(n135) );
  INVERT_E U795 ( .A(n1015), .Z(n1013) );
  AND2_H U796 ( .A(n2197), .B(n762), .Z(n161) );
  INVERT_D U797 ( .A(n161), .Z(n1015) );
  INVERT_E U798 ( .A(n1018), .Z(n1016) );
  AND2_H U799 ( .A(n2194), .B(n762), .Z(n115) );
  INVERT_D U800 ( .A(n115), .Z(n1018) );
  NAND2_E U801 ( .A(n1963), .B(n762), .Z(n132) );
  INVERT_E U802 ( .A(n1021), .Z(n1019) );
  AND2_H U803 ( .A(n2197), .B(n761), .Z(n163) );
  INVERT_D U804 ( .A(n163), .Z(n1021) );
  INVERT_E U805 ( .A(n1024), .Z(n1022) );
  AND2_H U806 ( .A(n2194), .B(n761), .Z(n116) );
  INVERT_D U807 ( .A(n116), .Z(n1024) );
  NAND2_E U808 ( .A(n1963), .B(n761), .Z(n133) );
  INVERT_E U809 ( .A(n1027), .Z(n1025) );
  AND2_H U810 ( .A(n2197), .B(n764), .Z(n158) );
  INVERT_D U811 ( .A(n158), .Z(n1027) );
  INVERT_E U812 ( .A(n1030), .Z(n1028) );
  AND2_H U813 ( .A(n2194), .B(n764), .Z(n114) );
  INVERT_D U814 ( .A(n114), .Z(n1030) );
  NAND2_E U815 ( .A(n1963), .B(n764), .Z(n131) );
  INVERT_E U816 ( .A(n1033), .Z(n1031) );
  AND2_H U817 ( .A(n766), .B(n1444), .Z(n177) );
  INVERT_D U818 ( .A(n177), .Z(n1033) );
  NAND2_E U819 ( .A(n1072), .B(n1443), .Z(n78) );
  BUFFER_L U820 ( .A(n2943), .Z(coeff_out69[3]) );
  AO22_F U821 ( .A1(n2417), .A2(n2278), .B1(coeff_out69[3]), .B2(n1515), .Z(
        n189) );
  BUFFER_L U822 ( .A(n2935), .Z(coeff_out68[3]) );
  AO22_F U823 ( .A1(n2416), .A2(n2278), .B1(coeff_out68[3]), .B2(n1243), .Z(
        n197) );
  INVERT_H U824 ( .A(n1042), .Z(coeff_out68[4]) );
  AO22_F U825 ( .A1(n2416), .A2(n2300), .B1(n2934), .B2(n1243), .Z(n198) );
  INVERT_H U826 ( .A(n1044), .Z(coeff_out68[5]) );
  AO22_F U827 ( .A1(n2416), .A2(n2322), .B1(n2933), .B2(n1243), .Z(n199) );
  BUFFER_L U828 ( .A(n2931), .Z(coeff_out67[3]) );
  AO22_F U829 ( .A1(n2415), .A2(n2278), .B1(coeff_out67[3]), .B2(n1107), .Z(
        n205) );
  BUFFER_L U830 ( .A(n2930), .Z(coeff_out66[3]) );
  AO22_F U831 ( .A1(n2414), .A2(n2278), .B1(coeff_out66[3]), .B2(n1103), .Z(
        n213) );
  INVERT_H U832 ( .A(n1053), .Z(coeff_out66[4]) );
  AO22_F U833 ( .A1(n2414), .A2(n2300), .B1(n2929), .B2(n1103), .Z(n214) );
  INVERT_H U834 ( .A(n1055), .Z(coeff_out66[5]) );
  AO22_F U835 ( .A1(n2414), .A2(n2322), .B1(n2928), .B2(n1103), .Z(n215) );
  BUFFER_L U836 ( .A(n2927), .Z(coeff_out65[3]) );
  AO22_F U837 ( .A1(n2413), .A2(n2278), .B1(coeff_out65[3]), .B2(n1101), .Z(
        n221) );
  INVERT_I U838 ( .A(n2156), .Z(coeff_out15[4]) );
  INVERT_I U839 ( .A(n2412), .Z(n1061) );
  INVERT_M U840 ( .A(n1061), .Z(n1062) );
  INVERT_H U841 ( .A(n2201), .Z(n2412) );
  INVERT_I U842 ( .A(n1896), .Z(coeff_out45[4]) );
  CLKI_O U843 ( .A(n913), .Z(coeff_out67[7]) );
  CLKI_O U844 ( .A(n915), .Z(coeff_out66[7]) );
  CLKI_O U845 ( .A(n917), .Z(coeff_out65[7]) );
  INVERT_I U846 ( .A(n770), .Z(coeff_out15[7]) );
  CLKI_O U847 ( .A(n919), .Z(coeff_out67[5]) );
  CLKI_O U848 ( .A(n921), .Z(coeff_out65[5]) );
  INVERT_I U849 ( .A(n1694), .Z(coeff_out64[5]) );
  INVERT_I U850 ( .A(n1884), .Z(coeff_out64[4]) );
  INVERT_I U851 ( .A(n1692), .Z(coeff_out62[5]) );
  INVERT_I U852 ( .A(n1882), .Z(coeff_out62[4]) );
  INVERT_I U853 ( .A(n1688), .Z(coeff_out60[5]) );
  INVERT_I U854 ( .A(n1878), .Z(coeff_out60[4]) );
  INVERT_I U855 ( .A(n1684), .Z(coeff_out58[5]) );
  INVERT_I U856 ( .A(n1874), .Z(coeff_out58[4]) );
  INVERT_I U857 ( .A(n1682), .Z(coeff_out56[5]) );
  INVERT_I U858 ( .A(n1870), .Z(coeff_out56[4]) );
  INVERT_I U859 ( .A(n1678), .Z(coeff_out54[5]) );
  INVERT_I U860 ( .A(n1866), .Z(coeff_out54[4]) );
  INVERT_I U861 ( .A(n1674), .Z(coeff_out52[5]) );
  INVERT_I U862 ( .A(n1862), .Z(coeff_out52[4]) );
  INVERT_I U863 ( .A(n1362), .Z(coeff_out50[5]) );
  INVERT_I U864 ( .A(n1860), .Z(coeff_out50[4]) );
  INVERT_I U865 ( .A(n1668), .Z(coeff_out48[5]) );
  INVERT_I U866 ( .A(n1856), .Z(coeff_out48[4]) );
  INVERT_I U867 ( .A(n1756), .Z(coeff_out47[0]) );
  INVERT_I U868 ( .A(n1666), .Z(coeff_out30[5]) );
  INVERT_I U869 ( .A(n1854), .Z(coeff_out30[4]) );
  INVERT_I U870 ( .A(n1662), .Z(coeff_out28[5]) );
  INVERT_I U871 ( .A(n1850), .Z(coeff_out28[4]) );
  INVERT_I U872 ( .A(n1658), .Z(coeff_out26[5]) );
  INVERT_I U873 ( .A(n1846), .Z(coeff_out26[4]) );
  INVERT_I U874 ( .A(n1654), .Z(coeff_out24[5]) );
  INVERT_I U875 ( .A(n1842), .Z(coeff_out24[4]) );
  INVERT_I U876 ( .A(n1650), .Z(coeff_out22[5]) );
  INVERT_I U877 ( .A(n1838), .Z(coeff_out22[4]) );
  INVERT_I U878 ( .A(n1646), .Z(coeff_out20[5]) );
  INVERT_I U879 ( .A(n1834), .Z(coeff_out20[4]) );
  INVERT_I U880 ( .A(n1642), .Z(coeff_out18[5]) );
  INVERT_I U881 ( .A(n1830), .Z(coeff_out18[4]) );
  INVERT_I U882 ( .A(n1638), .Z(coeff_out16[5]) );
  INVERT_I U883 ( .A(n1826), .Z(coeff_out16[4]) );
  INVERT_I U884 ( .A(n1724), .Z(coeff_out13[0]) );
  INVERT_I U885 ( .A(n1720), .Z(coeff_out11[0]) );
  INVERT_I U886 ( .A(n1716), .Z(coeff_out9[0]) );
  INVERT_I U887 ( .A(n1712), .Z(coeff_out7[0]) );
  INVERT_I U888 ( .A(n1708), .Z(coeff_out5[0]) );
  INVERT_I U889 ( .A(n1704), .Z(coeff_out3[0]) );
  INVERT_I U890 ( .A(n1700), .Z(coeff_out1[0]) );
  INVERT_K U891 ( .A(n2203), .Z(n2193) );
  INVERT_K U892 ( .A(n108), .Z(n2195) );
  INVERT_I U893 ( .A(n1822), .Z(coeff_out64[3]) );
  INVERT_I U894 ( .A(n1820), .Z(coeff_out62[3]) );
  INVERT_I U895 ( .A(n1816), .Z(coeff_out60[3]) );
  INVERT_I U896 ( .A(n1812), .Z(coeff_out58[3]) );
  INVERT_I U897 ( .A(n1808), .Z(coeff_out56[3]) );
  INVERT_I U898 ( .A(n1804), .Z(coeff_out54[3]) );
  INVERT_I U899 ( .A(n1800), .Z(coeff_out52[3]) );
  INVERT_I U900 ( .A(n1796), .Z(coeff_out50[3]) );
  INVERT_I U901 ( .A(n1792), .Z(coeff_out48[3]) );
  INVERT_I U902 ( .A(n1788), .Z(coeff_out30[3]) );
  INVERT_I U903 ( .A(n1784), .Z(coeff_out28[3]) );
  INVERT_I U904 ( .A(n1780), .Z(coeff_out26[3]) );
  INVERT_I U905 ( .A(n1776), .Z(coeff_out24[3]) );
  INVERT_I U906 ( .A(n1772), .Z(coeff_out22[3]) );
  INVERT_I U907 ( .A(n1768), .Z(coeff_out20[3]) );
  INVERT_I U908 ( .A(n1764), .Z(coeff_out18[3]) );
  INVERT_I U909 ( .A(n1760), .Z(coeff_out16[3]) );
  INVERT_M U910 ( .A(n1975), .Z(n2418) );
  INVERT_N U911 ( .A(n1974), .Z(n1975) );
  INVERT_I U912 ( .A(n1432), .Z(coeff_out40[2]) );
  INVERT_I U913 ( .A(n1292), .Z(coeff_out43[2]) );
  INVERT_I U914 ( .A(n1288), .Z(coeff_out41[2]) );
  INVERT_I U915 ( .A(n1286), .Z(coeff_out39[2]) );
  INVERT_I U916 ( .A(n1282), .Z(coeff_out37[2]) );
  INVERT_I U917 ( .A(n1278), .Z(coeff_out35[2]) );
  INVERT_I U918 ( .A(n1276), .Z(coeff_out33[2]) );
  NAND2_E U919 ( .A(n156), .B(n756), .Z(n80) );
  NAND2_E U920 ( .A(n159), .B(n1071), .Z(n83) );
  INVERT_I U921 ( .A(coeff_addr[3]), .Z(n2454) );
  INVERT_E U922 ( .A(n1075), .Z(n1073) );
  INVERT_E U923 ( .A(n1079), .Z(n1077) );
  INVERT_J U924 ( .A(n105), .Z(n1081) );
  INVERT_H U925 ( .A(n1084), .Z(n1082) );
  INVERT_K U926 ( .A(n1082), .Z(n1083) );
  INVERT_H U927 ( .A(n28), .Z(n1085) );
  INVERT_K U928 ( .A(n1085), .Z(n1086) );
  INVERT_H U929 ( .A(n771), .Z(n1087) );
  INVERT_H U930 ( .A(n1091), .Z(n1089) );
  INVERT_K U931 ( .A(n1089), .Z(n1090) );
  NAND2_F U932 ( .A(n34), .B(n164), .Z(n95) );
  INVERT_K U933 ( .A(n95), .Z(n1092) );
  INVERT_H U934 ( .A(n35), .Z(n1093) );
  INVERT_K U935 ( .A(n1093), .Z(n1094) );
  INVERT_M U936 ( .A(n1095), .Z(n1096) );
  INVERT_I U937 ( .A(n144), .Z(n1098) );
  INVERT_M U938 ( .A(n1098), .Z(n1099) );
  AND4_I U939 ( .A(coeff_addr[6]), .B(coeff_write), .C(n2453), .D(n2452), .Z(
        n144) );
  INVERT_I U940 ( .A(n1886), .Z(coeff_out70[4]) );
  INVERT_I U941 ( .A(n2038), .Z(coeff_out40[5]) );
  INVERT_I U942 ( .A(n2176), .Z(coeff_out40[4]) );
  INVERT_I U943 ( .A(n2018), .Z(coeff_out15[5]) );
  INVERT_I U944 ( .A(n149), .Z(n1100) );
  NAND2_E U945 ( .A(n1099), .B(n1083), .Z(n149) );
  INVERT_I U946 ( .A(n1696), .Z(coeff_out70[5]) );
  INVERT_I U947 ( .A(n2160), .Z(coeff_out32[4]) );
  INVERT_I U948 ( .A(n2164), .Z(coeff_out34[4]) );
  INVERT_I U949 ( .A(n2168), .Z(coeff_out36[4]) );
  INVERT_I U950 ( .A(n2172), .Z(coeff_out38[4]) );
  INVERT_I U951 ( .A(n2180), .Z(coeff_out42[4]) );
  INVERT_I U952 ( .A(n2188), .Z(coeff_out47[4]) );
  INVERT_I U953 ( .A(n2152), .Z(coeff_out13[4]) );
  INVERT_I U954 ( .A(n2148), .Z(coeff_out11[4]) );
  INVERT_I U955 ( .A(n2144), .Z(coeff_out9[4]) );
  INVERT_I U956 ( .A(n2140), .Z(coeff_out7[4]) );
  INVERT_I U957 ( .A(n2136), .Z(coeff_out5[4]) );
  INVERT_I U958 ( .A(n2132), .Z(coeff_out3[4]) );
  INVERT_I U959 ( .A(n2128), .Z(coeff_out1[4]) );
  INVERT_M U960 ( .A(n867), .Z(n2439) );
  INVERT_M U961 ( .A(n869), .Z(n2440) );
  INVERT_M U962 ( .A(n879), .Z(n2445) );
  INVERT_M U963 ( .A(n881), .Z(n2446) );
  INVERT_M U964 ( .A(n883), .Z(n2447) );
  INVERT_M U965 ( .A(n885), .Z(n2448) );
  INVERT_M U966 ( .A(n887), .Z(n2449) );
  INVERT_M U967 ( .A(n801), .Z(n2397) );
  INVERT_M U968 ( .A(n803), .Z(n2398) );
  INVERT_M U969 ( .A(n805), .Z(n2399) );
  INVERT_M U970 ( .A(n815), .Z(n2404) );
  INVERT_M U971 ( .A(n817), .Z(n2405) );
  INVERT_M U972 ( .A(n827), .Z(n2410) );
  INVERT_I U973 ( .A(n148), .Z(n1102) );
  NAND2_E U974 ( .A(n1099), .B(n1086), .Z(n148) );
  INVERT_I U975 ( .A(n151), .Z(n1104) );
  INVERT_N U976 ( .A(n1104), .Z(n1105) );
  NAND2_E U977 ( .A(n2197), .B(n1096), .Z(n151) );
  INVERT_M U978 ( .A(n859), .Z(n2435) );
  INVERT_M U979 ( .A(n861), .Z(n2436) );
  INVERT_M U980 ( .A(n863), .Z(n2437) );
  INVERT_M U981 ( .A(n865), .Z(n2438) );
  INVERT_M U982 ( .A(n871), .Z(n2441) );
  INVERT_M U983 ( .A(n873), .Z(n2442) );
  INVERT_M U984 ( .A(n875), .Z(n2443) );
  INVERT_M U985 ( .A(n877), .Z(n2444) );
  INVERT_M U986 ( .A(n799), .Z(n2396) );
  INVERT_M U987 ( .A(n807), .Z(n2400) );
  INVERT_M U988 ( .A(n809), .Z(n2401) );
  INVERT_M U989 ( .A(n811), .Z(n2402) );
  INVERT_M U990 ( .A(n813), .Z(n2403) );
  INVERT_M U991 ( .A(n819), .Z(n2406) );
  INVERT_M U992 ( .A(n821), .Z(n2407) );
  INVERT_M U993 ( .A(n823), .Z(n2408) );
  INVERT_M U994 ( .A(n825), .Z(n2409) );
  INVERT_M U995 ( .A(n793), .Z(n2380) );
  INVERT_M U996 ( .A(n889), .Z(n2383) );
  INVERT_M U997 ( .A(n891), .Z(n2384) );
  INVERT_M U998 ( .A(n893), .Z(n2385) );
  INVERT_M U999 ( .A(n895), .Z(n2386) );
  INVERT_M U1000 ( .A(n897), .Z(n2387) );
  INVERT_M U1001 ( .A(n899), .Z(n2388) );
  INVERT_M U1002 ( .A(n901), .Z(n2389) );
  INVERT_M U1003 ( .A(n903), .Z(n2390) );
  INVERT_M U1004 ( .A(n905), .Z(n2391) );
  INVERT_M U1005 ( .A(n907), .Z(n2392) );
  INVERT_M U1006 ( .A(n909), .Z(n2393) );
  INVERT_M U1007 ( .A(n911), .Z(n2394) );
  INVERT_M U1008 ( .A(n795), .Z(n2381) );
  INVERT_M U1009 ( .A(n797), .Z(n2382) );
  INVERT_I U1010 ( .A(n147), .Z(n1106) );
  NAND2_E U1011 ( .A(n1099), .B(n1088), .Z(n147) );
  INVERT_I U1012 ( .A(n126), .Z(n1108) );
  INVERT_N U1013 ( .A(n1108), .Z(n1109) );
  NAND2_E U1014 ( .A(n1963), .B(n1096), .Z(n126) );
  INVERT_I U1015 ( .A(n1110), .Z(coeff_out15[2]) );
  AO22_F U1016 ( .A1(n2434), .A2(n2253), .B1(n2573), .B2(n1109), .Z(n620) );
  AO22_F U1017 ( .A1(n2435), .A2(n2252), .B1(coeff_out16[2]), .B2(n859), .Z(
        n612) );
  AO22_F U1018 ( .A1(n2436), .A2(n2252), .B1(coeff_out17[2]), .B2(n861), .Z(
        n604) );
  AO22_F U1019 ( .A1(n2437), .A2(n2252), .B1(coeff_out18[2]), .B2(n863), .Z(
        n596) );
  AO22_F U1020 ( .A1(n2438), .A2(n2252), .B1(coeff_out19[2]), .B2(n865), .Z(
        n588) );
  AO22_F U1021 ( .A1(n2440), .A2(n2252), .B1(coeff_out21[2]), .B2(n869), .Z(
        n572) );
  AO22_F U1022 ( .A1(n2441), .A2(n2251), .B1(coeff_out22[2]), .B2(n871), .Z(
        n564) );
  AO22_F U1023 ( .A1(n2442), .A2(n2251), .B1(coeff_out23[2]), .B2(n873), .Z(
        n556) );
  AO22_F U1024 ( .A1(n2443), .A2(n2251), .B1(coeff_out24[2]), .B2(n875), .Z(
        n548) );
  AO22_F U1025 ( .A1(n2444), .A2(n2251), .B1(coeff_out25[2]), .B2(n877), .Z(
        n540) );
  AO22_F U1026 ( .A1(n2446), .A2(n2251), .B1(coeff_out27[2]), .B2(n881), .Z(
        n524) );
  AO22_F U1027 ( .A1(n2447), .A2(n2254), .B1(coeff_out28[2]), .B2(n883), .Z(
        n516) );
  AO22_F U1028 ( .A1(n2449), .A2(n2250), .B1(coeff_out30[2]), .B2(n887), .Z(
        n500) );
  AO22_F U1029 ( .A1(n2396), .A2(n2259), .B1(coeff_out48[2]), .B2(n799), .Z(
        n356) );
  AO22_F U1030 ( .A1(n2400), .A2(n2258), .B1(coeff_out52[2]), .B2(n807), .Z(
        n324) );
  AO22_F U1031 ( .A1(n2401), .A2(n2258), .B1(coeff_out53[2]), .B2(n809), .Z(
        n316) );
  AO22_F U1032 ( .A1(n2402), .A2(n2258), .B1(coeff_out54[2]), .B2(n811), .Z(
        n308) );
  AO22_F U1033 ( .A1(n2403), .A2(n2258), .B1(coeff_out55[2]), .B2(n813), .Z(
        n300) );
  AO22_F U1034 ( .A1(n2406), .A2(n2257), .B1(coeff_out58[2]), .B2(n819), .Z(
        n276) );
  AO22_F U1035 ( .A1(n2407), .A2(n2257), .B1(coeff_out59[2]), .B2(n821), .Z(
        n268) );
  AO22_F U1036 ( .A1(n2408), .A2(n2257), .B1(coeff_out60[2]), .B2(n823), .Z(
        n260) );
  AO22_F U1037 ( .A1(n2409), .A2(n2257), .B1(coeff_out61[2]), .B2(n825), .Z(
        n252) );
  AO22_F U1038 ( .A1(n2410), .A2(n2257), .B1(coeff_out62[2]), .B2(n827), .Z(
        n244) );
  AO22_F U1039 ( .A1(n1062), .A2(n2256), .B1(coeff_out64[2]), .B2(n2201), .Z(
        n228) );
  AO22_F U1040 ( .A1(n2416), .A2(n2256), .B1(n2936), .B2(n1243), .Z(n196) );
  AO22_F U1041 ( .A1(n2417), .A2(n2256), .B1(n2944), .B2(n1515), .Z(n188) );
  AO22_F U1042 ( .A1(n2435), .A2(n2230), .B1(n2581), .B2(n859), .Z(n611) );
  AO22_F U1043 ( .A1(n2436), .A2(n2230), .B1(n2588), .B2(n861), .Z(n603) );
  AO22_F U1044 ( .A1(n2437), .A2(n2230), .B1(n2595), .B2(n863), .Z(n595) );
  AO22_F U1045 ( .A1(n2438), .A2(n2230), .B1(n2602), .B2(n865), .Z(n587) );
  AO22_F U1046 ( .A1(n2439), .A2(n2230), .B1(n2609), .B2(n867), .Z(n579) );
  AO22_F U1047 ( .A1(n2441), .A2(n2229), .B1(n2623), .B2(n871), .Z(n563) );
  AO22_F U1048 ( .A1(n2442), .A2(n2229), .B1(n2630), .B2(n873), .Z(n555) );
  AO22_F U1049 ( .A1(n2443), .A2(n2229), .B1(n2637), .B2(n875), .Z(n547) );
  AO22_F U1050 ( .A1(n2444), .A2(n2229), .B1(n2644), .B2(n877), .Z(n539) );
  AO22_F U1051 ( .A1(n2445), .A2(n2229), .B1(n2651), .B2(n879), .Z(n531) );
  AO22_F U1052 ( .A1(n2448), .A2(n2228), .B1(n2672), .B2(n885), .Z(n507) );
  AO22_F U1053 ( .A1(n2396), .A2(n2237), .B1(n2812), .B2(n799), .Z(n355) );
  AO22_F U1054 ( .A1(n2397), .A2(n2237), .B1(n2819), .B2(n801), .Z(n347) );
  AO22_F U1055 ( .A1(n2398), .A2(n2237), .B1(n2826), .B2(n803), .Z(n339) );
  AO22_F U1056 ( .A1(n2400), .A2(n2236), .B1(n2840), .B2(n807), .Z(n323) );
  AO22_F U1057 ( .A1(n2401), .A2(n2236), .B1(n2847), .B2(n809), .Z(n315) );
  AO22_F U1058 ( .A1(n2402), .A2(n2236), .B1(n2854), .B2(n811), .Z(n307) );
  AO22_F U1059 ( .A1(n2403), .A2(n2236), .B1(n2861), .B2(n813), .Z(n299) );
  AO22_F U1060 ( .A1(n2404), .A2(n2236), .B1(n2868), .B2(n815), .Z(n291) );
  AO22_F U1061 ( .A1(n2406), .A2(n2235), .B1(n2882), .B2(n819), .Z(n275) );
  AO22_F U1062 ( .A1(n2407), .A2(n2235), .B1(n2889), .B2(n821), .Z(n267) );
  AO22_F U1063 ( .A1(n2408), .A2(n2235), .B1(n2896), .B2(n823), .Z(n259) );
  AO22_F U1064 ( .A1(n2409), .A2(n2235), .B1(n2903), .B2(n825), .Z(n251) );
  INVERT_I U1065 ( .A(n1224), .Z(coeff_out63[2]) );
  INVERT_M U1066 ( .A(n829), .Z(n2419) );
  INVERT_M U1067 ( .A(n831), .Z(n2420) );
  INVERT_M U1068 ( .A(n833), .Z(n2421) );
  INVERT_M U1069 ( .A(n835), .Z(n2422) );
  INVERT_M U1070 ( .A(n837), .Z(n2423) );
  INVERT_M U1071 ( .A(n839), .Z(n2424) );
  INVERT_M U1072 ( .A(n841), .Z(n2425) );
  INVERT_M U1073 ( .A(n843), .Z(n2426) );
  INVERT_M U1074 ( .A(n845), .Z(n2427) );
  INVERT_M U1075 ( .A(n847), .Z(n2428) );
  INVERT_M U1076 ( .A(n849), .Z(n2429) );
  INVERT_M U1077 ( .A(n851), .Z(n2430) );
  INVERT_M U1078 ( .A(n853), .Z(n2431) );
  INVERT_M U1079 ( .A(n855), .Z(n2432) );
  INVERT_M U1080 ( .A(n857), .Z(n2433) );
  INVERT_I U1081 ( .A(n146), .Z(n1242) );
  NAND2_E U1082 ( .A(n1099), .B(n1090), .Z(n146) );
  NAND2_L U1083 ( .A(n1096), .B(n2195), .Z(n106) );
  INVERT_M U1084 ( .A(n1109), .Z(n2434) );
  AO22_F U1085 ( .A1(n2439), .A2(n2252), .B1(coeff_out20[2]), .B2(n867), .Z(
        n580) );
  AO22_F U1086 ( .A1(n2440), .A2(n2230), .B1(n2616), .B2(n869), .Z(n571) );
  AO22_F U1087 ( .A1(n2445), .A2(n2251), .B1(coeff_out26[2]), .B2(n879), .Z(
        n532) );
  AO22_F U1088 ( .A1(n2446), .A2(n2229), .B1(n2658), .B2(n881), .Z(n523) );
  AO22_F U1089 ( .A1(n2447), .A2(n2232), .B1(n2665), .B2(n883), .Z(n515) );
  AO22_F U1090 ( .A1(n2448), .A2(n2250), .B1(coeff_out29[2]), .B2(n885), .Z(
        n508) );
  AO22_F U1091 ( .A1(n2449), .A2(n2228), .B1(n2679), .B2(n887), .Z(n499) );
  AO22_F U1092 ( .A1(n2397), .A2(n2259), .B1(coeff_out49[2]), .B2(n801), .Z(
        n348) );
  AO22_F U1093 ( .A1(n2399), .A2(n2237), .B1(n2833), .B2(n805), .Z(n331) );
  AO22_F U1094 ( .A1(n2404), .A2(n2258), .B1(coeff_out56[2]), .B2(n815), .Z(
        n292) );
  AO22_F U1095 ( .A1(n2405), .A2(n2236), .B1(n2875), .B2(n817), .Z(n283) );
  AO22_F U1096 ( .A1(n2410), .A2(n2235), .B1(n2910), .B2(n827), .Z(n243) );
  AO22_F U1097 ( .A1(n2411), .A2(n2257), .B1(n2917), .B2(n1105), .Z(n236) );
  AO22_F U1098 ( .A1(n1062), .A2(n2234), .B1(n2925), .B2(n2201), .Z(n227) );
  AO22_F U1099 ( .A1(n2419), .A2(n2255), .B1(n2462), .B2(n829), .Z(n740) );
  AO22_F U1100 ( .A1(n2420), .A2(n2255), .B1(n2469), .B2(n831), .Z(n732) );
  AO22_F U1101 ( .A1(n2421), .A2(n2255), .B1(n2477), .B2(n833), .Z(n724) );
  AO22_F U1102 ( .A1(n2422), .A2(n2255), .B1(n2484), .B2(n835), .Z(n716) );
  AO22_F U1103 ( .A1(n2423), .A2(n2255), .B1(n2492), .B2(n837), .Z(n708) );
  AO22_F U1104 ( .A1(n2424), .A2(n2254), .B1(n2499), .B2(n839), .Z(n700) );
  AO22_F U1105 ( .A1(n2425), .A2(n2254), .B1(n2507), .B2(n841), .Z(n692) );
  AO22_F U1106 ( .A1(n2426), .A2(n2254), .B1(n2514), .B2(n843), .Z(n684) );
  AO22_F U1107 ( .A1(n2427), .A2(n2254), .B1(n2522), .B2(n845), .Z(n676) );
  AO22_F U1108 ( .A1(n2428), .A2(n2254), .B1(n2529), .B2(n847), .Z(n668) );
  AO22_F U1109 ( .A1(n2429), .A2(n2253), .B1(n2537), .B2(n849), .Z(n660) );
  AO22_F U1110 ( .A1(n2430), .A2(n2253), .B1(n2544), .B2(n851), .Z(n652) );
  AO22_F U1111 ( .A1(n2431), .A2(n2253), .B1(n2552), .B2(n853), .Z(n644) );
  AO22_F U1112 ( .A1(n2432), .A2(n2253), .B1(n2559), .B2(n855), .Z(n636) );
  AO22_F U1113 ( .A1(n2433), .A2(n2253), .B1(n2567), .B2(n857), .Z(n628) );
  AO22_F U1114 ( .A1(n2383), .A2(n2250), .B1(n2693), .B2(n889), .Z(n484) );
  AO22_F U1115 ( .A1(n2384), .A2(n2250), .B1(n2701), .B2(n891), .Z(n476) );
  AO22_F U1116 ( .A1(n2386), .A2(n2249), .B1(n2716), .B2(n895), .Z(n460) );
  AO22_F U1117 ( .A1(n2387), .A2(n2249), .B1(n2723), .B2(n897), .Z(n452) );
  AO22_F U1118 ( .A1(n2388), .A2(n2249), .B1(n2731), .B2(n899), .Z(n444) );
  AO22_F U1119 ( .A1(n2389), .A2(n2249), .B1(n2738), .B2(n901), .Z(n436) );
  AO22_F U1120 ( .A1(n2390), .A2(n2249), .B1(n2746), .B2(n903), .Z(n428) );
  AO22_F U1121 ( .A1(n2392), .A2(n2248), .B1(n2762), .B2(n907), .Z(n412) );
  AO22_F U1122 ( .A1(n2393), .A2(n2248), .B1(n2769), .B2(n909), .Z(n404) );
  AO22_F U1123 ( .A1(n2394), .A2(n2248), .B1(n2777), .B2(n911), .Z(n396) );
  INVERT_I U1124 ( .A(n1294), .Z(coeff_out16[6]) );
  AO22_F U1125 ( .A1(n2435), .A2(n2340), .B1(n2577), .B2(n859), .Z(n616) );
  INVERT_I U1126 ( .A(n1296), .Z(coeff_out17[6]) );
  AO22_F U1127 ( .A1(n2436), .A2(n2340), .B1(n2584), .B2(n861), .Z(n608) );
  INVERT_I U1128 ( .A(n1298), .Z(coeff_out18[6]) );
  AO22_F U1129 ( .A1(n2437), .A2(n2340), .B1(n2591), .B2(n863), .Z(n600) );
  INVERT_I U1130 ( .A(n1300), .Z(coeff_out19[6]) );
  AO22_F U1131 ( .A1(n2438), .A2(n2340), .B1(n2598), .B2(n865), .Z(n592) );
  INVERT_I U1132 ( .A(n1302), .Z(coeff_out20[6]) );
  AO22_F U1133 ( .A1(n2439), .A2(n2340), .B1(n2605), .B2(n867), .Z(n584) );
  INVERT_I U1134 ( .A(n1304), .Z(coeff_out21[6]) );
  AO22_F U1135 ( .A1(n2440), .A2(n2340), .B1(n2612), .B2(n869), .Z(n576) );
  INVERT_I U1136 ( .A(n1306), .Z(coeff_out22[6]) );
  AO22_F U1137 ( .A1(n2441), .A2(n2339), .B1(n2619), .B2(n871), .Z(n568) );
  INVERT_I U1138 ( .A(n1308), .Z(coeff_out23[6]) );
  AO22_F U1139 ( .A1(n2442), .A2(n2339), .B1(n2626), .B2(n873), .Z(n560) );
  INVERT_I U1140 ( .A(n1310), .Z(coeff_out24[6]) );
  AO22_F U1141 ( .A1(n2443), .A2(n2339), .B1(n2633), .B2(n875), .Z(n552) );
  INVERT_I U1142 ( .A(n1312), .Z(coeff_out25[6]) );
  AO22_F U1143 ( .A1(n2444), .A2(n2339), .B1(n2640), .B2(n877), .Z(n544) );
  INVERT_I U1144 ( .A(n1314), .Z(coeff_out26[6]) );
  AO22_F U1145 ( .A1(n2445), .A2(n2339), .B1(n2647), .B2(n879), .Z(n536) );
  INVERT_I U1146 ( .A(n1316), .Z(coeff_out27[6]) );
  AO22_F U1147 ( .A1(n2446), .A2(n2339), .B1(n2654), .B2(n881), .Z(n528) );
  INVERT_I U1148 ( .A(n1318), .Z(coeff_out28[6]) );
  AO22_F U1149 ( .A1(n2447), .A2(n2342), .B1(n2661), .B2(n883), .Z(n520) );
  INVERT_I U1150 ( .A(n1320), .Z(coeff_out29[6]) );
  AO22_F U1151 ( .A1(n2448), .A2(n2338), .B1(n2668), .B2(n885), .Z(n512) );
  INVERT_I U1152 ( .A(n1322), .Z(coeff_out30[6]) );
  AO22_F U1153 ( .A1(n2449), .A2(n2338), .B1(n2675), .B2(n887), .Z(n504) );
  INVERT_I U1154 ( .A(n1324), .Z(coeff_out31[6]) );
  AO22_F U1155 ( .A1(n2450), .A2(n2338), .B1(n2682), .B2(n106), .Z(n496) );
  INVERT_I U1156 ( .A(n1326), .Z(coeff_out48[6]) );
  AO22_F U1157 ( .A1(n2396), .A2(n2347), .B1(n2808), .B2(n799), .Z(n360) );
  INVERT_I U1158 ( .A(n1328), .Z(coeff_out49[6]) );
  AO22_F U1159 ( .A1(n2397), .A2(n2347), .B1(n2815), .B2(n801), .Z(n352) );
  INVERT_I U1160 ( .A(n1330), .Z(coeff_out50[6]) );
  AO22_F U1161 ( .A1(n2398), .A2(n2347), .B1(n2822), .B2(n803), .Z(n344) );
  INVERT_I U1162 ( .A(n1332), .Z(coeff_out51[6]) );
  AO22_F U1163 ( .A1(n2399), .A2(n2347), .B1(n2829), .B2(n805), .Z(n336) );
  INVERT_I U1164 ( .A(n1334), .Z(coeff_out52[6]) );
  AO22_F U1165 ( .A1(n2400), .A2(n2346), .B1(n2836), .B2(n807), .Z(n328) );
  INVERT_I U1166 ( .A(n1336), .Z(coeff_out53[6]) );
  AO22_F U1167 ( .A1(n2401), .A2(n2346), .B1(n2843), .B2(n809), .Z(n320) );
  INVERT_I U1168 ( .A(n1338), .Z(coeff_out54[6]) );
  AO22_F U1169 ( .A1(n2402), .A2(n2346), .B1(n2850), .B2(n811), .Z(n312) );
  INVERT_I U1170 ( .A(n1340), .Z(coeff_out55[6]) );
  AO22_F U1171 ( .A1(n2403), .A2(n2346), .B1(n2857), .B2(n813), .Z(n304) );
  INVERT_I U1172 ( .A(n1342), .Z(coeff_out56[6]) );
  AO22_F U1173 ( .A1(n2404), .A2(n2346), .B1(n2864), .B2(n815), .Z(n296) );
  INVERT_I U1174 ( .A(n1344), .Z(coeff_out57[6]) );
  AO22_F U1175 ( .A1(n2405), .A2(n2346), .B1(n2871), .B2(n817), .Z(n288) );
  INVERT_I U1176 ( .A(n1346), .Z(coeff_out58[6]) );
  AO22_F U1177 ( .A1(n2406), .A2(n2345), .B1(n2878), .B2(n819), .Z(n280) );
  INVERT_I U1178 ( .A(n1348), .Z(coeff_out59[6]) );
  AO22_F U1179 ( .A1(n2407), .A2(n2345), .B1(n2885), .B2(n821), .Z(n272) );
  INVERT_I U1180 ( .A(n1350), .Z(coeff_out60[6]) );
  AO22_F U1181 ( .A1(n2408), .A2(n2345), .B1(n2892), .B2(n823), .Z(n264) );
  INVERT_I U1182 ( .A(n1352), .Z(coeff_out61[6]) );
  AO22_F U1183 ( .A1(n2409), .A2(n2345), .B1(n2899), .B2(n825), .Z(n256) );
  INVERT_I U1184 ( .A(n1354), .Z(coeff_out62[6]) );
  AO22_F U1185 ( .A1(n2410), .A2(n2345), .B1(n2906), .B2(n827), .Z(n248) );
  INVERT_I U1186 ( .A(n1356), .Z(coeff_out63[6]) );
  AO22_F U1187 ( .A1(n2411), .A2(n2345), .B1(n2913), .B2(n1105), .Z(n240) );
  INVERT_I U1188 ( .A(n1358), .Z(coeff_out64[6]) );
  AO22_F U1189 ( .A1(n1062), .A2(n2344), .B1(n2921), .B2(n2201), .Z(n232) );
  INVERT_I U1190 ( .A(n1360), .Z(coeff_out69[6]) );
  AO22_F U1191 ( .A1(n2417), .A2(n2344), .B1(n2940), .B2(n1515), .Z(n192) );
  AO22_F U1192 ( .A1(n2398), .A2(n2325), .B1(n2823), .B2(n803), .Z(n343) );
  AO22_F U1193 ( .A1(n2405), .A2(n2324), .B1(n2872), .B2(n817), .Z(n287) );
  AO22_F U1194 ( .A1(n2435), .A2(n2208), .B1(n2582), .B2(n859), .Z(n610) );
  AO22_F U1195 ( .A1(n2436), .A2(n2208), .B1(n2589), .B2(n861), .Z(n602) );
  AO22_F U1196 ( .A1(n2437), .A2(n2208), .B1(n2596), .B2(n863), .Z(n594) );
  AO22_F U1197 ( .A1(n2438), .A2(n2208), .B1(n2603), .B2(n865), .Z(n586) );
  AO22_F U1198 ( .A1(n2439), .A2(n2208), .B1(n2610), .B2(n867), .Z(n578) );
  AO22_F U1199 ( .A1(n2440), .A2(n2208), .B1(n2617), .B2(n869), .Z(n570) );
  AO22_F U1200 ( .A1(n2441), .A2(n2207), .B1(n2624), .B2(n871), .Z(n562) );
  AO22_F U1201 ( .A1(n2442), .A2(n2207), .B1(n2631), .B2(n873), .Z(n554) );
  AO22_F U1202 ( .A1(n2443), .A2(n2207), .B1(n2638), .B2(n875), .Z(n546) );
  AO22_F U1203 ( .A1(n2444), .A2(n2207), .B1(n2645), .B2(n877), .Z(n538) );
  AO22_F U1204 ( .A1(n2445), .A2(n2207), .B1(n2652), .B2(n879), .Z(n530) );
  AO22_F U1205 ( .A1(n2446), .A2(n2207), .B1(n2659), .B2(n881), .Z(n522) );
  AO22_F U1206 ( .A1(n2447), .A2(n2210), .B1(n2666), .B2(n883), .Z(n514) );
  AO22_F U1207 ( .A1(n2448), .A2(n2206), .B1(n2673), .B2(n885), .Z(n506) );
  AO22_F U1208 ( .A1(n2449), .A2(n2206), .B1(n2680), .B2(n887), .Z(n498) );
  AO22_F U1209 ( .A1(n2396), .A2(n2215), .B1(n2813), .B2(n799), .Z(n354) );
  AO22_F U1210 ( .A1(n2397), .A2(n2215), .B1(n2820), .B2(n801), .Z(n346) );
  AO22_F U1211 ( .A1(n2398), .A2(n2215), .B1(n2827), .B2(n803), .Z(n338) );
  AO22_F U1212 ( .A1(n2399), .A2(n2215), .B1(n2834), .B2(n805), .Z(n330) );
  AO22_F U1213 ( .A1(n2400), .A2(n2214), .B1(n2841), .B2(n807), .Z(n322) );
  AO22_F U1214 ( .A1(n2401), .A2(n2214), .B1(n2848), .B2(n809), .Z(n314) );
  AO22_F U1215 ( .A1(n2402), .A2(n2214), .B1(n2855), .B2(n811), .Z(n306) );
  AO22_F U1216 ( .A1(n2403), .A2(n2214), .B1(n2862), .B2(n813), .Z(n298) );
  AO22_F U1217 ( .A1(n2404), .A2(n2214), .B1(n2869), .B2(n815), .Z(n290) );
  AO22_F U1218 ( .A1(n2405), .A2(n2214), .B1(n2876), .B2(n817), .Z(n282) );
  AO22_F U1219 ( .A1(n2406), .A2(n2213), .B1(n2883), .B2(n819), .Z(n274) );
  AO22_F U1220 ( .A1(n2407), .A2(n2213), .B1(n2890), .B2(n821), .Z(n266) );
  AO22_F U1221 ( .A1(n2408), .A2(n2213), .B1(n2897), .B2(n823), .Z(n258) );
  AO22_F U1222 ( .A1(n2409), .A2(n2213), .B1(n2904), .B2(n825), .Z(n250) );
  AO22_F U1223 ( .A1(n2410), .A2(n2213), .B1(n2911), .B2(n827), .Z(n242) );
  AO22_F U1224 ( .A1(n1062), .A2(n2212), .B1(n2926), .B2(n2201), .Z(n226) );
  AO22_F U1225 ( .A1(n2399), .A2(n2303), .B1(n2831), .B2(n805), .Z(n334) );
  INVERT_K U1226 ( .A(n1445), .Z(n2199) );
  INVERT_K U1227 ( .A(n2199), .Z(n1443) );
  INVERT_J U1228 ( .A(n2199), .Z(n1444) );
  INVERT_H U1229 ( .A(n81), .Z(n1445) );
  INVERT_K U1230 ( .A(coeff_addr[6]), .Z(n2451) );
  INVERT_I U1231 ( .A(n1446), .Z(coeff_out16[7]) );
  AO22_F U1232 ( .A1(n2435), .A2(n2362), .B1(n2576), .B2(n859), .Z(n617) );
  INVERT_I U1233 ( .A(n1448), .Z(coeff_out17[7]) );
  AO22_F U1234 ( .A1(n2436), .A2(n2362), .B1(n2583), .B2(n861), .Z(n609) );
  INVERT_I U1235 ( .A(n1450), .Z(coeff_out18[7]) );
  AO22_F U1236 ( .A1(n2437), .A2(n2362), .B1(n2590), .B2(n863), .Z(n601) );
  INVERT_I U1237 ( .A(n1452), .Z(coeff_out19[7]) );
  AO22_F U1238 ( .A1(n2438), .A2(n2362), .B1(n2597), .B2(n865), .Z(n593) );
  INVERT_I U1239 ( .A(n1454), .Z(coeff_out20[7]) );
  AO22_F U1240 ( .A1(n2439), .A2(n2362), .B1(n2604), .B2(n867), .Z(n585) );
  INVERT_I U1241 ( .A(n1456), .Z(coeff_out21[7]) );
  AO22_F U1242 ( .A1(n2440), .A2(n2362), .B1(n2611), .B2(n869), .Z(n577) );
  INVERT_I U1243 ( .A(n1458), .Z(coeff_out22[7]) );
  AO22_F U1244 ( .A1(n2441), .A2(n2361), .B1(n2618), .B2(n871), .Z(n569) );
  INVERT_I U1245 ( .A(n1460), .Z(coeff_out23[7]) );
  AO22_F U1246 ( .A1(n2442), .A2(n2361), .B1(n2625), .B2(n873), .Z(n561) );
  INVERT_I U1247 ( .A(n1462), .Z(coeff_out24[7]) );
  AO22_F U1248 ( .A1(n2443), .A2(n2361), .B1(n2632), .B2(n875), .Z(n553) );
  INVERT_I U1249 ( .A(n1464), .Z(coeff_out25[7]) );
  AO22_F U1250 ( .A1(n2444), .A2(n2361), .B1(n2639), .B2(n877), .Z(n545) );
  INVERT_I U1251 ( .A(n1466), .Z(coeff_out26[7]) );
  AO22_F U1252 ( .A1(n2445), .A2(n2361), .B1(n2646), .B2(n879), .Z(n537) );
  INVERT_I U1253 ( .A(n1468), .Z(coeff_out27[7]) );
  AO22_F U1254 ( .A1(n2446), .A2(n2361), .B1(n2653), .B2(n881), .Z(n529) );
  INVERT_I U1255 ( .A(n1470), .Z(coeff_out28[7]) );
  AO22_F U1256 ( .A1(n2447), .A2(n2360), .B1(n2660), .B2(n883), .Z(n521) );
  INVERT_I U1257 ( .A(n1472), .Z(coeff_out29[7]) );
  AO22_F U1258 ( .A1(n2448), .A2(n2360), .B1(n2667), .B2(n885), .Z(n513) );
  INVERT_I U1259 ( .A(n1474), .Z(coeff_out30[7]) );
  AO22_F U1260 ( .A1(n2449), .A2(n2360), .B1(n2674), .B2(n887), .Z(n505) );
  INVERT_I U1261 ( .A(n1476), .Z(coeff_out31[7]) );
  AO22_F U1262 ( .A1(n2450), .A2(n2360), .B1(n2681), .B2(n106), .Z(n497) );
  INVERT_I U1263 ( .A(n1478), .Z(coeff_out48[7]) );
  AO22_F U1264 ( .A1(n2396), .A2(n2369), .B1(n2807), .B2(n799), .Z(n361) );
  INVERT_I U1265 ( .A(n1480), .Z(coeff_out49[7]) );
  AO22_F U1266 ( .A1(n2397), .A2(n2369), .B1(n2814), .B2(n801), .Z(n353) );
  INVERT_I U1267 ( .A(n1482), .Z(coeff_out50[7]) );
  AO22_F U1268 ( .A1(n2398), .A2(n2369), .B1(n2821), .B2(n803), .Z(n345) );
  INVERT_I U1269 ( .A(n1484), .Z(coeff_out51[7]) );
  AO22_F U1270 ( .A1(n2399), .A2(n2368), .B1(n2828), .B2(n805), .Z(n337) );
  INVERT_I U1271 ( .A(n1486), .Z(coeff_out52[7]) );
  AO22_F U1272 ( .A1(n2400), .A2(n2368), .B1(n2835), .B2(n807), .Z(n329) );
  INVERT_I U1273 ( .A(n1488), .Z(coeff_out53[7]) );
  AO22_F U1274 ( .A1(n2401), .A2(n2368), .B1(n2842), .B2(n809), .Z(n321) );
  INVERT_I U1275 ( .A(n1490), .Z(coeff_out54[7]) );
  AO22_F U1276 ( .A1(n2402), .A2(n2368), .B1(n2849), .B2(n811), .Z(n313) );
  INVERT_I U1277 ( .A(n1492), .Z(coeff_out55[7]) );
  AO22_F U1278 ( .A1(n2403), .A2(n2368), .B1(n2856), .B2(n813), .Z(n305) );
  INVERT_I U1279 ( .A(n1494), .Z(coeff_out56[7]) );
  AO22_F U1280 ( .A1(n2404), .A2(n2368), .B1(n2863), .B2(n815), .Z(n297) );
  INVERT_I U1281 ( .A(n1496), .Z(coeff_out57[7]) );
  AO22_F U1282 ( .A1(n2405), .A2(n2367), .B1(n2870), .B2(n817), .Z(n289) );
  INVERT_I U1283 ( .A(n1498), .Z(coeff_out58[7]) );
  AO22_F U1284 ( .A1(n2406), .A2(n2367), .B1(n2877), .B2(n819), .Z(n281) );
  INVERT_I U1285 ( .A(n1500), .Z(coeff_out59[7]) );
  AO22_F U1286 ( .A1(n2407), .A2(n2367), .B1(n2884), .B2(n821), .Z(n273) );
  INVERT_I U1287 ( .A(n1502), .Z(coeff_out60[7]) );
  AO22_F U1288 ( .A1(n2408), .A2(n2367), .B1(n2891), .B2(n823), .Z(n265) );
  INVERT_I U1289 ( .A(n1504), .Z(coeff_out61[7]) );
  AO22_F U1290 ( .A1(n2409), .A2(n2367), .B1(n2898), .B2(n825), .Z(n257) );
  INVERT_I U1291 ( .A(n1506), .Z(coeff_out62[7]) );
  AO22_F U1292 ( .A1(n2410), .A2(n2367), .B1(n2905), .B2(n827), .Z(n249) );
  INVERT_I U1293 ( .A(n1508), .Z(coeff_out63[7]) );
  AO22_F U1294 ( .A1(n2411), .A2(n2366), .B1(n2912), .B2(n1105), .Z(n241) );
  INVERT_I U1295 ( .A(n1510), .Z(coeff_out64[7]) );
  AO22_F U1296 ( .A1(n1062), .A2(n2366), .B1(n2920), .B2(n2201), .Z(n233) );
  INVERT_I U1297 ( .A(n1512), .Z(coeff_out69[7]) );
  AO22_F U1298 ( .A1(n2417), .A2(n2365), .B1(n2939), .B2(n1515), .Z(n193) );
  INVERT_I U1299 ( .A(n145), .Z(n1514) );
  NAND2_E U1300 ( .A(n1099), .B(n1092), .Z(n145) );
  INVERT_M U1301 ( .A(n1105), .Z(n2411) );
  INVERT_M U1302 ( .A(n106), .Z(n2450) );
  AO22_F U1303 ( .A1(n2385), .A2(n2250), .B1(n2708), .B2(n893), .Z(n468) );
  AO22_F U1304 ( .A1(n2391), .A2(n2249), .B1(n2754), .B2(n905), .Z(n420) );
  AO22_F U1305 ( .A1(n2381), .A2(n2248), .B1(n2797), .B2(n795), .Z(n372) );
  AO22_F U1306 ( .A1(n2382), .A2(n2259), .B1(n2804), .B2(n797), .Z(n364) );
  AO22_F U1307 ( .A1(n2418), .A2(n2255), .B1(n2952), .B2(n1975), .Z(n180) );
  INVERT_I U1308 ( .A(n1516), .Z(coeff_out0[6]) );
  AO22_F U1309 ( .A1(n2419), .A2(n2343), .B1(n2458), .B2(n829), .Z(n744) );
  INVERT_I U1310 ( .A(n1518), .Z(coeff_out1[6]) );
  AO22_F U1311 ( .A1(n2420), .A2(n2343), .B1(n2466), .B2(n831), .Z(n736) );
  INVERT_I U1312 ( .A(n1520), .Z(coeff_out2[6]) );
  AO22_F U1313 ( .A1(n2421), .A2(n2343), .B1(n2473), .B2(n833), .Z(n728) );
  INVERT_I U1314 ( .A(n1522), .Z(coeff_out3[6]) );
  AO22_F U1315 ( .A1(n2422), .A2(n2343), .B1(n2481), .B2(n835), .Z(n720) );
  INVERT_I U1316 ( .A(n1524), .Z(coeff_out4[6]) );
  AO22_F U1317 ( .A1(n2423), .A2(n2343), .B1(n2488), .B2(n837), .Z(n712) );
  INVERT_I U1318 ( .A(n1526), .Z(coeff_out5[6]) );
  AO22_F U1319 ( .A1(n2424), .A2(n2342), .B1(n2496), .B2(n839), .Z(n704) );
  INVERT_I U1320 ( .A(n1528), .Z(coeff_out6[6]) );
  AO22_F U1321 ( .A1(n2425), .A2(n2342), .B1(n2503), .B2(n841), .Z(n696) );
  INVERT_I U1322 ( .A(n1530), .Z(coeff_out7[6]) );
  AO22_F U1323 ( .A1(n2426), .A2(n2342), .B1(n2511), .B2(n843), .Z(n688) );
  INVERT_I U1324 ( .A(n1532), .Z(coeff_out8[6]) );
  AO22_F U1325 ( .A1(n2427), .A2(n2342), .B1(n2518), .B2(n845), .Z(n680) );
  INVERT_I U1326 ( .A(n1534), .Z(coeff_out9[6]) );
  AO22_F U1327 ( .A1(n2428), .A2(n2342), .B1(n2526), .B2(n847), .Z(n672) );
  INVERT_I U1328 ( .A(n1536), .Z(coeff_out10[6]) );
  AO22_F U1329 ( .A1(n2429), .A2(n2341), .B1(n2533), .B2(n849), .Z(n664) );
  INVERT_I U1330 ( .A(n1538), .Z(coeff_out11[6]) );
  AO22_F U1331 ( .A1(n2430), .A2(n2341), .B1(n2541), .B2(n851), .Z(n656) );
  INVERT_I U1332 ( .A(n1540), .Z(coeff_out12[6]) );
  AO22_F U1333 ( .A1(n2431), .A2(n2341), .B1(n2548), .B2(n853), .Z(n648) );
  INVERT_I U1334 ( .A(n1542), .Z(coeff_out13[6]) );
  AO22_F U1335 ( .A1(n2432), .A2(n2341), .B1(n2556), .B2(n855), .Z(n640) );
  INVERT_I U1336 ( .A(n1544), .Z(coeff_out14[6]) );
  AO22_F U1337 ( .A1(n2433), .A2(n2341), .B1(n2563), .B2(n857), .Z(n632) );
  INVERT_I U1338 ( .A(n1546), .Z(coeff_out32[6]) );
  AO22_F U1339 ( .A1(n2383), .A2(n2338), .B1(n2690), .B2(n889), .Z(n488) );
  INVERT_I U1340 ( .A(n1548), .Z(coeff_out33[6]) );
  AO22_F U1341 ( .A1(n2384), .A2(n2338), .B1(n2697), .B2(n891), .Z(n480) );
  INVERT_I U1342 ( .A(n1550), .Z(coeff_out34[6]) );
  AO22_F U1343 ( .A1(n2385), .A2(n2338), .B1(n2705), .B2(n893), .Z(n472) );
  INVERT_I U1344 ( .A(n1552), .Z(coeff_out35[6]) );
  AO22_F U1345 ( .A1(n2386), .A2(n2337), .B1(n2712), .B2(n895), .Z(n464) );
  INVERT_I U1346 ( .A(n1554), .Z(coeff_out36[6]) );
  AO22_F U1347 ( .A1(n2387), .A2(n2337), .B1(n2720), .B2(n897), .Z(n456) );
  INVERT_I U1348 ( .A(n1556), .Z(coeff_out37[6]) );
  AO22_F U1349 ( .A1(n2388), .A2(n2337), .B1(n2727), .B2(n899), .Z(n448) );
  INVERT_I U1350 ( .A(n1558), .Z(coeff_out38[6]) );
  AO22_F U1351 ( .A1(n2389), .A2(n2337), .B1(n2735), .B2(n901), .Z(n440) );
  INVERT_I U1352 ( .A(n1560), .Z(coeff_out39[6]) );
  AO22_F U1353 ( .A1(n2390), .A2(n2337), .B1(n2742), .B2(n903), .Z(n432) );
  INVERT_I U1354 ( .A(n1562), .Z(coeff_out41[6]) );
  AO22_F U1355 ( .A1(n2392), .A2(n2336), .B1(n2758), .B2(n907), .Z(n416) );
  INVERT_I U1356 ( .A(n1564), .Z(coeff_out42[6]) );
  AO22_F U1357 ( .A1(n2393), .A2(n2336), .B1(n2766), .B2(n909), .Z(n408) );
  INVERT_I U1358 ( .A(n1566), .Z(coeff_out43[6]) );
  AO22_F U1359 ( .A1(n2394), .A2(n2336), .B1(n2773), .B2(n911), .Z(n400) );
  INVERT_I U1360 ( .A(n1568), .Z(coeff_out44[6]) );
  AO22_F U1361 ( .A1(n2336), .A2(n2395), .B1(n2781), .B2(n1973), .Z(n392) );
  INVERT_I U1362 ( .A(n1570), .Z(coeff_out45[6]) );
  AO22_F U1363 ( .A1(n2336), .A2(n2380), .B1(n2785), .B2(n793), .Z(n384) );
  INVERT_I U1364 ( .A(n1572), .Z(coeff_out46[6]) );
  AO22_F U1365 ( .A1(n2381), .A2(n2336), .B1(n2793), .B2(n795), .Z(n376) );
  INVERT_I U1366 ( .A(n1574), .Z(coeff_out47[6]) );
  AO22_F U1367 ( .A1(n2382), .A2(n2347), .B1(n2801), .B2(n797), .Z(n368) );
  INVERT_I U1368 ( .A(n1576), .Z(coeff_out70[6]) );
  AO22_F U1369 ( .A1(n2418), .A2(n2343), .B1(n2948), .B2(n1975), .Z(n184) );
  AO22_F U1370 ( .A1(n2419), .A2(n2233), .B1(n2463), .B2(n829), .Z(n739) );
  AO22_F U1371 ( .A1(n2420), .A2(n2233), .B1(n2470), .B2(n831), .Z(n731) );
  AO22_F U1372 ( .A1(n2421), .A2(n2233), .B1(n2478), .B2(n833), .Z(n723) );
  AO22_F U1373 ( .A1(n2422), .A2(n2233), .B1(n2485), .B2(n835), .Z(n715) );
  AO22_F U1374 ( .A1(n2423), .A2(n2233), .B1(n2493), .B2(n837), .Z(n707) );
  AO22_F U1375 ( .A1(n2424), .A2(n2232), .B1(n2500), .B2(n839), .Z(n699) );
  AO22_F U1376 ( .A1(n2425), .A2(n2232), .B1(n2508), .B2(n841), .Z(n691) );
  AO22_F U1377 ( .A1(n2426), .A2(n2232), .B1(n2515), .B2(n843), .Z(n683) );
  AO22_F U1378 ( .A1(n2427), .A2(n2232), .B1(n2523), .B2(n845), .Z(n675) );
  AO22_F U1379 ( .A1(n2428), .A2(n2232), .B1(n2530), .B2(n847), .Z(n667) );
  AO22_F U1380 ( .A1(n2429), .A2(n2231), .B1(n2538), .B2(n849), .Z(n659) );
  AO22_F U1381 ( .A1(n2430), .A2(n2231), .B1(n2545), .B2(n851), .Z(n651) );
  AO22_F U1382 ( .A1(n2431), .A2(n2231), .B1(n2553), .B2(n853), .Z(n643) );
  AO22_F U1383 ( .A1(n2432), .A2(n2231), .B1(n2560), .B2(n855), .Z(n635) );
  AO22_F U1384 ( .A1(n2433), .A2(n2231), .B1(n2568), .B2(n857), .Z(n627) );
  AO22_F U1385 ( .A1(n2383), .A2(n2228), .B1(n2694), .B2(n889), .Z(n483) );
  AO22_F U1386 ( .A1(n2384), .A2(n2228), .B1(n2702), .B2(n891), .Z(n475) );
  AO22_F U1387 ( .A1(n2385), .A2(n2228), .B1(n2709), .B2(n893), .Z(n467) );
  AO22_F U1388 ( .A1(n2386), .A2(n2227), .B1(n2717), .B2(n895), .Z(n459) );
  AO22_F U1389 ( .A1(n2387), .A2(n2227), .B1(n2724), .B2(n897), .Z(n451) );
  AO22_F U1390 ( .A1(n2388), .A2(n2227), .B1(n2732), .B2(n899), .Z(n443) );
  AO22_F U1391 ( .A1(n2389), .A2(n2227), .B1(n2739), .B2(n901), .Z(n435) );
  AO22_F U1392 ( .A1(n2390), .A2(n2227), .B1(n2747), .B2(n903), .Z(n427) );
  AO22_F U1393 ( .A1(n2391), .A2(n2227), .B1(n2755), .B2(n905), .Z(n419) );
  AO22_F U1394 ( .A1(n2392), .A2(n2226), .B1(n2763), .B2(n907), .Z(n411) );
  AO22_F U1395 ( .A1(n2393), .A2(n2226), .B1(n2770), .B2(n909), .Z(n403) );
  AO22_F U1396 ( .A1(n2394), .A2(n2226), .B1(n2778), .B2(n911), .Z(n395) );
  AO22_F U1397 ( .A1(n2381), .A2(n2226), .B1(n2798), .B2(n795), .Z(n371) );
  AO22_F U1398 ( .A1(n2382), .A2(n2237), .B1(n2805), .B2(n797), .Z(n363) );
  AO22_F U1399 ( .A1(n2418), .A2(n2233), .B1(n2953), .B2(n1975), .Z(n179) );
  AO22_F U1400 ( .A1(n2418), .A2(n2321), .B1(n2949), .B2(n1975), .Z(n183) );
  AO22_F U1401 ( .A1(n2419), .A2(n2211), .B1(n2464), .B2(n829), .Z(n738) );
  AO22_F U1402 ( .A1(n2420), .A2(n2211), .B1(n2471), .B2(n831), .Z(n730) );
  AO22_F U1403 ( .A1(n2421), .A2(n2211), .B1(n2479), .B2(n833), .Z(n722) );
  AO22_F U1404 ( .A1(n2422), .A2(n2211), .B1(n2486), .B2(n835), .Z(n714) );
  AO22_F U1405 ( .A1(n2423), .A2(n2211), .B1(n2494), .B2(n837), .Z(n706) );
  AO22_F U1406 ( .A1(n2424), .A2(n2210), .B1(n2501), .B2(n839), .Z(n698) );
  AO22_F U1407 ( .A1(n2425), .A2(n2210), .B1(n2509), .B2(n841), .Z(n690) );
  AO22_F U1408 ( .A1(n2426), .A2(n2210), .B1(n2516), .B2(n843), .Z(n682) );
  AO22_F U1409 ( .A1(n2427), .A2(n2210), .B1(n2524), .B2(n845), .Z(n674) );
  AO22_F U1410 ( .A1(n2428), .A2(n2210), .B1(n2531), .B2(n847), .Z(n666) );
  AO22_F U1411 ( .A1(n2429), .A2(n2209), .B1(n2539), .B2(n849), .Z(n658) );
  AO22_F U1412 ( .A1(n2430), .A2(n2209), .B1(n2546), .B2(n851), .Z(n650) );
  AO22_F U1413 ( .A1(n2431), .A2(n2209), .B1(n2554), .B2(n853), .Z(n642) );
  AO22_F U1414 ( .A1(n2432), .A2(n2209), .B1(n2561), .B2(n855), .Z(n634) );
  AO22_F U1415 ( .A1(n2433), .A2(n2209), .B1(n2569), .B2(n857), .Z(n626) );
  AO22_F U1416 ( .A1(n2383), .A2(n2206), .B1(n2695), .B2(n889), .Z(n482) );
  AO22_F U1417 ( .A1(n2384), .A2(n2206), .B1(n2703), .B2(n891), .Z(n474) );
  AO22_F U1418 ( .A1(n2385), .A2(n2206), .B1(n2710), .B2(n893), .Z(n466) );
  AO22_F U1419 ( .A1(n2386), .A2(n2205), .B1(n2718), .B2(n895), .Z(n458) );
  AO22_F U1420 ( .A1(n2387), .A2(n2205), .B1(n2725), .B2(n897), .Z(n450) );
  AO22_F U1421 ( .A1(n2388), .A2(n2205), .B1(n2733), .B2(n899), .Z(n442) );
  AO22_F U1422 ( .A1(n2389), .A2(n2205), .B1(n2740), .B2(n901), .Z(n434) );
  AO22_F U1423 ( .A1(n2390), .A2(n2205), .B1(n2748), .B2(n903), .Z(n426) );
  AO22_F U1424 ( .A1(n2391), .A2(n2205), .B1(n2756), .B2(n905), .Z(n418) );
  AO22_F U1425 ( .A1(n2392), .A2(n2204), .B1(n2764), .B2(n907), .Z(n410) );
  AO22_F U1426 ( .A1(n2393), .A2(n2204), .B1(n2771), .B2(n909), .Z(n402) );
  AO22_F U1427 ( .A1(n2394), .A2(n2204), .B1(n2779), .B2(n911), .Z(n394) );
  AO22_F U1428 ( .A1(n2204), .A2(n2380), .B1(n2791), .B2(n793), .Z(n378) );
  AO22_F U1429 ( .A1(n2381), .A2(n2204), .B1(n2799), .B2(n795), .Z(n370) );
  AO22_F U1430 ( .A1(n2382), .A2(n2215), .B1(n2806), .B2(n797), .Z(n362) );
  AO22_F U1431 ( .A1(n2418), .A2(n2211), .B1(n2954), .B2(n1975), .Z(n178) );
  AO22_F U1432 ( .A1(n2391), .A2(n2271), .B1(n2753), .B2(n905), .Z(n421) );
  AO22_F U1433 ( .A1(n2418), .A2(n2277), .B1(n2951), .B2(n1975), .Z(n181) );
  AO22_F U1434 ( .A1(n2418), .A2(n2299), .B1(n2950), .B2(n1975), .Z(n182) );
  INVERT_I U1435 ( .A(n1888), .Z(coeff_out40[6]) );
  AO22_F U1436 ( .A1(n2419), .A2(n2365), .B1(n2457), .B2(n829), .Z(n745) );
  AO22_F U1437 ( .A1(n2420), .A2(n2365), .B1(n2465), .B2(n831), .Z(n737) );
  AO22_F U1438 ( .A1(n2421), .A2(n2365), .B1(n2472), .B2(n833), .Z(n729) );
  AO22_F U1439 ( .A1(n2422), .A2(n2365), .B1(n2480), .B2(n835), .Z(n721) );
  AO22_F U1440 ( .A1(n2423), .A2(n2364), .B1(n2487), .B2(n837), .Z(n713) );
  AO22_F U1441 ( .A1(n2424), .A2(n2364), .B1(n2495), .B2(n839), .Z(n705) );
  AO22_F U1442 ( .A1(n2425), .A2(n2364), .B1(n2502), .B2(n841), .Z(n697) );
  AO22_F U1443 ( .A1(n2426), .A2(n2364), .B1(n2510), .B2(n843), .Z(n689) );
  AO22_F U1444 ( .A1(n2427), .A2(n2364), .B1(n2517), .B2(n845), .Z(n681) );
  AO22_F U1445 ( .A1(n2428), .A2(n2364), .B1(n2525), .B2(n847), .Z(n673) );
  AO22_F U1446 ( .A1(n2429), .A2(n2363), .B1(n2532), .B2(n849), .Z(n665) );
  AO22_F U1447 ( .A1(n2430), .A2(n2363), .B1(n2540), .B2(n851), .Z(n657) );
  AO22_F U1448 ( .A1(n2431), .A2(n2363), .B1(n2547), .B2(n853), .Z(n649) );
  AO22_F U1449 ( .A1(n2432), .A2(n2363), .B1(n2555), .B2(n855), .Z(n641) );
  AO22_F U1450 ( .A1(n2433), .A2(n2363), .B1(n2562), .B2(n857), .Z(n633) );
  AO22_F U1451 ( .A1(n2383), .A2(n2360), .B1(n2689), .B2(n889), .Z(n489) );
  AO22_F U1452 ( .A1(n2384), .A2(n2360), .B1(n2696), .B2(n891), .Z(n481) );
  AO22_F U1453 ( .A1(n2385), .A2(n2359), .B1(n2704), .B2(n893), .Z(n473) );
  AO22_F U1454 ( .A1(n2386), .A2(n2359), .B1(n2711), .B2(n895), .Z(n465) );
  AO22_F U1455 ( .A1(n2387), .A2(n2359), .B1(n2719), .B2(n897), .Z(n457) );
  AO22_F U1456 ( .A1(n2388), .A2(n2359), .B1(n2726), .B2(n899), .Z(n449) );
  AO22_F U1457 ( .A1(n2389), .A2(n2359), .B1(n2734), .B2(n901), .Z(n441) );
  AO22_F U1458 ( .A1(n2390), .A2(n2359), .B1(n2741), .B2(n903), .Z(n433) );
  AO22_F U1459 ( .A1(n2391), .A2(n2358), .B1(n2749), .B2(n905), .Z(n425) );
  AO22_F U1460 ( .A1(n2392), .A2(n2358), .B1(n2757), .B2(n907), .Z(n417) );
  AO22_F U1461 ( .A1(n2393), .A2(n2358), .B1(n2765), .B2(n909), .Z(n409) );
  AO22_F U1462 ( .A1(n2394), .A2(n2358), .B1(n2772), .B2(n911), .Z(n401) );
  INVERT_I U1463 ( .A(n1952), .Z(coeff_out44[7]) );
  AO22_F U1464 ( .A1(n2395), .A2(n2358), .B1(n2780), .B2(n1973), .Z(n393) );
  AO22_F U1465 ( .A1(n2358), .A2(n2380), .B1(n2784), .B2(n793), .Z(n385) );
  AO22_F U1466 ( .A1(n2381), .A2(n2369), .B1(n2792), .B2(n795), .Z(n377) );
  AO22_F U1467 ( .A1(n2382), .A2(n2369), .B1(n2800), .B2(n797), .Z(n369) );
  AO22_F U1468 ( .A1(n2418), .A2(n2365), .B1(n2947), .B2(n1975), .Z(n185) );
  AO22_F U1469 ( .A1(n1062), .A2(n2278), .B1(n2924), .B2(n2201), .Z(n229) );
  AO22_F U1470 ( .A1(n1062), .A2(n2300), .B1(n2923), .B2(n2201), .Z(n230) );
  AO22_F U1471 ( .A1(n1062), .A2(n2322), .B1(n2922), .B2(n2201), .Z(n231) );
  AO22_F U1472 ( .A1(n2439), .A2(n2274), .B1(n2608), .B2(n867), .Z(n581) );
  AO22_F U1473 ( .A1(n2439), .A2(n2296), .B1(n2607), .B2(n867), .Z(n582) );
  AO22_F U1474 ( .A1(n2439), .A2(n2318), .B1(n2606), .B2(n867), .Z(n583) );
  AO22_F U1475 ( .A1(n2400), .A2(n2280), .B1(n2839), .B2(n807), .Z(n325) );
  AO22_F U1476 ( .A1(n2400), .A2(n2302), .B1(n2838), .B2(n807), .Z(n326) );
  AO22_F U1477 ( .A1(n2400), .A2(n2324), .B1(n2837), .B2(n807), .Z(n327) );
  AO22_F U1478 ( .A1(n2436), .A2(n2274), .B1(n2587), .B2(n861), .Z(n605) );
  AO22_F U1479 ( .A1(n2436), .A2(n2296), .B1(n2586), .B2(n861), .Z(n606) );
  AO22_F U1480 ( .A1(n2436), .A2(n2318), .B1(n2585), .B2(n861), .Z(n607) );
  AO22_F U1481 ( .A1(n2440), .A2(n2274), .B1(n2615), .B2(n869), .Z(n573) );
  AO22_F U1482 ( .A1(n2440), .A2(n2296), .B1(n2614), .B2(n869), .Z(n574) );
  AO22_F U1483 ( .A1(n2440), .A2(n2318), .B1(n2613), .B2(n869), .Z(n575) );
  AO22_F U1484 ( .A1(n2397), .A2(n2281), .B1(n2818), .B2(n801), .Z(n349) );
  AO22_F U1485 ( .A1(n2397), .A2(n2303), .B1(n2817), .B2(n801), .Z(n350) );
  AO22_F U1486 ( .A1(n2397), .A2(n2325), .B1(n2816), .B2(n801), .Z(n351) );
  AO22_F U1487 ( .A1(n2401), .A2(n2280), .B1(n2846), .B2(n809), .Z(n317) );
  AO22_F U1488 ( .A1(n2401), .A2(n2302), .B1(n2845), .B2(n809), .Z(n318) );
  AO22_F U1489 ( .A1(n2401), .A2(n2324), .B1(n2844), .B2(n809), .Z(n319) );
  AO22_F U1490 ( .A1(n2438), .A2(n2274), .B1(n2601), .B2(n865), .Z(n589) );
  AO22_F U1491 ( .A1(n2438), .A2(n2296), .B1(n2600), .B2(n865), .Z(n590) );
  AO22_F U1492 ( .A1(n2438), .A2(n2318), .B1(n2599), .B2(n865), .Z(n591) );
  AO22_F U1493 ( .A1(n2399), .A2(n2259), .B1(coeff_out51[2]), .B2(n805), .Z(
        n332) );
  AO22_F U1494 ( .A1(n2399), .A2(n2281), .B1(n2832), .B2(n805), .Z(n333) );
  AO22_F U1495 ( .A1(n2399), .A2(n2325), .B1(n2830), .B2(n805), .Z(n335) );
  AO22_F U1496 ( .A1(n2437), .A2(n2274), .B1(n2594), .B2(n863), .Z(n597) );
  AO22_F U1497 ( .A1(n2437), .A2(n2296), .B1(n2593), .B2(n863), .Z(n598) );
  AO22_F U1498 ( .A1(n2437), .A2(n2318), .B1(n2592), .B2(n863), .Z(n599) );
  AO22_F U1499 ( .A1(n2398), .A2(n2259), .B1(coeff_out50[2]), .B2(n803), .Z(
        n340) );
  AO22_F U1500 ( .A1(n2398), .A2(n2281), .B1(n2825), .B2(n803), .Z(n341) );
  AO22_F U1501 ( .A1(n2398), .A2(n2303), .B1(n2824), .B2(n803), .Z(n342) );
  AO22_F U1502 ( .A1(n2396), .A2(n2281), .B1(n2811), .B2(n799), .Z(n357) );
  AO22_F U1503 ( .A1(n2396), .A2(n2303), .B1(n2810), .B2(n799), .Z(n358) );
  AO22_F U1504 ( .A1(n2396), .A2(n2325), .B1(n2809), .B2(n799), .Z(n359) );
  AO22_F U1505 ( .A1(n2402), .A2(n2280), .B1(n2853), .B2(n811), .Z(n309) );
  AO22_F U1506 ( .A1(n2402), .A2(n2302), .B1(n2852), .B2(n811), .Z(n310) );
  AO22_F U1507 ( .A1(n2402), .A2(n2324), .B1(n2851), .B2(n811), .Z(n311) );
  AO22_F U1508 ( .A1(n2409), .A2(n2279), .B1(n2902), .B2(n825), .Z(n253) );
  AO22_F U1509 ( .A1(n2409), .A2(n2301), .B1(n2901), .B2(n825), .Z(n254) );
  AO22_F U1510 ( .A1(n2409), .A2(n2323), .B1(n2900), .B2(n825), .Z(n255) );
  AO22_F U1511 ( .A1(n2410), .A2(n2279), .B1(n2909), .B2(n827), .Z(n245) );
  AO22_F U1512 ( .A1(n2410), .A2(n2301), .B1(n2908), .B2(n827), .Z(n246) );
  AO22_F U1513 ( .A1(n2410), .A2(n2323), .B1(n2907), .B2(n827), .Z(n247) );
  AO22_F U1514 ( .A1(n2449), .A2(n2272), .B1(n2678), .B2(n887), .Z(n501) );
  AO22_F U1515 ( .A1(n2449), .A2(n2294), .B1(n2677), .B2(n887), .Z(n502) );
  AO22_F U1516 ( .A1(n2449), .A2(n2316), .B1(n2676), .B2(n887), .Z(n503) );
  AO22_F U1517 ( .A1(n2403), .A2(n2280), .B1(n2860), .B2(n813), .Z(n301) );
  AO22_F U1518 ( .A1(n2403), .A2(n2302), .B1(n2859), .B2(n813), .Z(n302) );
  AO22_F U1519 ( .A1(n2403), .A2(n2324), .B1(n2858), .B2(n813), .Z(n303) );
  AO22_F U1520 ( .A1(n2404), .A2(n2280), .B1(n2867), .B2(n815), .Z(n293) );
  AO22_F U1521 ( .A1(n2404), .A2(n2302), .B1(n2866), .B2(n815), .Z(n294) );
  AO22_F U1522 ( .A1(n2404), .A2(n2324), .B1(n2865), .B2(n815), .Z(n295) );
  AO22_F U1523 ( .A1(n2405), .A2(n2258), .B1(coeff_out57[2]), .B2(n817), .Z(
        n284) );
  AO22_F U1524 ( .A1(n2405), .A2(n2280), .B1(n2874), .B2(n817), .Z(n285) );
  AO22_F U1525 ( .A1(n2405), .A2(n2302), .B1(n2873), .B2(n817), .Z(n286) );
  AO22_F U1526 ( .A1(n2406), .A2(n2279), .B1(n2881), .B2(n819), .Z(n277) );
  AO22_F U1527 ( .A1(n2406), .A2(n2301), .B1(n2880), .B2(n819), .Z(n278) );
  AO22_F U1528 ( .A1(n2406), .A2(n2323), .B1(n2879), .B2(n819), .Z(n279) );
  AO22_F U1529 ( .A1(n2407), .A2(n2279), .B1(n2888), .B2(n821), .Z(n269) );
  AO22_F U1530 ( .A1(n2407), .A2(n2301), .B1(n2887), .B2(n821), .Z(n270) );
  AO22_F U1531 ( .A1(n2407), .A2(n2323), .B1(n2886), .B2(n821), .Z(n271) );
  AO22_F U1532 ( .A1(n2408), .A2(n2279), .B1(n2895), .B2(n823), .Z(n261) );
  AO22_F U1533 ( .A1(n2408), .A2(n2301), .B1(n2894), .B2(n823), .Z(n262) );
  AO22_F U1534 ( .A1(n2408), .A2(n2323), .B1(n2893), .B2(n823), .Z(n263) );
  AO22_F U1535 ( .A1(n2441), .A2(n2273), .B1(n2622), .B2(n871), .Z(n565) );
  AO22_F U1536 ( .A1(n2441), .A2(n2295), .B1(n2621), .B2(n871), .Z(n566) );
  AO22_F U1537 ( .A1(n2441), .A2(n2317), .B1(n2620), .B2(n871), .Z(n567) );
  AO22_F U1538 ( .A1(n2435), .A2(n2274), .B1(n2580), .B2(n859), .Z(n613) );
  AO22_F U1539 ( .A1(n2435), .A2(n2296), .B1(n2579), .B2(n859), .Z(n614) );
  AO22_F U1540 ( .A1(n2435), .A2(n2318), .B1(n2578), .B2(n859), .Z(n615) );
  AO22_F U1541 ( .A1(n2443), .A2(n2273), .B1(n2636), .B2(n875), .Z(n549) );
  AO22_F U1542 ( .A1(n2443), .A2(n2295), .B1(n2635), .B2(n875), .Z(n550) );
  AO22_F U1543 ( .A1(n2443), .A2(n2317), .B1(n2634), .B2(n875), .Z(n551) );
  AO22_F U1544 ( .A1(n2444), .A2(n2273), .B1(n2643), .B2(n877), .Z(n541) );
  AO22_F U1545 ( .A1(n2444), .A2(n2295), .B1(n2642), .B2(n877), .Z(n542) );
  AO22_F U1546 ( .A1(n2444), .A2(n2317), .B1(n2641), .B2(n877), .Z(n543) );
  AO22_F U1547 ( .A1(n2445), .A2(n2273), .B1(n2650), .B2(n879), .Z(n533) );
  AO22_F U1548 ( .A1(n2445), .A2(n2295), .B1(n2649), .B2(n879), .Z(n534) );
  AO22_F U1549 ( .A1(n2445), .A2(n2317), .B1(n2648), .B2(n879), .Z(n535) );
  AO22_F U1550 ( .A1(n2446), .A2(n2273), .B1(n2657), .B2(n881), .Z(n525) );
  AO22_F U1551 ( .A1(n2446), .A2(n2295), .B1(n2656), .B2(n881), .Z(n526) );
  AO22_F U1552 ( .A1(n2446), .A2(n2317), .B1(n2655), .B2(n881), .Z(n527) );
  AO22_F U1553 ( .A1(n2448), .A2(n2272), .B1(n2671), .B2(n885), .Z(n509) );
  AO22_F U1554 ( .A1(n2448), .A2(n2294), .B1(n2670), .B2(n885), .Z(n510) );
  AO22_F U1555 ( .A1(n2448), .A2(n2316), .B1(n2669), .B2(n885), .Z(n511) );
  AO22_F U1556 ( .A1(n2442), .A2(n2273), .B1(n2629), .B2(n873), .Z(n557) );
  AO22_F U1557 ( .A1(n2442), .A2(n2295), .B1(n2628), .B2(n873), .Z(n558) );
  AO22_F U1558 ( .A1(n2442), .A2(n2317), .B1(n2627), .B2(n873), .Z(n559) );
  AO22_F U1559 ( .A1(n2447), .A2(n2276), .B1(n2664), .B2(n883), .Z(n517) );
  AO22_F U1560 ( .A1(n2447), .A2(n2298), .B1(n2663), .B2(n883), .Z(n518) );
  AO22_F U1561 ( .A1(n2447), .A2(n2320), .B1(n2662), .B2(n883), .Z(n519) );
  INVERT_K U1562 ( .A(n127), .Z(n2202) );
  INVERT_M U1563 ( .A(n2202), .Z(n1962) );
  INVERT_M U1564 ( .A(n2202), .Z(n1963) );
  NOR2_F U1565 ( .A(n1964), .B(n1965), .Z(n127) );
  INVERT_E U1566 ( .A(n2451), .Z(n1966) );
  INVERT_H U1567 ( .A(n2452), .Z(n1967) );
  INVERT_H U1568 ( .A(n2453), .Z(n1968) );
  INVERT_H U1569 ( .A(coeff_write), .Z(n1969) );
  NOR2_D U1570 ( .A(n1966), .B(n1967), .Z(n1970) );
  INVERT_F U1571 ( .A(n1970), .Z(n1964) );
  NOR2_D U1572 ( .A(n1968), .B(n1969), .Z(n1971) );
  INVERT_H U1573 ( .A(n1971), .Z(n1965) );
  INVERT_I U1574 ( .A(coeff_addr[4]), .Z(n2453) );
  INVERT_I U1575 ( .A(n79), .Z(n1972) );
  INVERT_N U1576 ( .A(n1972), .Z(n1973) );
  INVERT_M U1577 ( .A(n1973), .Z(n2395) );
  NAND2_E U1578 ( .A(n768), .B(n1443), .Z(n79) );
  INVERT_I U1579 ( .A(n143), .Z(n1974) );
  NAND2_E U1580 ( .A(n1099), .B(n1094), .Z(n143) );
  AO22_F U1581 ( .A1(n2226), .A2(n2380), .B1(n2790), .B2(n793), .Z(n379) );
  AO22_F U1582 ( .A1(n2248), .A2(n2380), .B1(n2789), .B2(n793), .Z(n380) );
  AO22_F U1583 ( .A1(n2270), .A2(n2380), .B1(n2788), .B2(n793), .Z(n381) );
  AO22_F U1584 ( .A1(n2292), .A2(n2380), .B1(n2787), .B2(n793), .Z(n382) );
  AO22_F U1585 ( .A1(n2314), .A2(n2380), .B1(n2786), .B2(n793), .Z(n383) );
  AO22_F U1586 ( .A1(n2450), .A2(n2250), .B1(n2686), .B2(n106), .Z(n492) );
  AO22_F U1587 ( .A1(n2248), .A2(n2395), .B1(coeff_out44[2]), .B2(n1973), .Z(
        n388) );
  AO22_F U1588 ( .A1(n2434), .A2(n2231), .B1(n2574), .B2(n1109), .Z(n619) );
  AO22_F U1589 ( .A1(n2450), .A2(n2228), .B1(n2687), .B2(n106), .Z(n491) );
  AO22_F U1590 ( .A1(n2226), .A2(n2395), .B1(coeff_out44[1]), .B2(n1973), .Z(
        n387) );
  AO22_F U1591 ( .A1(n2411), .A2(n2235), .B1(n2918), .B2(n1105), .Z(n235) );
  AO22_F U1592 ( .A1(n2434), .A2(n2319), .B1(n2570), .B2(n1109), .Z(n623) );
  AO22_F U1593 ( .A1(n2450), .A2(n2316), .B1(n2683), .B2(n106), .Z(n495) );
  AO22_F U1594 ( .A1(n2314), .A2(n2395), .B1(coeff_out44[5]), .B2(n1973), .Z(
        n391) );
  AO22_F U1595 ( .A1(n2411), .A2(n2323), .B1(n2914), .B2(n1105), .Z(n239) );
  AO22_F U1596 ( .A1(n2434), .A2(n2209), .B1(n2575), .B2(n1109), .Z(n618) );
  AO22_F U1597 ( .A1(n2450), .A2(n2206), .B1(n2688), .B2(n106), .Z(n490) );
  AO22_F U1598 ( .A1(n2204), .A2(n2395), .B1(coeff_out44[0]), .B2(n1973), .Z(
        n386) );
  AO22_F U1599 ( .A1(n2411), .A2(n2213), .B1(n2919), .B2(n1105), .Z(n234) );
  AO22_F U1600 ( .A1(n2434), .A2(n2275), .B1(n2572), .B2(n1109), .Z(n621) );
  AO22_F U1601 ( .A1(n2450), .A2(n2272), .B1(n2685), .B2(n106), .Z(n493) );
  AO22_F U1602 ( .A1(n2270), .A2(n2395), .B1(n2783), .B2(n1973), .Z(n389) );
  AO22_F U1603 ( .A1(n2411), .A2(n2279), .B1(n2916), .B2(n1105), .Z(n237) );
  AO22_F U1604 ( .A1(n2434), .A2(n2297), .B1(n2571), .B2(n1109), .Z(n622) );
  AO22_F U1605 ( .A1(n2450), .A2(n2294), .B1(n2684), .B2(n106), .Z(n494) );
  AO22_F U1606 ( .A1(n2292), .A2(n2395), .B1(n2782), .B2(n1973), .Z(n390) );
  AO22_F U1607 ( .A1(n2411), .A2(n2301), .B1(n2915), .B2(n1105), .Z(n238) );
  AO22_F U1608 ( .A1(n2382), .A2(n2281), .B1(n2803), .B2(n797), .Z(n365) );
  AO22_F U1609 ( .A1(n2382), .A2(n2303), .B1(n2802), .B2(n797), .Z(n366) );
  AO22_F U1610 ( .A1(n2382), .A2(n2325), .B1(coeff_out47[5]), .B2(n797), .Z(
        n367) );
  AO22_F U1611 ( .A1(n2387), .A2(n2271), .B1(n2722), .B2(n897), .Z(n453) );
  AO22_F U1612 ( .A1(n2387), .A2(n2293), .B1(n2721), .B2(n897), .Z(n454) );
  AO22_F U1613 ( .A1(n2387), .A2(n2315), .B1(coeff_out36[5]), .B2(n897), .Z(
        n455) );
  AO22_F U1614 ( .A1(n2384), .A2(n2272), .B1(n2700), .B2(n891), .Z(n477) );
  AO22_F U1615 ( .A1(n2384), .A2(n2294), .B1(n2699), .B2(n891), .Z(n478) );
  AO22_F U1616 ( .A1(n2384), .A2(n2316), .B1(n2698), .B2(n891), .Z(n479) );
  AO22_F U1617 ( .A1(n2388), .A2(n2271), .B1(n2730), .B2(n899), .Z(n445) );
  AO22_F U1618 ( .A1(n2388), .A2(n2293), .B1(n2729), .B2(n899), .Z(n446) );
  AO22_F U1619 ( .A1(n2388), .A2(n2315), .B1(n2728), .B2(n899), .Z(n447) );
  AO22_F U1620 ( .A1(n2386), .A2(n2271), .B1(n2715), .B2(n895), .Z(n461) );
  AO22_F U1621 ( .A1(n2386), .A2(n2293), .B1(n2714), .B2(n895), .Z(n462) );
  AO22_F U1622 ( .A1(n2386), .A2(n2315), .B1(n2713), .B2(n895), .Z(n463) );
  AO22_F U1623 ( .A1(n2385), .A2(n2272), .B1(n2707), .B2(n893), .Z(n469) );
  AO22_F U1624 ( .A1(n2385), .A2(n2294), .B1(n2706), .B2(n893), .Z(n470) );
  AO22_F U1625 ( .A1(n2385), .A2(n2316), .B1(coeff_out34[5]), .B2(n893), .Z(
        n471) );
  AO22_F U1626 ( .A1(n2389), .A2(n2271), .B1(n2737), .B2(n901), .Z(n437) );
  AO22_F U1627 ( .A1(n2389), .A2(n2293), .B1(n2736), .B2(n901), .Z(n438) );
  AO22_F U1628 ( .A1(n2389), .A2(n2315), .B1(coeff_out38[5]), .B2(n901), .Z(
        n439) );
  AO22_F U1629 ( .A1(n2423), .A2(n2277), .B1(n2491), .B2(n837), .Z(n709) );
  AO22_F U1630 ( .A1(n2423), .A2(n2299), .B1(n2490), .B2(n837), .Z(n710) );
  AO22_F U1631 ( .A1(n2423), .A2(n2321), .B1(n2489), .B2(n837), .Z(n711) );
  AO22_F U1632 ( .A1(n2420), .A2(n2277), .B1(n2468), .B2(n831), .Z(n733) );
  AO22_F U1633 ( .A1(n2420), .A2(n2299), .B1(n2467), .B2(n831), .Z(n734) );
  AO22_F U1634 ( .A1(n2420), .A2(n2321), .B1(coeff_out1[5]), .B2(n831), .Z(
        n735) );
  AO22_F U1635 ( .A1(n2424), .A2(n2276), .B1(n2498), .B2(n839), .Z(n701) );
  AO22_F U1636 ( .A1(n2424), .A2(n2298), .B1(n2497), .B2(n839), .Z(n702) );
  AO22_F U1637 ( .A1(n2424), .A2(n2320), .B1(coeff_out5[5]), .B2(n839), .Z(
        n703) );
  AO22_F U1638 ( .A1(n2422), .A2(n2277), .B1(n2483), .B2(n835), .Z(n717) );
  AO22_F U1639 ( .A1(n2422), .A2(n2299), .B1(n2482), .B2(n835), .Z(n718) );
  AO22_F U1640 ( .A1(n2422), .A2(n2321), .B1(coeff_out3[5]), .B2(n835), .Z(
        n719) );
  AO22_F U1641 ( .A1(n2421), .A2(n2277), .B1(n2476), .B2(n833), .Z(n725) );
  AO22_F U1642 ( .A1(n2421), .A2(n2299), .B1(n2475), .B2(n833), .Z(n726) );
  AO22_F U1643 ( .A1(n2421), .A2(n2321), .B1(n2474), .B2(n833), .Z(n727) );
  AO22_F U1644 ( .A1(n2425), .A2(n2276), .B1(n2506), .B2(n841), .Z(n693) );
  AO22_F U1645 ( .A1(n2425), .A2(n2298), .B1(n2505), .B2(n841), .Z(n694) );
  AO22_F U1646 ( .A1(n2425), .A2(n2320), .B1(n2504), .B2(n841), .Z(n695) );
  AO22_F U1647 ( .A1(n2431), .A2(n2275), .B1(n2551), .B2(n853), .Z(n645) );
  AO22_F U1648 ( .A1(n2431), .A2(n2297), .B1(n2550), .B2(n853), .Z(n646) );
  AO22_F U1649 ( .A1(n2431), .A2(n2319), .B1(n2549), .B2(n853), .Z(n647) );
  AO22_F U1650 ( .A1(n2383), .A2(n2272), .B1(n2692), .B2(n889), .Z(n485) );
  AO22_F U1651 ( .A1(n2383), .A2(n2294), .B1(n2691), .B2(n889), .Z(n486) );
  AO22_F U1652 ( .A1(n2383), .A2(n2316), .B1(coeff_out32[5]), .B2(n889), .Z(
        n487) );
  AO22_F U1653 ( .A1(n2390), .A2(n2271), .B1(n2745), .B2(n903), .Z(n429) );
  AO22_F U1654 ( .A1(n2390), .A2(n2293), .B1(n2744), .B2(n903), .Z(n430) );
  AO22_F U1655 ( .A1(n2390), .A2(n2315), .B1(n2743), .B2(n903), .Z(n431) );
  AO22_F U1656 ( .A1(n2391), .A2(n2293), .B1(n2752), .B2(n905), .Z(n422) );
  AO22_F U1657 ( .A1(n2391), .A2(n2315), .B1(n2751), .B2(n905), .Z(n423) );
  AO22_F U1658 ( .A1(n2391), .A2(n2337), .B1(n2750), .B2(n905), .Z(n424) );
  AO22_F U1659 ( .A1(n2392), .A2(n2270), .B1(n2761), .B2(n907), .Z(n413) );
  AO22_F U1660 ( .A1(n2392), .A2(n2292), .B1(n2760), .B2(n907), .Z(n414) );
  AO22_F U1661 ( .A1(n2392), .A2(n2314), .B1(n2759), .B2(n907), .Z(n415) );
  AO22_F U1662 ( .A1(n2393), .A2(n2270), .B1(n2768), .B2(n909), .Z(n405) );
  AO22_F U1663 ( .A1(n2393), .A2(n2292), .B1(n2767), .B2(n909), .Z(n406) );
  AO22_F U1664 ( .A1(n2393), .A2(n2314), .B1(coeff_out42[5]), .B2(n909), .Z(
        n407) );
  AO22_F U1665 ( .A1(n2394), .A2(n2270), .B1(n2776), .B2(n911), .Z(n397) );
  AO22_F U1666 ( .A1(n2394), .A2(n2292), .B1(n2775), .B2(n911), .Z(n398) );
  AO22_F U1667 ( .A1(n2394), .A2(n2314), .B1(n2774), .B2(n911), .Z(n399) );
  AO22_F U1668 ( .A1(n2381), .A2(n2270), .B1(n2796), .B2(n795), .Z(n373) );
  AO22_F U1669 ( .A1(n2381), .A2(n2292), .B1(n2795), .B2(n795), .Z(n374) );
  AO22_F U1670 ( .A1(n2381), .A2(n2314), .B1(n2794), .B2(n795), .Z(n375) );
  AO22_F U1671 ( .A1(n2419), .A2(n2277), .B1(n2461), .B2(n829), .Z(n741) );
  AO22_F U1672 ( .A1(n2419), .A2(n2299), .B1(n2460), .B2(n829), .Z(n742) );
  AO22_F U1673 ( .A1(n2419), .A2(n2321), .B1(n2459), .B2(n829), .Z(n743) );
  AO22_F U1674 ( .A1(n2426), .A2(n2276), .B1(n2513), .B2(n843), .Z(n685) );
  AO22_F U1675 ( .A1(n2426), .A2(n2298), .B1(n2512), .B2(n843), .Z(n686) );
  AO22_F U1676 ( .A1(n2426), .A2(n2320), .B1(coeff_out7[5]), .B2(n843), .Z(
        n687) );
  AO22_F U1677 ( .A1(n2427), .A2(n2276), .B1(n2521), .B2(n845), .Z(n677) );
  AO22_F U1678 ( .A1(n2427), .A2(n2298), .B1(n2520), .B2(n845), .Z(n678) );
  AO22_F U1679 ( .A1(n2427), .A2(n2320), .B1(n2519), .B2(n845), .Z(n679) );
  AO22_F U1680 ( .A1(n2428), .A2(n2276), .B1(n2528), .B2(n847), .Z(n669) );
  AO22_F U1681 ( .A1(n2428), .A2(n2298), .B1(n2527), .B2(n847), .Z(n670) );
  AO22_F U1682 ( .A1(n2428), .A2(n2320), .B1(coeff_out9[5]), .B2(n847), .Z(
        n671) );
  AO22_F U1683 ( .A1(n2429), .A2(n2275), .B1(n2536), .B2(n849), .Z(n661) );
  AO22_F U1684 ( .A1(n2429), .A2(n2297), .B1(n2535), .B2(n849), .Z(n662) );
  AO22_F U1685 ( .A1(n2429), .A2(n2319), .B1(n2534), .B2(n849), .Z(n663) );
  AO22_F U1686 ( .A1(n2430), .A2(n2275), .B1(n2543), .B2(n851), .Z(n653) );
  AO22_F U1687 ( .A1(n2430), .A2(n2297), .B1(n2542), .B2(n851), .Z(n654) );
  AO22_F U1688 ( .A1(n2430), .A2(n2319), .B1(coeff_out11[5]), .B2(n851), .Z(
        n655) );
  AO22_F U1689 ( .A1(n2432), .A2(n2275), .B1(n2558), .B2(n855), .Z(n637) );
  AO22_F U1690 ( .A1(n2432), .A2(n2297), .B1(n2557), .B2(n855), .Z(n638) );
  AO22_F U1691 ( .A1(n2432), .A2(n2319), .B1(coeff_out13[5]), .B2(n855), .Z(
        n639) );
  AO22_F U1692 ( .A1(n2433), .A2(n2275), .B1(n2566), .B2(n857), .Z(n629) );
  AO22_F U1693 ( .A1(n2433), .A2(n2297), .B1(n2565), .B2(n857), .Z(n630) );
  AO22_F U1694 ( .A1(n2433), .A2(n2319), .B1(n2564), .B2(n857), .Z(n631) );
  INVERT_K U1695 ( .A(n2195), .Z(n2203) );
  INVERT_I U1696 ( .A(n2203), .Z(n2192) );
  NAND4_D U1697 ( .A(coeff_addr[4]), .B(coeff_write), .C(n2452), .D(n2451), 
        .Z(n108) );
  INVERT_I U1698 ( .A(coeff_addr[5]), .Z(n2452) );
  INVERT_K U1699 ( .A(n2198), .Z(n2200) );
  INVERT_M U1700 ( .A(n2200), .Z(n2196) );
  INVERT_H U1701 ( .A(n152), .Z(n2198) );
  INVERT_K U1702 ( .A(coeff_in[0]), .Z(n2225) );
  INVERT_K U1703 ( .A(coeff_in[1]), .Z(n2247) );
  INVERT_K U1704 ( .A(coeff_in[2]), .Z(n2269) );
  INVERT_K U1705 ( .A(coeff_in[3]), .Z(n2291) );
  INVERT_K U1706 ( .A(coeff_in[4]), .Z(n2313) );
  INVERT_K U1707 ( .A(coeff_in[5]), .Z(n2335) );
  INVERT_K U1708 ( .A(coeff_in[6]), .Z(n2357) );
  INVERT_K U1709 ( .A(coeff_in[7]), .Z(n2379) );
  INVERT_I U1710 ( .A(n2225), .Z(n2224) );
  INVERT_I U1711 ( .A(n2247), .Z(n2246) );
  INVERT_I U1712 ( .A(n2269), .Z(n2268) );
  INVERT_I U1713 ( .A(n2291), .Z(n2290) );
  INVERT_I U1714 ( .A(n2313), .Z(n2312) );
  INVERT_I U1715 ( .A(n2335), .Z(n2334) );
  INVERT_I U1716 ( .A(n2357), .Z(n2356) );
  INVERT_I U1717 ( .A(n2379), .Z(n2378) );
  INVERT_I U1718 ( .A(n2225), .Z(n2222) );
  INVERT_I U1719 ( .A(n2247), .Z(n2244) );
  INVERT_I U1720 ( .A(n2269), .Z(n2266) );
  INVERT_I U1721 ( .A(n2291), .Z(n2288) );
  INVERT_I U1722 ( .A(n2313), .Z(n2310) );
  INVERT_I U1723 ( .A(n2335), .Z(n2332) );
  INVERT_I U1724 ( .A(n2357), .Z(n2354) );
  INVERT_I U1725 ( .A(n2379), .Z(n2376) );
  INVERT_I U1726 ( .A(n2225), .Z(n2223) );
  INVERT_I U1727 ( .A(n2247), .Z(n2245) );
  INVERT_I U1728 ( .A(n2269), .Z(n2267) );
  INVERT_I U1729 ( .A(n2291), .Z(n2289) );
  INVERT_I U1730 ( .A(n2313), .Z(n2311) );
  INVERT_I U1731 ( .A(n2335), .Z(n2333) );
  INVERT_I U1732 ( .A(n2357), .Z(n2355) );
  INVERT_I U1733 ( .A(n2379), .Z(n2377) );
  INVERT_J U1734 ( .A(n2224), .Z(n2217) );
  INVERT_J U1735 ( .A(n2246), .Z(n2239) );
  INVERT_J U1736 ( .A(n2268), .Z(n2261) );
  INVERT_J U1737 ( .A(n2290), .Z(n2283) );
  INVERT_J U1738 ( .A(n2312), .Z(n2305) );
  INVERT_J U1739 ( .A(n2334), .Z(n2327) );
  INVERT_J U1740 ( .A(n2356), .Z(n2349) );
  INVERT_J U1741 ( .A(n2378), .Z(n2371) );
  INVERT_J U1742 ( .A(n2222), .Z(n2221) );
  INVERT_J U1743 ( .A(n2244), .Z(n2243) );
  INVERT_J U1744 ( .A(n2266), .Z(n2265) );
  INVERT_J U1745 ( .A(n2288), .Z(n2287) );
  INVERT_J U1746 ( .A(n2310), .Z(n2309) );
  INVERT_J U1747 ( .A(n2332), .Z(n2331) );
  INVERT_J U1748 ( .A(n2354), .Z(n2353) );
  INVERT_J U1749 ( .A(n2376), .Z(n2375) );
  INVERT_J U1750 ( .A(n2222), .Z(n2220) );
  INVERT_J U1751 ( .A(n2244), .Z(n2242) );
  INVERT_J U1752 ( .A(n2266), .Z(n2264) );
  INVERT_J U1753 ( .A(n2288), .Z(n2286) );
  INVERT_J U1754 ( .A(n2310), .Z(n2308) );
  INVERT_J U1755 ( .A(n2332), .Z(n2330) );
  INVERT_J U1756 ( .A(n2354), .Z(n2352) );
  INVERT_J U1757 ( .A(n2376), .Z(n2374) );
  INVERT_J U1758 ( .A(n2223), .Z(n2219) );
  INVERT_J U1759 ( .A(n2245), .Z(n2241) );
  INVERT_J U1760 ( .A(n2267), .Z(n2263) );
  INVERT_J U1761 ( .A(n2289), .Z(n2285) );
  INVERT_J U1762 ( .A(n2311), .Z(n2307) );
  INVERT_J U1763 ( .A(n2333), .Z(n2329) );
  INVERT_J U1764 ( .A(n2355), .Z(n2351) );
  INVERT_J U1765 ( .A(n2377), .Z(n2373) );
  INVERT_J U1766 ( .A(n2223), .Z(n2218) );
  INVERT_J U1767 ( .A(n2245), .Z(n2240) );
  INVERT_J U1768 ( .A(n2267), .Z(n2262) );
  INVERT_J U1769 ( .A(n2289), .Z(n2284) );
  INVERT_J U1770 ( .A(n2311), .Z(n2306) );
  INVERT_J U1771 ( .A(n2333), .Z(n2328) );
  INVERT_J U1772 ( .A(n2355), .Z(n2350) );
  INVERT_J U1773 ( .A(n2377), .Z(n2372) );
  INVERT_J U1774 ( .A(n2224), .Z(n2216) );
  INVERT_J U1775 ( .A(n2246), .Z(n2238) );
  INVERT_J U1776 ( .A(n2268), .Z(n2260) );
  INVERT_J U1777 ( .A(n2290), .Z(n2282) );
  INVERT_J U1778 ( .A(n2312), .Z(n2304) );
  INVERT_J U1779 ( .A(n2334), .Z(n2326) );
  INVERT_J U1780 ( .A(n2356), .Z(n2348) );
  INVERT_J U1781 ( .A(n2378), .Z(n2370) );
  INVERT_K U1782 ( .A(n2221), .Z(n2204) );
  INVERT_K U1783 ( .A(n2243), .Z(n2226) );
  INVERT_K U1784 ( .A(n2265), .Z(n2248) );
  INVERT_K U1785 ( .A(n2287), .Z(n2270) );
  INVERT_K U1786 ( .A(n2309), .Z(n2292) );
  INVERT_K U1787 ( .A(n2331), .Z(n2314) );
  INVERT_K U1788 ( .A(n2353), .Z(n2336) );
  INVERT_K U1789 ( .A(n2375), .Z(n2358) );
  INVERT_K U1790 ( .A(n2217), .Z(n2212) );
  INVERT_K U1791 ( .A(n2239), .Z(n2234) );
  INVERT_K U1792 ( .A(n2261), .Z(n2256) );
  INVERT_K U1793 ( .A(n2283), .Z(n2278) );
  INVERT_K U1794 ( .A(n2305), .Z(n2300) );
  INVERT_K U1795 ( .A(n2327), .Z(n2322) );
  INVERT_K U1796 ( .A(n2349), .Z(n2344) );
  INVERT_K U1797 ( .A(n2371), .Z(n2366) );
  INVERT_K U1798 ( .A(n2217), .Z(n2213) );
  INVERT_K U1799 ( .A(n2239), .Z(n2235) );
  INVERT_K U1800 ( .A(n2261), .Z(n2257) );
  INVERT_K U1801 ( .A(n2283), .Z(n2279) );
  INVERT_K U1802 ( .A(n2305), .Z(n2301) );
  INVERT_K U1803 ( .A(n2327), .Z(n2323) );
  INVERT_K U1804 ( .A(n2349), .Z(n2345) );
  INVERT_K U1805 ( .A(n2371), .Z(n2367) );
  INVERT_K U1806 ( .A(n2216), .Z(n2214) );
  INVERT_K U1807 ( .A(n2238), .Z(n2236) );
  INVERT_K U1808 ( .A(n2260), .Z(n2258) );
  INVERT_K U1809 ( .A(n2282), .Z(n2280) );
  INVERT_K U1810 ( .A(n2304), .Z(n2302) );
  INVERT_K U1811 ( .A(n2326), .Z(n2324) );
  INVERT_K U1812 ( .A(n2348), .Z(n2346) );
  INVERT_K U1813 ( .A(n2370), .Z(n2368) );
  INVERT_K U1814 ( .A(n2221), .Z(n2205) );
  INVERT_K U1815 ( .A(n2243), .Z(n2227) );
  INVERT_K U1816 ( .A(n2265), .Z(n2249) );
  INVERT_K U1817 ( .A(n2287), .Z(n2271) );
  INVERT_K U1818 ( .A(n2309), .Z(n2293) );
  INVERT_K U1819 ( .A(n2331), .Z(n2315) );
  INVERT_K U1820 ( .A(n2353), .Z(n2337) );
  INVERT_K U1821 ( .A(n2375), .Z(n2359) );
  INVERT_K U1822 ( .A(n2220), .Z(n2206) );
  INVERT_K U1823 ( .A(n2242), .Z(n2228) );
  INVERT_K U1824 ( .A(n2264), .Z(n2250) );
  INVERT_K U1825 ( .A(n2286), .Z(n2272) );
  INVERT_K U1826 ( .A(n2308), .Z(n2294) );
  INVERT_K U1827 ( .A(n2330), .Z(n2316) );
  INVERT_K U1828 ( .A(n2352), .Z(n2338) );
  INVERT_K U1829 ( .A(n2374), .Z(n2360) );
  INVERT_K U1830 ( .A(n2220), .Z(n2207) );
  INVERT_K U1831 ( .A(n2242), .Z(n2229) );
  INVERT_K U1832 ( .A(n2264), .Z(n2251) );
  INVERT_K U1833 ( .A(n2286), .Z(n2273) );
  INVERT_K U1834 ( .A(n2308), .Z(n2295) );
  INVERT_K U1835 ( .A(n2330), .Z(n2317) );
  INVERT_K U1836 ( .A(n2352), .Z(n2339) );
  INVERT_K U1837 ( .A(n2374), .Z(n2361) );
  INVERT_K U1838 ( .A(n2219), .Z(n2208) );
  INVERT_K U1839 ( .A(n2241), .Z(n2230) );
  INVERT_K U1840 ( .A(n2263), .Z(n2252) );
  INVERT_K U1841 ( .A(n2285), .Z(n2274) );
  INVERT_K U1842 ( .A(n2307), .Z(n2296) );
  INVERT_K U1843 ( .A(n2329), .Z(n2318) );
  INVERT_K U1844 ( .A(n2351), .Z(n2340) );
  INVERT_K U1845 ( .A(n2373), .Z(n2362) );
  INVERT_K U1846 ( .A(n2219), .Z(n2209) );
  INVERT_K U1847 ( .A(n2241), .Z(n2231) );
  INVERT_K U1848 ( .A(n2263), .Z(n2253) );
  INVERT_K U1849 ( .A(n2285), .Z(n2275) );
  INVERT_K U1850 ( .A(n2307), .Z(n2297) );
  INVERT_K U1851 ( .A(n2329), .Z(n2319) );
  INVERT_K U1852 ( .A(n2351), .Z(n2341) );
  INVERT_K U1853 ( .A(n2373), .Z(n2363) );
  INVERT_K U1854 ( .A(n2218), .Z(n2210) );
  INVERT_K U1855 ( .A(n2240), .Z(n2232) );
  INVERT_K U1856 ( .A(n2262), .Z(n2254) );
  INVERT_K U1857 ( .A(n2284), .Z(n2276) );
  INVERT_K U1858 ( .A(n2306), .Z(n2298) );
  INVERT_K U1859 ( .A(n2328), .Z(n2320) );
  INVERT_K U1860 ( .A(n2350), .Z(n2342) );
  INVERT_K U1861 ( .A(n2372), .Z(n2364) );
  INVERT_K U1862 ( .A(n2218), .Z(n2211) );
  INVERT_K U1863 ( .A(n2240), .Z(n2233) );
  INVERT_K U1864 ( .A(n2262), .Z(n2255) );
  INVERT_K U1865 ( .A(n2284), .Z(n2277) );
  INVERT_K U1866 ( .A(n2306), .Z(n2299) );
  INVERT_K U1867 ( .A(n2328), .Z(n2321) );
  INVERT_K U1868 ( .A(n2350), .Z(n2343) );
  INVERT_K U1869 ( .A(n2372), .Z(n2365) );
  INVERT_J U1870 ( .A(n2216), .Z(n2215) );
  INVERT_J U1871 ( .A(n2238), .Z(n2237) );
  INVERT_J U1872 ( .A(n2260), .Z(n2259) );
  INVERT_J U1873 ( .A(n2282), .Z(n2281) );
  INVERT_J U1874 ( .A(n2304), .Z(n2303) );
  INVERT_J U1875 ( .A(n2326), .Z(n2325) );
  INVERT_J U1876 ( .A(n2348), .Z(n2347) );
  INVERT_J U1877 ( .A(n2370), .Z(n2369) );
  NAND2_D U1878 ( .A(n1962), .B(n1072), .Z(n129) );
  NAND2_D U1879 ( .A(n1099), .B(n1081), .Z(n150) );
  NAND2_D U1880 ( .A(n2192), .B(n1090), .Z(n121) );
  NAND2_D U1881 ( .A(n1962), .B(n1090), .Z(n138) );
  NAND2_D U1882 ( .A(n2192), .B(n1092), .Z(n120) );
  NAND2_D U1883 ( .A(n1962), .B(n1092), .Z(n137) );
  NAND2_D U1884 ( .A(n764), .B(n1444), .Z(n82) );
  NAND2_D U1885 ( .A(n2196), .B(n1081), .Z(n175) );
  NAND2_D U1886 ( .A(n1443), .B(n1081), .Z(n104) );
  NAND2_D U1887 ( .A(n2193), .B(n1081), .Z(n125) );
  NAND2_D U1888 ( .A(n766), .B(n2192), .Z(n109) );
  NAND2_D U1889 ( .A(n1096), .B(n1444), .Z(n176) );
  NAND2_D U1890 ( .A(n760), .B(n1444), .Z(n88) );
  NAND2_D U1891 ( .A(n759), .B(n1444), .Z(n90) );
  CLK_Q U1892 ( .A(n930), .Z(n2201) );
endmodule


module fir_filter ( clk, sample_in, coeff_write, coeff_in, coeff_addr, fir_out
 );
  input [3:0] sample_in;
  input [7:0] coeff_in;
  input [6:0] coeff_addr;
  output [11:0] fir_out;
  input clk, coeff_write;
  wire   \sample_internal[1][3] , \sample_internal[1][2] ,
         \sample_internal[1][1] , \sample_internal[1][0] ,
         \sample_internal[2][3] , \sample_internal[2][2] ,
         \sample_internal[2][1] , \sample_internal[2][0] ,
         \sample_internal[3][3] , \sample_internal[3][2] ,
         \sample_internal[3][1] , \sample_internal[3][0] ,
         \sample_internal[4][3] , \sample_internal[4][2] ,
         \sample_internal[4][1] , \sample_internal[4][0] ,
         \sample_internal[5][3] , \sample_internal[5][2] ,
         \sample_internal[5][1] , \sample_internal[5][0] ,
         \sample_internal[6][3] , \sample_internal[6][2] ,
         \sample_internal[6][1] , \sample_internal[6][0] ,
         \sample_internal[7][3] , \sample_internal[7][2] ,
         \sample_internal[7][1] , \sample_internal[7][0] ,
         \sample_internal[8][3] , \sample_internal[8][2] ,
         \sample_internal[8][1] , \sample_internal[8][0] ,
         \sample_internal[9][3] , \sample_internal[9][2] ,
         \sample_internal[9][1] , \sample_internal[9][0] ,
         \sample_internal[10][3] , \sample_internal[10][2] ,
         \sample_internal[10][1] , \sample_internal[10][0] ,
         \sample_internal[11][3] , \sample_internal[11][2] ,
         \sample_internal[11][1] , \sample_internal[11][0] ,
         \sample_internal[12][3] , \sample_internal[12][2] ,
         \sample_internal[12][1] , \sample_internal[12][0] ,
         \sample_internal[13][3] , \sample_internal[13][2] ,
         \sample_internal[13][1] , \sample_internal[13][0] ,
         \sample_internal[14][3] , \sample_internal[14][2] ,
         \sample_internal[14][1] , \sample_internal[14][0] ,
         \sample_internal[15][3] , \sample_internal[15][2] ,
         \sample_internal[15][1] , \sample_internal[15][0] ,
         \sample_internal[16][3] , \sample_internal[16][2] ,
         \sample_internal[16][1] , \sample_internal[16][0] ,
         \sample_internal[17][3] , \sample_internal[17][2] ,
         \sample_internal[17][1] , \sample_internal[17][0] ,
         \sample_internal[18][3] , \sample_internal[18][2] ,
         \sample_internal[18][1] , \sample_internal[18][0] ,
         \sample_internal[19][3] , \sample_internal[19][2] ,
         \sample_internal[19][1] , \sample_internal[19][0] ,
         \sample_internal[20][3] , \sample_internal[20][2] ,
         \sample_internal[20][1] , \sample_internal[20][0] ,
         \sample_internal[21][3] , \sample_internal[21][2] ,
         \sample_internal[21][1] , \sample_internal[21][0] ,
         \sample_internal[22][3] , \sample_internal[22][2] ,
         \sample_internal[22][1] , \sample_internal[22][0] ,
         \sample_internal[23][3] , \sample_internal[23][2] ,
         \sample_internal[23][1] , \sample_internal[23][0] ,
         \sample_internal[24][3] , \sample_internal[24][2] ,
         \sample_internal[24][1] , \sample_internal[24][0] ,
         \sample_internal[25][3] , \sample_internal[25][2] ,
         \sample_internal[25][1] , \sample_internal[25][0] ,
         \sample_internal[26][3] , \sample_internal[26][2] ,
         \sample_internal[26][1] , \sample_internal[26][0] ,
         \sample_internal[27][3] , \sample_internal[27][2] ,
         \sample_internal[27][1] , \sample_internal[27][0] ,
         \sample_internal[28][3] , \sample_internal[28][2] ,
         \sample_internal[28][1] , \sample_internal[28][0] ,
         \sample_internal[29][3] , \sample_internal[29][2] ,
         \sample_internal[29][1] , \sample_internal[29][0] ,
         \sample_internal[30][3] , \sample_internal[30][2] ,
         \sample_internal[30][1] , \sample_internal[30][0] ,
         \sample_internal[31][3] , \sample_internal[31][2] ,
         \sample_internal[31][1] , \sample_internal[31][0] ,
         \sample_internal[32][3] , \sample_internal[32][2] ,
         \sample_internal[32][1] , \sample_internal[32][0] ,
         \sample_internal[33][3] , \sample_internal[33][2] ,
         \sample_internal[33][1] , \sample_internal[33][0] ,
         \sample_internal[34][3] , \sample_internal[34][2] ,
         \sample_internal[34][1] , \sample_internal[34][0] ,
         \sample_internal[35][3] , \sample_internal[35][2] ,
         \sample_internal[35][1] , \sample_internal[35][0] ,
         \sample_internal[36][3] , \sample_internal[36][2] ,
         \sample_internal[36][1] , \sample_internal[36][0] ,
         \sample_internal[37][3] , \sample_internal[37][2] ,
         \sample_internal[37][1] , \sample_internal[37][0] ,
         \sample_internal[38][3] , \sample_internal[38][2] ,
         \sample_internal[38][1] , \sample_internal[38][0] ,
         \sample_internal[39][3] , \sample_internal[39][2] ,
         \sample_internal[39][1] , \sample_internal[39][0] ,
         \sample_internal[40][3] , \sample_internal[40][2] ,
         \sample_internal[40][1] , \sample_internal[40][0] ,
         \sample_internal[41][3] , \sample_internal[41][2] ,
         \sample_internal[41][1] , \sample_internal[41][0] ,
         \sample_internal[42][3] , \sample_internal[42][2] ,
         \sample_internal[42][1] , \sample_internal[42][0] ,
         \sample_internal[43][3] , \sample_internal[43][2] ,
         \sample_internal[43][1] , \sample_internal[43][0] ,
         \sample_internal[44][3] , \sample_internal[44][2] ,
         \sample_internal[44][1] , \sample_internal[44][0] ,
         \sample_internal[45][3] , \sample_internal[45][2] ,
         \sample_internal[45][1] , \sample_internal[45][0] ,
         \sample_internal[46][3] , \sample_internal[46][2] ,
         \sample_internal[46][1] , \sample_internal[46][0] ,
         \sample_internal[47][3] , \sample_internal[47][2] ,
         \sample_internal[47][1] , \sample_internal[47][0] ,
         \sample_internal[48][3] , \sample_internal[48][2] ,
         \sample_internal[48][1] , \sample_internal[48][0] ,
         \sample_internal[49][3] , \sample_internal[49][2] ,
         \sample_internal[49][1] , \sample_internal[49][0] ,
         \sample_internal[50][3] , \sample_internal[50][2] ,
         \sample_internal[50][1] , \sample_internal[50][0] ,
         \sample_internal[51][3] , \sample_internal[51][2] ,
         \sample_internal[51][1] , \sample_internal[51][0] ,
         \sample_internal[52][3] , \sample_internal[52][2] ,
         \sample_internal[52][1] , \sample_internal[52][0] ,
         \sample_internal[53][3] , \sample_internal[53][2] ,
         \sample_internal[53][1] , \sample_internal[53][0] ,
         \sample_internal[54][3] , \sample_internal[54][2] ,
         \sample_internal[54][1] , \sample_internal[54][0] ,
         \sample_internal[55][3] , \sample_internal[55][2] ,
         \sample_internal[55][1] , \sample_internal[55][0] ,
         \sample_internal[56][3] , \sample_internal[56][2] ,
         \sample_internal[56][1] , \sample_internal[56][0] ,
         \sample_internal[57][3] , \sample_internal[57][2] ,
         \sample_internal[57][1] , \sample_internal[57][0] ,
         \sample_internal[58][3] , \sample_internal[58][2] ,
         \sample_internal[58][1] , \sample_internal[58][0] ,
         \sample_internal[59][3] , \sample_internal[59][2] ,
         \sample_internal[59][1] , \sample_internal[59][0] ,
         \sample_internal[60][3] , \sample_internal[60][2] ,
         \sample_internal[60][1] , \sample_internal[60][0] ,
         \sample_internal[61][3] , \sample_internal[61][2] ,
         \sample_internal[61][1] , \sample_internal[61][0] ,
         \sample_internal[62][3] , \sample_internal[62][2] ,
         \sample_internal[62][1] , \sample_internal[62][0] ,
         \sample_internal[63][3] , \sample_internal[63][2] ,
         \sample_internal[63][1] , \sample_internal[63][0] ,
         \sample_internal[64][3] , \sample_internal[64][2] ,
         \sample_internal[64][1] , \sample_internal[64][0] ,
         \sample_internal[65][3] , \sample_internal[65][2] ,
         \sample_internal[65][1] , \sample_internal[65][0] ,
         \sample_internal[66][3] , \sample_internal[66][2] ,
         \sample_internal[66][1] , \sample_internal[66][0] ,
         \sample_internal[67][3] , \sample_internal[67][2] ,
         \sample_internal[67][1] , \sample_internal[67][0] ,
         \sample_internal[68][3] , \sample_internal[68][2] ,
         \sample_internal[68][1] , \sample_internal[68][0] ,
         \sample_internal[69][3] , \sample_internal[69][2] ,
         \sample_internal[69][1] , \sample_internal[69][0] ,
         \sample_internal[70][3] , \sample_internal[70][2] ,
         \sample_internal[70][1] , \sample_internal[70][0] ,
         \accum_internal[1][11] , \accum_internal[1][10] ,
         \accum_internal[1][9] , \accum_internal[1][8] ,
         \accum_internal[1][7] , \accum_internal[1][6] ,
         \accum_internal[1][5] , \accum_internal[1][4] ,
         \accum_internal[1][3] , \accum_internal[1][2] ,
         \accum_internal[1][1] , \accum_internal[1][0] ,
         \accum_internal[2][11] , \accum_internal[2][10] ,
         \accum_internal[2][9] , \accum_internal[2][8] ,
         \accum_internal[2][7] , \accum_internal[2][6] ,
         \accum_internal[2][5] , \accum_internal[2][4] ,
         \accum_internal[2][3] , \accum_internal[2][2] ,
         \accum_internal[2][1] , \accum_internal[2][0] ,
         \accum_internal[3][11] , \accum_internal[3][10] ,
         \accum_internal[3][9] , \accum_internal[3][8] ,
         \accum_internal[3][7] , \accum_internal[3][6] ,
         \accum_internal[3][5] , \accum_internal[3][4] ,
         \accum_internal[3][3] , \accum_internal[3][2] ,
         \accum_internal[3][1] , \accum_internal[3][0] ,
         \accum_internal[4][11] , \accum_internal[4][10] ,
         \accum_internal[4][9] , \accum_internal[4][8] ,
         \accum_internal[4][7] , \accum_internal[4][6] ,
         \accum_internal[4][5] , \accum_internal[4][4] ,
         \accum_internal[4][3] , \accum_internal[4][2] ,
         \accum_internal[4][1] , \accum_internal[4][0] ,
         \accum_internal[5][11] , \accum_internal[5][10] ,
         \accum_internal[5][9] , \accum_internal[5][8] ,
         \accum_internal[5][7] , \accum_internal[5][6] ,
         \accum_internal[5][5] , \accum_internal[5][4] ,
         \accum_internal[5][3] , \accum_internal[5][2] ,
         \accum_internal[5][1] , \accum_internal[5][0] ,
         \accum_internal[6][11] , \accum_internal[6][10] ,
         \accum_internal[6][9] , \accum_internal[6][8] ,
         \accum_internal[6][7] , \accum_internal[6][6] ,
         \accum_internal[6][5] , \accum_internal[6][4] ,
         \accum_internal[6][3] , \accum_internal[6][2] ,
         \accum_internal[6][1] , \accum_internal[6][0] ,
         \accum_internal[7][11] , \accum_internal[7][10] ,
         \accum_internal[7][9] , \accum_internal[7][8] ,
         \accum_internal[7][7] , \accum_internal[7][6] ,
         \accum_internal[7][5] , \accum_internal[7][4] ,
         \accum_internal[7][3] , \accum_internal[7][2] ,
         \accum_internal[7][1] , \accum_internal[7][0] ,
         \accum_internal[8][11] , \accum_internal[8][10] ,
         \accum_internal[8][9] , \accum_internal[8][8] ,
         \accum_internal[8][7] , \accum_internal[8][6] ,
         \accum_internal[8][5] , \accum_internal[8][4] ,
         \accum_internal[8][3] , \accum_internal[8][2] ,
         \accum_internal[8][1] , \accum_internal[8][0] ,
         \accum_internal[9][11] , \accum_internal[9][10] ,
         \accum_internal[9][9] , \accum_internal[9][8] ,
         \accum_internal[9][7] , \accum_internal[9][6] ,
         \accum_internal[9][5] , \accum_internal[9][4] ,
         \accum_internal[9][3] , \accum_internal[9][2] ,
         \accum_internal[9][1] , \accum_internal[9][0] ,
         \accum_internal[10][11] , \accum_internal[10][10] ,
         \accum_internal[10][9] , \accum_internal[10][8] ,
         \accum_internal[10][7] , \accum_internal[10][6] ,
         \accum_internal[10][5] , \accum_internal[10][4] ,
         \accum_internal[10][3] , \accum_internal[10][2] ,
         \accum_internal[10][1] , \accum_internal[10][0] ,
         \accum_internal[11][11] , \accum_internal[11][10] ,
         \accum_internal[11][9] , \accum_internal[11][8] ,
         \accum_internal[11][7] , \accum_internal[11][6] ,
         \accum_internal[11][5] , \accum_internal[11][4] ,
         \accum_internal[11][3] , \accum_internal[11][2] ,
         \accum_internal[11][1] , \accum_internal[11][0] ,
         \accum_internal[12][11] , \accum_internal[12][10] ,
         \accum_internal[12][9] , \accum_internal[12][8] ,
         \accum_internal[12][7] , \accum_internal[12][6] ,
         \accum_internal[12][5] , \accum_internal[12][4] ,
         \accum_internal[12][3] , \accum_internal[12][2] ,
         \accum_internal[12][1] , \accum_internal[12][0] ,
         \accum_internal[13][11] , \accum_internal[13][10] ,
         \accum_internal[13][9] , \accum_internal[13][8] ,
         \accum_internal[13][7] , \accum_internal[13][6] ,
         \accum_internal[13][5] , \accum_internal[13][4] ,
         \accum_internal[13][3] , \accum_internal[13][2] ,
         \accum_internal[13][1] , \accum_internal[13][0] ,
         \accum_internal[14][11] , \accum_internal[14][10] ,
         \accum_internal[14][9] , \accum_internal[14][8] ,
         \accum_internal[14][7] , \accum_internal[14][6] ,
         \accum_internal[14][5] , \accum_internal[14][4] ,
         \accum_internal[14][3] , \accum_internal[14][2] ,
         \accum_internal[14][1] , \accum_internal[14][0] ,
         \accum_internal[15][11] , \accum_internal[15][10] ,
         \accum_internal[15][9] , \accum_internal[15][8] ,
         \accum_internal[15][7] , \accum_internal[15][6] ,
         \accum_internal[15][5] , \accum_internal[15][4] ,
         \accum_internal[15][3] , \accum_internal[15][2] ,
         \accum_internal[15][1] , \accum_internal[15][0] ,
         \accum_internal[16][11] , \accum_internal[16][10] ,
         \accum_internal[16][9] , \accum_internal[16][8] ,
         \accum_internal[16][7] , \accum_internal[16][6] ,
         \accum_internal[16][5] , \accum_internal[16][4] ,
         \accum_internal[16][3] , \accum_internal[16][2] ,
         \accum_internal[16][1] , \accum_internal[16][0] ,
         \accum_internal[17][11] , \accum_internal[17][10] ,
         \accum_internal[17][9] , \accum_internal[17][8] ,
         \accum_internal[17][7] , \accum_internal[17][6] ,
         \accum_internal[17][5] , \accum_internal[17][4] ,
         \accum_internal[17][3] , \accum_internal[17][2] ,
         \accum_internal[17][1] , \accum_internal[17][0] ,
         \accum_internal[18][11] , \accum_internal[18][10] ,
         \accum_internal[18][9] , \accum_internal[18][8] ,
         \accum_internal[18][7] , \accum_internal[18][6] ,
         \accum_internal[18][5] , \accum_internal[18][4] ,
         \accum_internal[18][3] , \accum_internal[18][2] ,
         \accum_internal[18][1] , \accum_internal[18][0] ,
         \accum_internal[19][11] , \accum_internal[19][10] ,
         \accum_internal[19][9] , \accum_internal[19][8] ,
         \accum_internal[19][7] , \accum_internal[19][6] ,
         \accum_internal[19][5] , \accum_internal[19][4] ,
         \accum_internal[19][3] , \accum_internal[19][2] ,
         \accum_internal[19][1] , \accum_internal[19][0] ,
         \accum_internal[20][11] , \accum_internal[20][10] ,
         \accum_internal[20][9] , \accum_internal[20][8] ,
         \accum_internal[20][7] , \accum_internal[20][6] ,
         \accum_internal[20][5] , \accum_internal[20][4] ,
         \accum_internal[20][3] , \accum_internal[20][2] ,
         \accum_internal[20][1] , \accum_internal[20][0] ,
         \accum_internal[21][11] , \accum_internal[21][10] ,
         \accum_internal[21][9] , \accum_internal[21][8] ,
         \accum_internal[21][7] , \accum_internal[21][6] ,
         \accum_internal[21][5] , \accum_internal[21][4] ,
         \accum_internal[21][3] , \accum_internal[21][2] ,
         \accum_internal[21][1] , \accum_internal[21][0] ,
         \accum_internal[22][11] , \accum_internal[22][10] ,
         \accum_internal[22][9] , \accum_internal[22][8] ,
         \accum_internal[22][7] , \accum_internal[22][6] ,
         \accum_internal[22][5] , \accum_internal[22][4] ,
         \accum_internal[22][3] , \accum_internal[22][2] ,
         \accum_internal[22][1] , \accum_internal[22][0] ,
         \accum_internal[23][11] , \accum_internal[23][10] ,
         \accum_internal[23][9] , \accum_internal[23][8] ,
         \accum_internal[23][7] , \accum_internal[23][6] ,
         \accum_internal[23][5] , \accum_internal[23][4] ,
         \accum_internal[23][3] , \accum_internal[23][2] ,
         \accum_internal[23][1] , \accum_internal[23][0] ,
         \accum_internal[24][11] , \accum_internal[24][10] ,
         \accum_internal[24][9] , \accum_internal[24][8] ,
         \accum_internal[24][7] , \accum_internal[24][6] ,
         \accum_internal[24][5] , \accum_internal[24][4] ,
         \accum_internal[24][3] , \accum_internal[24][2] ,
         \accum_internal[24][1] , \accum_internal[24][0] ,
         \accum_internal[25][11] , \accum_internal[25][10] ,
         \accum_internal[25][9] , \accum_internal[25][8] ,
         \accum_internal[25][7] , \accum_internal[25][6] ,
         \accum_internal[25][5] , \accum_internal[25][4] ,
         \accum_internal[25][3] , \accum_internal[25][2] ,
         \accum_internal[25][1] , \accum_internal[25][0] ,
         \accum_internal[26][11] , \accum_internal[26][10] ,
         \accum_internal[26][9] , \accum_internal[26][8] ,
         \accum_internal[26][7] , \accum_internal[26][6] ,
         \accum_internal[26][5] , \accum_internal[26][4] ,
         \accum_internal[26][3] , \accum_internal[26][2] ,
         \accum_internal[26][1] , \accum_internal[26][0] ,
         \accum_internal[27][11] , \accum_internal[27][10] ,
         \accum_internal[27][9] , \accum_internal[27][8] ,
         \accum_internal[27][7] , \accum_internal[27][6] ,
         \accum_internal[27][5] , \accum_internal[27][4] ,
         \accum_internal[27][3] , \accum_internal[27][2] ,
         \accum_internal[27][1] , \accum_internal[27][0] ,
         \accum_internal[28][11] , \accum_internal[28][10] ,
         \accum_internal[28][9] , \accum_internal[28][8] ,
         \accum_internal[28][7] , \accum_internal[28][6] ,
         \accum_internal[28][5] , \accum_internal[28][4] ,
         \accum_internal[28][3] , \accum_internal[28][2] ,
         \accum_internal[28][1] , \accum_internal[28][0] ,
         \accum_internal[29][11] , \accum_internal[29][10] ,
         \accum_internal[29][9] , \accum_internal[29][8] ,
         \accum_internal[29][7] , \accum_internal[29][6] ,
         \accum_internal[29][5] , \accum_internal[29][4] ,
         \accum_internal[29][3] , \accum_internal[29][2] ,
         \accum_internal[29][1] , \accum_internal[29][0] ,
         \accum_internal[30][11] , \accum_internal[30][10] ,
         \accum_internal[30][9] , \accum_internal[30][8] ,
         \accum_internal[30][7] , \accum_internal[30][6] ,
         \accum_internal[30][5] , \accum_internal[30][4] ,
         \accum_internal[30][3] , \accum_internal[30][2] ,
         \accum_internal[30][1] , \accum_internal[30][0] ,
         \accum_internal[31][11] , \accum_internal[31][10] ,
         \accum_internal[31][9] , \accum_internal[31][8] ,
         \accum_internal[31][7] , \accum_internal[31][6] ,
         \accum_internal[31][5] , \accum_internal[31][4] ,
         \accum_internal[31][3] , \accum_internal[31][2] ,
         \accum_internal[31][1] , \accum_internal[31][0] ,
         \accum_internal[32][11] , \accum_internal[32][10] ,
         \accum_internal[32][9] , \accum_internal[32][8] ,
         \accum_internal[32][7] , \accum_internal[32][6] ,
         \accum_internal[32][5] , \accum_internal[32][4] ,
         \accum_internal[32][3] , \accum_internal[32][2] ,
         \accum_internal[32][1] , \accum_internal[32][0] ,
         \accum_internal[33][11] , \accum_internal[33][10] ,
         \accum_internal[33][9] , \accum_internal[33][8] ,
         \accum_internal[33][7] , \accum_internal[33][6] ,
         \accum_internal[33][5] , \accum_internal[33][4] ,
         \accum_internal[33][3] , \accum_internal[33][2] ,
         \accum_internal[33][1] , \accum_internal[33][0] ,
         \accum_internal[34][11] , \accum_internal[34][10] ,
         \accum_internal[34][9] , \accum_internal[34][8] ,
         \accum_internal[34][7] , \accum_internal[34][6] ,
         \accum_internal[34][5] , \accum_internal[34][4] ,
         \accum_internal[34][3] , \accum_internal[34][2] ,
         \accum_internal[34][1] , \accum_internal[34][0] ,
         \accum_internal[35][11] , \accum_internal[35][10] ,
         \accum_internal[35][9] , \accum_internal[35][8] ,
         \accum_internal[35][7] , \accum_internal[35][6] ,
         \accum_internal[35][5] , \accum_internal[35][4] ,
         \accum_internal[35][3] , \accum_internal[35][2] ,
         \accum_internal[35][1] , \accum_internal[35][0] ,
         \accum_internal[36][11] , \accum_internal[36][10] ,
         \accum_internal[36][9] , \accum_internal[36][8] ,
         \accum_internal[36][7] , \accum_internal[36][6] ,
         \accum_internal[36][5] , \accum_internal[36][4] ,
         \accum_internal[36][3] , \accum_internal[36][2] ,
         \accum_internal[36][1] , \accum_internal[36][0] ,
         \accum_internal[37][11] , \accum_internal[37][10] ,
         \accum_internal[37][9] , \accum_internal[37][8] ,
         \accum_internal[37][7] , \accum_internal[37][6] ,
         \accum_internal[37][5] , \accum_internal[37][4] ,
         \accum_internal[37][3] , \accum_internal[37][2] ,
         \accum_internal[37][1] , \accum_internal[37][0] ,
         \accum_internal[38][11] , \accum_internal[38][10] ,
         \accum_internal[38][9] , \accum_internal[38][8] ,
         \accum_internal[38][7] , \accum_internal[38][6] ,
         \accum_internal[38][5] , \accum_internal[38][4] ,
         \accum_internal[38][3] , \accum_internal[38][2] ,
         \accum_internal[38][1] , \accum_internal[38][0] ,
         \accum_internal[39][11] , \accum_internal[39][10] ,
         \accum_internal[39][9] , \accum_internal[39][8] ,
         \accum_internal[39][7] , \accum_internal[39][6] ,
         \accum_internal[39][5] , \accum_internal[39][4] ,
         \accum_internal[39][3] , \accum_internal[39][2] ,
         \accum_internal[39][1] , \accum_internal[39][0] ,
         \accum_internal[40][11] , \accum_internal[40][10] ,
         \accum_internal[40][9] , \accum_internal[40][8] ,
         \accum_internal[40][7] , \accum_internal[40][6] ,
         \accum_internal[40][5] , \accum_internal[40][4] ,
         \accum_internal[40][3] , \accum_internal[40][2] ,
         \accum_internal[40][1] , \accum_internal[40][0] ,
         \accum_internal[41][11] , \accum_internal[41][10] ,
         \accum_internal[41][9] , \accum_internal[41][8] ,
         \accum_internal[41][7] , \accum_internal[41][6] ,
         \accum_internal[41][5] , \accum_internal[41][4] ,
         \accum_internal[41][3] , \accum_internal[41][2] ,
         \accum_internal[41][1] , \accum_internal[41][0] ,
         \accum_internal[42][11] , \accum_internal[42][10] ,
         \accum_internal[42][9] , \accum_internal[42][8] ,
         \accum_internal[42][7] , \accum_internal[42][6] ,
         \accum_internal[42][5] , \accum_internal[42][4] ,
         \accum_internal[42][3] , \accum_internal[42][2] ,
         \accum_internal[42][1] , \accum_internal[42][0] ,
         \accum_internal[43][11] , \accum_internal[43][10] ,
         \accum_internal[43][9] , \accum_internal[43][8] ,
         \accum_internal[43][7] , \accum_internal[43][6] ,
         \accum_internal[43][5] , \accum_internal[43][4] ,
         \accum_internal[43][3] , \accum_internal[43][2] ,
         \accum_internal[43][1] , \accum_internal[43][0] ,
         \accum_internal[44][11] , \accum_internal[44][10] ,
         \accum_internal[44][9] , \accum_internal[44][8] ,
         \accum_internal[44][7] , \accum_internal[44][6] ,
         \accum_internal[44][5] , \accum_internal[44][4] ,
         \accum_internal[44][3] , \accum_internal[44][2] ,
         \accum_internal[44][1] , \accum_internal[44][0] ,
         \accum_internal[45][11] , \accum_internal[45][10] ,
         \accum_internal[45][9] , \accum_internal[45][8] ,
         \accum_internal[45][7] , \accum_internal[45][6] ,
         \accum_internal[45][5] , \accum_internal[45][4] ,
         \accum_internal[45][3] , \accum_internal[45][2] ,
         \accum_internal[45][1] , \accum_internal[45][0] ,
         \accum_internal[46][11] , \accum_internal[46][10] ,
         \accum_internal[46][9] , \accum_internal[46][8] ,
         \accum_internal[46][7] , \accum_internal[46][6] ,
         \accum_internal[46][5] , \accum_internal[46][4] ,
         \accum_internal[46][3] , \accum_internal[46][2] ,
         \accum_internal[46][1] , \accum_internal[46][0] ,
         \accum_internal[47][11] , \accum_internal[47][10] ,
         \accum_internal[47][9] , \accum_internal[47][8] ,
         \accum_internal[47][7] , \accum_internal[47][6] ,
         \accum_internal[47][5] , \accum_internal[47][4] ,
         \accum_internal[47][3] , \accum_internal[47][2] ,
         \accum_internal[47][1] , \accum_internal[47][0] ,
         \accum_internal[48][11] , \accum_internal[48][10] ,
         \accum_internal[48][9] , \accum_internal[48][8] ,
         \accum_internal[48][7] , \accum_internal[48][6] ,
         \accum_internal[48][5] , \accum_internal[48][4] ,
         \accum_internal[48][3] , \accum_internal[48][2] ,
         \accum_internal[48][1] , \accum_internal[48][0] ,
         \accum_internal[49][11] , \accum_internal[49][10] ,
         \accum_internal[49][9] , \accum_internal[49][8] ,
         \accum_internal[49][7] , \accum_internal[49][6] ,
         \accum_internal[49][5] , \accum_internal[49][4] ,
         \accum_internal[49][3] , \accum_internal[49][2] ,
         \accum_internal[49][1] , \accum_internal[49][0] ,
         \accum_internal[50][11] , \accum_internal[50][10] ,
         \accum_internal[50][9] , \accum_internal[50][8] ,
         \accum_internal[50][7] , \accum_internal[50][6] ,
         \accum_internal[50][5] , \accum_internal[50][4] ,
         \accum_internal[50][3] , \accum_internal[50][2] ,
         \accum_internal[50][1] , \accum_internal[50][0] ,
         \accum_internal[51][11] , \accum_internal[51][10] ,
         \accum_internal[51][9] , \accum_internal[51][8] ,
         \accum_internal[51][7] , \accum_internal[51][6] ,
         \accum_internal[51][5] , \accum_internal[51][4] ,
         \accum_internal[51][3] , \accum_internal[51][2] ,
         \accum_internal[51][1] , \accum_internal[51][0] ,
         \accum_internal[52][11] , \accum_internal[52][10] ,
         \accum_internal[52][9] , \accum_internal[52][8] ,
         \accum_internal[52][7] , \accum_internal[52][6] ,
         \accum_internal[52][5] , \accum_internal[52][4] ,
         \accum_internal[52][3] , \accum_internal[52][2] ,
         \accum_internal[52][1] , \accum_internal[52][0] ,
         \accum_internal[53][11] , \accum_internal[53][10] ,
         \accum_internal[53][9] , \accum_internal[53][8] ,
         \accum_internal[53][7] , \accum_internal[53][6] ,
         \accum_internal[53][5] , \accum_internal[53][4] ,
         \accum_internal[53][3] , \accum_internal[53][2] ,
         \accum_internal[53][1] , \accum_internal[53][0] ,
         \accum_internal[54][11] , \accum_internal[54][10] ,
         \accum_internal[54][9] , \accum_internal[54][8] ,
         \accum_internal[54][7] , \accum_internal[54][6] ,
         \accum_internal[54][5] , \accum_internal[54][4] ,
         \accum_internal[54][3] , \accum_internal[54][2] ,
         \accum_internal[54][1] , \accum_internal[54][0] ,
         \accum_internal[55][11] , \accum_internal[55][10] ,
         \accum_internal[55][9] , \accum_internal[55][8] ,
         \accum_internal[55][7] , \accum_internal[55][6] ,
         \accum_internal[55][5] , \accum_internal[55][4] ,
         \accum_internal[55][3] , \accum_internal[55][2] ,
         \accum_internal[55][1] , \accum_internal[55][0] ,
         \accum_internal[56][11] , \accum_internal[56][10] ,
         \accum_internal[56][9] , \accum_internal[56][8] ,
         \accum_internal[56][7] , \accum_internal[56][6] ,
         \accum_internal[56][5] , \accum_internal[56][4] ,
         \accum_internal[56][3] , \accum_internal[56][2] ,
         \accum_internal[56][1] , \accum_internal[56][0] ,
         \accum_internal[57][11] , \accum_internal[57][10] ,
         \accum_internal[57][9] , \accum_internal[57][8] ,
         \accum_internal[57][7] , \accum_internal[57][6] ,
         \accum_internal[57][5] , \accum_internal[57][4] ,
         \accum_internal[57][3] , \accum_internal[57][2] ,
         \accum_internal[57][1] , \accum_internal[57][0] ,
         \accum_internal[58][11] , \accum_internal[58][10] ,
         \accum_internal[58][9] , \accum_internal[58][8] ,
         \accum_internal[58][7] , \accum_internal[58][6] ,
         \accum_internal[58][5] , \accum_internal[58][4] ,
         \accum_internal[58][3] , \accum_internal[58][2] ,
         \accum_internal[58][1] , \accum_internal[58][0] ,
         \accum_internal[59][11] , \accum_internal[59][10] ,
         \accum_internal[59][9] , \accum_internal[59][8] ,
         \accum_internal[59][7] , \accum_internal[59][6] ,
         \accum_internal[59][5] , \accum_internal[59][4] ,
         \accum_internal[59][3] , \accum_internal[59][2] ,
         \accum_internal[59][1] , \accum_internal[59][0] ,
         \accum_internal[60][11] , \accum_internal[60][10] ,
         \accum_internal[60][9] , \accum_internal[60][8] ,
         \accum_internal[60][7] , \accum_internal[60][6] ,
         \accum_internal[60][5] , \accum_internal[60][4] ,
         \accum_internal[60][3] , \accum_internal[60][2] ,
         \accum_internal[60][1] , \accum_internal[60][0] ,
         \accum_internal[61][11] , \accum_internal[61][10] ,
         \accum_internal[61][9] , \accum_internal[61][8] ,
         \accum_internal[61][7] , \accum_internal[61][6] ,
         \accum_internal[61][5] , \accum_internal[61][4] ,
         \accum_internal[61][3] , \accum_internal[61][2] ,
         \accum_internal[61][1] , \accum_internal[61][0] ,
         \accum_internal[62][11] , \accum_internal[62][10] ,
         \accum_internal[62][9] , \accum_internal[62][8] ,
         \accum_internal[62][7] , \accum_internal[62][6] ,
         \accum_internal[62][5] , \accum_internal[62][4] ,
         \accum_internal[62][3] , \accum_internal[62][2] ,
         \accum_internal[62][1] , \accum_internal[62][0] ,
         \accum_internal[63][11] , \accum_internal[63][10] ,
         \accum_internal[63][9] , \accum_internal[63][8] ,
         \accum_internal[63][7] , \accum_internal[63][6] ,
         \accum_internal[63][5] , \accum_internal[63][4] ,
         \accum_internal[63][3] , \accum_internal[63][2] ,
         \accum_internal[63][1] , \accum_internal[63][0] ,
         \accum_internal[64][11] , \accum_internal[64][10] ,
         \accum_internal[64][9] , \accum_internal[64][8] ,
         \accum_internal[64][7] , \accum_internal[64][6] ,
         \accum_internal[64][5] , \accum_internal[64][4] ,
         \accum_internal[64][3] , \accum_internal[64][2] ,
         \accum_internal[64][1] , \accum_internal[64][0] ,
         \accum_internal[65][11] , \accum_internal[65][10] ,
         \accum_internal[65][9] , \accum_internal[65][8] ,
         \accum_internal[65][7] , \accum_internal[65][6] ,
         \accum_internal[65][5] , \accum_internal[65][4] ,
         \accum_internal[65][3] , \accum_internal[65][2] ,
         \accum_internal[65][1] , \accum_internal[65][0] ,
         \accum_internal[66][11] , \accum_internal[66][10] ,
         \accum_internal[66][9] , \accum_internal[66][8] ,
         \accum_internal[66][7] , \accum_internal[66][6] ,
         \accum_internal[66][5] , \accum_internal[66][4] ,
         \accum_internal[66][3] , \accum_internal[66][2] ,
         \accum_internal[66][1] , \accum_internal[66][0] ,
         \accum_internal[67][11] , \accum_internal[67][10] ,
         \accum_internal[67][9] , \accum_internal[67][8] ,
         \accum_internal[67][7] , \accum_internal[67][6] ,
         \accum_internal[67][5] , \accum_internal[67][4] ,
         \accum_internal[67][3] , \accum_internal[67][2] ,
         \accum_internal[67][1] , \accum_internal[67][0] ,
         \accum_internal[68][11] , \accum_internal[68][10] ,
         \accum_internal[68][9] , \accum_internal[68][8] ,
         \accum_internal[68][7] , \accum_internal[68][6] ,
         \accum_internal[68][5] , \accum_internal[68][4] ,
         \accum_internal[68][3] , \accum_internal[68][2] ,
         \accum_internal[68][1] , \accum_internal[68][0] ,
         \accum_internal[69][11] , \accum_internal[69][10] ,
         \accum_internal[69][9] , \accum_internal[69][8] ,
         \accum_internal[69][7] , \accum_internal[69][6] ,
         \accum_internal[69][5] , \accum_internal[69][4] ,
         \accum_internal[69][3] , \accum_internal[69][2] ,
         \accum_internal[69][1] , \accum_internal[69][0] ,
         \accum_internal[70][11] , \accum_internal[70][10] ,
         \accum_internal[70][9] , \accum_internal[70][8] ,
         \accum_internal[70][7] , \accum_internal[70][6] ,
         \accum_internal[70][5] , \accum_internal[70][4] ,
         \accum_internal[70][3] , \accum_internal[70][2] ,
         \accum_internal[70][1] , \accum_internal[70][0] , \coeff[0][7] ,
         \coeff[0][6] , \coeff[0][5] , \coeff[0][4] , \coeff[0][3] ,
         \coeff[0][2] , \coeff[0][1] , \coeff[0][0] , \coeff[1][7] ,
         \coeff[1][6] , \coeff[1][5] , \coeff[1][4] , \coeff[1][3] ,
         \coeff[1][2] , \coeff[1][1] , \coeff[1][0] , \coeff[2][7] ,
         \coeff[2][6] , \coeff[2][5] , \coeff[2][4] , \coeff[2][3] ,
         \coeff[2][2] , \coeff[2][1] , \coeff[2][0] , \coeff[3][7] ,
         \coeff[3][6] , \coeff[3][5] , \coeff[3][4] , \coeff[3][3] ,
         \coeff[3][2] , \coeff[3][1] , \coeff[3][0] , \coeff[4][7] ,
         \coeff[4][6] , \coeff[4][5] , \coeff[4][4] , \coeff[4][3] ,
         \coeff[4][2] , \coeff[4][1] , \coeff[4][0] , \coeff[5][7] ,
         \coeff[5][6] , \coeff[5][5] , \coeff[5][4] , \coeff[5][3] ,
         \coeff[5][2] , \coeff[5][1] , \coeff[5][0] , \coeff[6][7] ,
         \coeff[6][6] , \coeff[6][5] , \coeff[6][4] , \coeff[6][3] ,
         \coeff[6][2] , \coeff[6][1] , \coeff[6][0] , \coeff[7][7] ,
         \coeff[7][6] , \coeff[7][5] , \coeff[7][4] , \coeff[7][3] ,
         \coeff[7][2] , \coeff[7][1] , \coeff[7][0] , \coeff[8][7] ,
         \coeff[8][6] , \coeff[8][5] , \coeff[8][4] , \coeff[8][3] ,
         \coeff[8][2] , \coeff[8][1] , \coeff[8][0] , \coeff[9][7] ,
         \coeff[9][6] , \coeff[9][5] , \coeff[9][4] , \coeff[9][3] ,
         \coeff[9][2] , \coeff[9][1] , \coeff[9][0] , \coeff[10][7] ,
         \coeff[10][6] , \coeff[10][5] , \coeff[10][4] , \coeff[10][3] ,
         \coeff[10][2] , \coeff[10][1] , \coeff[10][0] , \coeff[11][7] ,
         \coeff[11][6] , \coeff[11][5] , \coeff[11][4] , \coeff[11][3] ,
         \coeff[11][2] , \coeff[11][1] , \coeff[11][0] , \coeff[12][7] ,
         \coeff[12][6] , \coeff[12][5] , \coeff[12][4] , \coeff[12][3] ,
         \coeff[12][2] , \coeff[12][1] , \coeff[12][0] , \coeff[13][7] ,
         \coeff[13][6] , \coeff[13][5] , \coeff[13][4] , \coeff[13][3] ,
         \coeff[13][2] , \coeff[13][1] , \coeff[13][0] , \coeff[14][7] ,
         \coeff[14][6] , \coeff[14][5] , \coeff[14][4] , \coeff[14][3] ,
         \coeff[14][2] , \coeff[14][1] , \coeff[14][0] , \coeff[15][7] ,
         \coeff[15][6] , \coeff[15][5] , \coeff[15][4] , \coeff[15][3] ,
         \coeff[15][2] , \coeff[15][1] , \coeff[15][0] , \coeff[16][7] ,
         \coeff[16][6] , \coeff[16][5] , \coeff[16][4] , \coeff[16][3] ,
         \coeff[16][2] , \coeff[16][1] , \coeff[16][0] , \coeff[17][7] ,
         \coeff[17][6] , \coeff[17][5] , \coeff[17][4] , \coeff[17][3] ,
         \coeff[17][2] , \coeff[17][1] , \coeff[17][0] , \coeff[18][7] ,
         \coeff[18][6] , \coeff[18][5] , \coeff[18][4] , \coeff[18][3] ,
         \coeff[18][2] , \coeff[18][1] , \coeff[18][0] , \coeff[19][7] ,
         \coeff[19][6] , \coeff[19][5] , \coeff[19][4] , \coeff[19][3] ,
         \coeff[19][2] , \coeff[19][1] , \coeff[19][0] , \coeff[20][7] ,
         \coeff[20][6] , \coeff[20][5] , \coeff[20][4] , \coeff[20][3] ,
         \coeff[20][2] , \coeff[20][1] , \coeff[20][0] , \coeff[21][7] ,
         \coeff[21][6] , \coeff[21][5] , \coeff[21][4] , \coeff[21][3] ,
         \coeff[21][2] , \coeff[21][1] , \coeff[21][0] , \coeff[22][7] ,
         \coeff[22][6] , \coeff[22][5] , \coeff[22][4] , \coeff[22][3] ,
         \coeff[22][2] , \coeff[22][1] , \coeff[22][0] , \coeff[23][7] ,
         \coeff[23][6] , \coeff[23][5] , \coeff[23][4] , \coeff[23][3] ,
         \coeff[23][2] , \coeff[23][1] , \coeff[23][0] , \coeff[24][7] ,
         \coeff[24][6] , \coeff[24][5] , \coeff[24][4] , \coeff[24][3] ,
         \coeff[24][2] , \coeff[24][1] , \coeff[24][0] , \coeff[25][7] ,
         \coeff[25][6] , \coeff[25][5] , \coeff[25][4] , \coeff[25][3] ,
         \coeff[25][2] , \coeff[25][1] , \coeff[25][0] , \coeff[26][7] ,
         \coeff[26][6] , \coeff[26][5] , \coeff[26][4] , \coeff[26][3] ,
         \coeff[26][2] , \coeff[26][1] , \coeff[26][0] , \coeff[27][7] ,
         \coeff[27][6] , \coeff[27][5] , \coeff[27][4] , \coeff[27][3] ,
         \coeff[27][2] , \coeff[27][1] , \coeff[27][0] , \coeff[28][7] ,
         \coeff[28][6] , \coeff[28][5] , \coeff[28][4] , \coeff[28][3] ,
         \coeff[28][2] , \coeff[28][1] , \coeff[28][0] , \coeff[29][7] ,
         \coeff[29][6] , \coeff[29][5] , \coeff[29][4] , \coeff[29][3] ,
         \coeff[29][2] , \coeff[29][1] , \coeff[29][0] , \coeff[30][7] ,
         \coeff[30][6] , \coeff[30][5] , \coeff[30][4] , \coeff[30][3] ,
         \coeff[30][2] , \coeff[30][1] , \coeff[30][0] , \coeff[31][7] ,
         \coeff[31][6] , \coeff[31][5] , \coeff[31][4] , \coeff[31][3] ,
         \coeff[31][2] , \coeff[31][1] , \coeff[31][0] , \coeff[32][7] ,
         \coeff[32][6] , \coeff[32][5] , \coeff[32][4] , \coeff[32][3] ,
         \coeff[32][2] , \coeff[32][1] , \coeff[32][0] , \coeff[33][7] ,
         \coeff[33][6] , \coeff[33][5] , \coeff[33][4] , \coeff[33][3] ,
         \coeff[33][2] , \coeff[33][1] , \coeff[33][0] , \coeff[34][7] ,
         \coeff[34][6] , \coeff[34][5] , \coeff[34][4] , \coeff[34][3] ,
         \coeff[34][2] , \coeff[34][1] , \coeff[34][0] , \coeff[35][7] ,
         \coeff[35][6] , \coeff[35][5] , \coeff[35][4] , \coeff[35][3] ,
         \coeff[35][2] , \coeff[35][1] , \coeff[35][0] , \coeff[36][7] ,
         \coeff[36][6] , \coeff[36][5] , \coeff[36][4] , \coeff[36][3] ,
         \coeff[36][2] , \coeff[36][1] , \coeff[36][0] , \coeff[37][7] ,
         \coeff[37][6] , \coeff[37][5] , \coeff[37][4] , \coeff[37][3] ,
         \coeff[37][2] , \coeff[37][1] , \coeff[37][0] , \coeff[38][7] ,
         \coeff[38][6] , \coeff[38][5] , \coeff[38][4] , \coeff[38][3] ,
         \coeff[38][2] , \coeff[38][1] , \coeff[38][0] , \coeff[39][7] ,
         \coeff[39][6] , \coeff[39][5] , \coeff[39][4] , \coeff[39][3] ,
         \coeff[39][2] , \coeff[39][1] , \coeff[39][0] , \coeff[40][7] ,
         \coeff[40][6] , \coeff[40][5] , \coeff[40][4] , \coeff[40][3] ,
         \coeff[40][2] , \coeff[40][1] , \coeff[40][0] , \coeff[41][7] ,
         \coeff[41][6] , \coeff[41][5] , \coeff[41][4] , \coeff[41][3] ,
         \coeff[41][2] , \coeff[41][1] , \coeff[41][0] , \coeff[42][7] ,
         \coeff[42][6] , \coeff[42][5] , \coeff[42][4] , \coeff[42][3] ,
         \coeff[42][2] , \coeff[42][1] , \coeff[42][0] , \coeff[43][7] ,
         \coeff[43][6] , \coeff[43][5] , \coeff[43][4] , \coeff[43][3] ,
         \coeff[43][2] , \coeff[43][1] , \coeff[43][0] , \coeff[44][7] ,
         \coeff[44][6] , \coeff[44][5] , \coeff[44][4] , \coeff[44][3] ,
         \coeff[44][2] , \coeff[44][1] , \coeff[44][0] , \coeff[45][7] ,
         \coeff[45][6] , \coeff[45][5] , \coeff[45][4] , \coeff[45][3] ,
         \coeff[45][2] , \coeff[45][1] , \coeff[45][0] , \coeff[46][7] ,
         \coeff[46][6] , \coeff[46][5] , \coeff[46][4] , \coeff[46][3] ,
         \coeff[46][2] , \coeff[46][1] , \coeff[46][0] , \coeff[47][7] ,
         \coeff[47][6] , \coeff[47][5] , \coeff[47][4] , \coeff[47][3] ,
         \coeff[47][2] , \coeff[47][1] , \coeff[47][0] , \coeff[48][7] ,
         \coeff[48][6] , \coeff[48][5] , \coeff[48][4] , \coeff[48][3] ,
         \coeff[48][2] , \coeff[48][1] , \coeff[48][0] , \coeff[49][7] ,
         \coeff[49][6] , \coeff[49][5] , \coeff[49][4] , \coeff[49][3] ,
         \coeff[49][2] , \coeff[49][1] , \coeff[49][0] , \coeff[50][7] ,
         \coeff[50][6] , \coeff[50][5] , \coeff[50][4] , \coeff[50][3] ,
         \coeff[50][2] , \coeff[50][1] , \coeff[50][0] , \coeff[51][7] ,
         \coeff[51][6] , \coeff[51][5] , \coeff[51][4] , \coeff[51][3] ,
         \coeff[51][2] , \coeff[51][1] , \coeff[51][0] , \coeff[52][7] ,
         \coeff[52][6] , \coeff[52][5] , \coeff[52][4] , \coeff[52][3] ,
         \coeff[52][2] , \coeff[52][1] , \coeff[52][0] , \coeff[53][7] ,
         \coeff[53][6] , \coeff[53][5] , \coeff[53][4] , \coeff[53][3] ,
         \coeff[53][2] , \coeff[53][1] , \coeff[53][0] , \coeff[54][7] ,
         \coeff[54][6] , \coeff[54][5] , \coeff[54][4] , \coeff[54][3] ,
         \coeff[54][2] , \coeff[54][1] , \coeff[54][0] , \coeff[55][7] ,
         \coeff[55][6] , \coeff[55][5] , \coeff[55][4] , \coeff[55][3] ,
         \coeff[55][2] , \coeff[55][1] , \coeff[55][0] , \coeff[56][7] ,
         \coeff[56][6] , \coeff[56][5] , \coeff[56][4] , \coeff[56][3] ,
         \coeff[56][2] , \coeff[56][1] , \coeff[56][0] , \coeff[57][7] ,
         \coeff[57][6] , \coeff[57][5] , \coeff[57][4] , \coeff[57][3] ,
         \coeff[57][2] , \coeff[57][1] , \coeff[57][0] , \coeff[58][7] ,
         \coeff[58][6] , \coeff[58][5] , \coeff[58][4] , \coeff[58][3] ,
         \coeff[58][2] , \coeff[58][1] , \coeff[58][0] , \coeff[59][7] ,
         \coeff[59][6] , \coeff[59][5] , \coeff[59][4] , \coeff[59][3] ,
         \coeff[59][2] , \coeff[59][1] , \coeff[59][0] , \coeff[60][7] ,
         \coeff[60][6] , \coeff[60][5] , \coeff[60][4] , \coeff[60][3] ,
         \coeff[60][2] , \coeff[60][1] , \coeff[60][0] , \coeff[61][7] ,
         \coeff[61][6] , \coeff[61][5] , \coeff[61][4] , \coeff[61][3] ,
         \coeff[61][2] , \coeff[61][1] , \coeff[61][0] , \coeff[62][7] ,
         \coeff[62][6] , \coeff[62][5] , \coeff[62][4] , \coeff[62][3] ,
         \coeff[62][2] , \coeff[62][1] , \coeff[62][0] , \coeff[63][7] ,
         \coeff[63][6] , \coeff[63][5] , \coeff[63][4] , \coeff[63][3] ,
         \coeff[63][2] , \coeff[63][1] , \coeff[63][0] , \coeff[64][7] ,
         \coeff[64][6] , \coeff[64][5] , \coeff[64][4] , \coeff[64][3] ,
         \coeff[64][2] , \coeff[64][1] , \coeff[64][0] , \coeff[65][7] ,
         \coeff[65][6] , \coeff[65][5] , \coeff[65][4] , \coeff[65][3] ,
         \coeff[65][2] , \coeff[65][1] , \coeff[65][0] , \coeff[66][7] ,
         \coeff[66][6] , \coeff[66][5] , \coeff[66][4] , \coeff[66][3] ,
         \coeff[66][2] , \coeff[66][1] , \coeff[66][0] , \coeff[67][7] ,
         \coeff[67][6] , \coeff[67][5] , \coeff[67][4] , \coeff[67][3] ,
         \coeff[67][2] , \coeff[67][1] , \coeff[67][0] , \coeff[68][7] ,
         \coeff[68][6] , \coeff[68][5] , \coeff[68][4] , \coeff[68][3] ,
         \coeff[68][2] , \coeff[68][1] , \coeff[68][0] , \coeff[69][7] ,
         \coeff[69][6] , \coeff[69][5] , \coeff[69][4] , \coeff[69][3] ,
         \coeff[69][2] , \coeff[69][1] , \coeff[69][0] , \coeff[70][7] ,
         \coeff[70][6] , \coeff[70][5] , \coeff[70][4] , \coeff[70][3] ,
         \coeff[70][2] , \coeff[70][1] , \coeff[70][0] ;

  dsp_slice_70 \GEN_SLICE[0].u_fir_slice  ( .clk(clk), .sample_in(sample_in), 
        .accum_in({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0}), .coeff_in({\coeff[0][7] , \coeff[0][6] , \coeff[0][5] , 
        \coeff[0][4] , \coeff[0][3] , \coeff[0][2] , \coeff[0][1] , 
        \coeff[0][0] }), .sample_out({\sample_internal[1][3] , 
        \sample_internal[1][2] , \sample_internal[1][1] , 
        \sample_internal[1][0] }), .accum_out({\accum_internal[1][11] , 
        \accum_internal[1][10] , \accum_internal[1][9] , 
        \accum_internal[1][8] , \accum_internal[1][7] , \accum_internal[1][6] , 
        \accum_internal[1][5] , \accum_internal[1][4] , \accum_internal[1][3] , 
        \accum_internal[1][2] , \accum_internal[1][1] , \accum_internal[1][0] }) );
  dsp_slice_69 \GEN_SLICE[1].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[1][3] , \sample_internal[1][2] , 
        \sample_internal[1][1] , \sample_internal[1][0] }), .accum_in({
        \accum_internal[1][11] , \accum_internal[1][10] , 
        \accum_internal[1][9] , \accum_internal[1][8] , \accum_internal[1][7] , 
        \accum_internal[1][6] , \accum_internal[1][5] , \accum_internal[1][4] , 
        \accum_internal[1][3] , \accum_internal[1][2] , \accum_internal[1][1] , 
        \accum_internal[1][0] }), .coeff_in({\coeff[1][7] , \coeff[1][6] , 
        \coeff[1][5] , \coeff[1][4] , \coeff[1][3] , \coeff[1][2] , 
        \coeff[1][1] , \coeff[1][0] }), .sample_out({\sample_internal[2][3] , 
        \sample_internal[2][2] , \sample_internal[2][1] , 
        \sample_internal[2][0] }), .accum_out({\accum_internal[2][11] , 
        \accum_internal[2][10] , \accum_internal[2][9] , 
        \accum_internal[2][8] , \accum_internal[2][7] , \accum_internal[2][6] , 
        \accum_internal[2][5] , \accum_internal[2][4] , \accum_internal[2][3] , 
        \accum_internal[2][2] , \accum_internal[2][1] , \accum_internal[2][0] }) );
  dsp_slice_68 \GEN_SLICE[2].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[2][3] , \sample_internal[2][2] , 
        \sample_internal[2][1] , \sample_internal[2][0] }), .accum_in({
        \accum_internal[2][11] , \accum_internal[2][10] , 
        \accum_internal[2][9] , \accum_internal[2][8] , \accum_internal[2][7] , 
        \accum_internal[2][6] , \accum_internal[2][5] , \accum_internal[2][4] , 
        \accum_internal[2][3] , \accum_internal[2][2] , \accum_internal[2][1] , 
        \accum_internal[2][0] }), .coeff_in({\coeff[2][7] , \coeff[2][6] , 
        \coeff[2][5] , \coeff[2][4] , \coeff[2][3] , \coeff[2][2] , 
        \coeff[2][1] , \coeff[2][0] }), .sample_out({\sample_internal[3][3] , 
        \sample_internal[3][2] , \sample_internal[3][1] , 
        \sample_internal[3][0] }), .accum_out({\accum_internal[3][11] , 
        \accum_internal[3][10] , \accum_internal[3][9] , 
        \accum_internal[3][8] , \accum_internal[3][7] , \accum_internal[3][6] , 
        \accum_internal[3][5] , \accum_internal[3][4] , \accum_internal[3][3] , 
        \accum_internal[3][2] , \accum_internal[3][1] , \accum_internal[3][0] }) );
  dsp_slice_67 \GEN_SLICE[3].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[3][3] , \sample_internal[3][2] , 
        \sample_internal[3][1] , \sample_internal[3][0] }), .accum_in({
        \accum_internal[3][11] , \accum_internal[3][10] , 
        \accum_internal[3][9] , \accum_internal[3][8] , \accum_internal[3][7] , 
        \accum_internal[3][6] , \accum_internal[3][5] , \accum_internal[3][4] , 
        \accum_internal[3][3] , \accum_internal[3][2] , \accum_internal[3][1] , 
        \accum_internal[3][0] }), .coeff_in({\coeff[3][7] , \coeff[3][6] , 
        \coeff[3][5] , \coeff[3][4] , \coeff[3][3] , \coeff[3][2] , 
        \coeff[3][1] , \coeff[3][0] }), .sample_out({\sample_internal[4][3] , 
        \sample_internal[4][2] , \sample_internal[4][1] , 
        \sample_internal[4][0] }), .accum_out({\accum_internal[4][11] , 
        \accum_internal[4][10] , \accum_internal[4][9] , 
        \accum_internal[4][8] , \accum_internal[4][7] , \accum_internal[4][6] , 
        \accum_internal[4][5] , \accum_internal[4][4] , \accum_internal[4][3] , 
        \accum_internal[4][2] , \accum_internal[4][1] , \accum_internal[4][0] }) );
  dsp_slice_66 \GEN_SLICE[4].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[4][3] , \sample_internal[4][2] , 
        \sample_internal[4][1] , \sample_internal[4][0] }), .accum_in({
        \accum_internal[4][11] , \accum_internal[4][10] , 
        \accum_internal[4][9] , \accum_internal[4][8] , \accum_internal[4][7] , 
        \accum_internal[4][6] , \accum_internal[4][5] , \accum_internal[4][4] , 
        \accum_internal[4][3] , \accum_internal[4][2] , \accum_internal[4][1] , 
        \accum_internal[4][0] }), .coeff_in({\coeff[4][7] , \coeff[4][6] , 
        \coeff[4][5] , \coeff[4][4] , \coeff[4][3] , \coeff[4][2] , 
        \coeff[4][1] , \coeff[4][0] }), .sample_out({\sample_internal[5][3] , 
        \sample_internal[5][2] , \sample_internal[5][1] , 
        \sample_internal[5][0] }), .accum_out({\accum_internal[5][11] , 
        \accum_internal[5][10] , \accum_internal[5][9] , 
        \accum_internal[5][8] , \accum_internal[5][7] , \accum_internal[5][6] , 
        \accum_internal[5][5] , \accum_internal[5][4] , \accum_internal[5][3] , 
        \accum_internal[5][2] , \accum_internal[5][1] , \accum_internal[5][0] }) );
  dsp_slice_65 \GEN_SLICE[5].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[5][3] , \sample_internal[5][2] , 
        \sample_internal[5][1] , \sample_internal[5][0] }), .accum_in({
        \accum_internal[5][11] , \accum_internal[5][10] , 
        \accum_internal[5][9] , \accum_internal[5][8] , \accum_internal[5][7] , 
        \accum_internal[5][6] , \accum_internal[5][5] , \accum_internal[5][4] , 
        \accum_internal[5][3] , \accum_internal[5][2] , \accum_internal[5][1] , 
        \accum_internal[5][0] }), .coeff_in({\coeff[5][7] , \coeff[5][6] , 
        \coeff[5][5] , \coeff[5][4] , \coeff[5][3] , \coeff[5][2] , 
        \coeff[5][1] , \coeff[5][0] }), .sample_out({\sample_internal[6][3] , 
        \sample_internal[6][2] , \sample_internal[6][1] , 
        \sample_internal[6][0] }), .accum_out({\accum_internal[6][11] , 
        \accum_internal[6][10] , \accum_internal[6][9] , 
        \accum_internal[6][8] , \accum_internal[6][7] , \accum_internal[6][6] , 
        \accum_internal[6][5] , \accum_internal[6][4] , \accum_internal[6][3] , 
        \accum_internal[6][2] , \accum_internal[6][1] , \accum_internal[6][0] }) );
  dsp_slice_64 \GEN_SLICE[6].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[6][3] , \sample_internal[6][2] , 
        \sample_internal[6][1] , \sample_internal[6][0] }), .accum_in({
        \accum_internal[6][11] , \accum_internal[6][10] , 
        \accum_internal[6][9] , \accum_internal[6][8] , \accum_internal[6][7] , 
        \accum_internal[6][6] , \accum_internal[6][5] , \accum_internal[6][4] , 
        \accum_internal[6][3] , \accum_internal[6][2] , \accum_internal[6][1] , 
        \accum_internal[6][0] }), .coeff_in({\coeff[6][7] , \coeff[6][6] , 
        \coeff[6][5] , \coeff[6][4] , \coeff[6][3] , \coeff[6][2] , 
        \coeff[6][1] , \coeff[6][0] }), .sample_out({\sample_internal[7][3] , 
        \sample_internal[7][2] , \sample_internal[7][1] , 
        \sample_internal[7][0] }), .accum_out({\accum_internal[7][11] , 
        \accum_internal[7][10] , \accum_internal[7][9] , 
        \accum_internal[7][8] , \accum_internal[7][7] , \accum_internal[7][6] , 
        \accum_internal[7][5] , \accum_internal[7][4] , \accum_internal[7][3] , 
        \accum_internal[7][2] , \accum_internal[7][1] , \accum_internal[7][0] }) );
  dsp_slice_63 \GEN_SLICE[7].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[7][3] , \sample_internal[7][2] , 
        \sample_internal[7][1] , \sample_internal[7][0] }), .accum_in({
        \accum_internal[7][11] , \accum_internal[7][10] , 
        \accum_internal[7][9] , \accum_internal[7][8] , \accum_internal[7][7] , 
        \accum_internal[7][6] , \accum_internal[7][5] , \accum_internal[7][4] , 
        \accum_internal[7][3] , \accum_internal[7][2] , \accum_internal[7][1] , 
        \accum_internal[7][0] }), .coeff_in({\coeff[7][7] , \coeff[7][6] , 
        \coeff[7][5] , \coeff[7][4] , \coeff[7][3] , \coeff[7][2] , 
        \coeff[7][1] , \coeff[7][0] }), .sample_out({\sample_internal[8][3] , 
        \sample_internal[8][2] , \sample_internal[8][1] , 
        \sample_internal[8][0] }), .accum_out({\accum_internal[8][11] , 
        \accum_internal[8][10] , \accum_internal[8][9] , 
        \accum_internal[8][8] , \accum_internal[8][7] , \accum_internal[8][6] , 
        \accum_internal[8][5] , \accum_internal[8][4] , \accum_internal[8][3] , 
        \accum_internal[8][2] , \accum_internal[8][1] , \accum_internal[8][0] }) );
  dsp_slice_62 \GEN_SLICE[8].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[8][3] , \sample_internal[8][2] , 
        \sample_internal[8][1] , \sample_internal[8][0] }), .accum_in({
        \accum_internal[8][11] , \accum_internal[8][10] , 
        \accum_internal[8][9] , \accum_internal[8][8] , \accum_internal[8][7] , 
        \accum_internal[8][6] , \accum_internal[8][5] , \accum_internal[8][4] , 
        \accum_internal[8][3] , \accum_internal[8][2] , \accum_internal[8][1] , 
        \accum_internal[8][0] }), .coeff_in({\coeff[8][7] , \coeff[8][6] , 
        \coeff[8][5] , \coeff[8][4] , \coeff[8][3] , \coeff[8][2] , 
        \coeff[8][1] , \coeff[8][0] }), .sample_out({\sample_internal[9][3] , 
        \sample_internal[9][2] , \sample_internal[9][1] , 
        \sample_internal[9][0] }), .accum_out({\accum_internal[9][11] , 
        \accum_internal[9][10] , \accum_internal[9][9] , 
        \accum_internal[9][8] , \accum_internal[9][7] , \accum_internal[9][6] , 
        \accum_internal[9][5] , \accum_internal[9][4] , \accum_internal[9][3] , 
        \accum_internal[9][2] , \accum_internal[9][1] , \accum_internal[9][0] }) );
  dsp_slice_61 \GEN_SLICE[9].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[9][3] , \sample_internal[9][2] , 
        \sample_internal[9][1] , \sample_internal[9][0] }), .accum_in({
        \accum_internal[9][11] , \accum_internal[9][10] , 
        \accum_internal[9][9] , \accum_internal[9][8] , \accum_internal[9][7] , 
        \accum_internal[9][6] , \accum_internal[9][5] , \accum_internal[9][4] , 
        \accum_internal[9][3] , \accum_internal[9][2] , \accum_internal[9][1] , 
        \accum_internal[9][0] }), .coeff_in({\coeff[9][7] , \coeff[9][6] , 
        \coeff[9][5] , \coeff[9][4] , \coeff[9][3] , \coeff[9][2] , 
        \coeff[9][1] , \coeff[9][0] }), .sample_out({\sample_internal[10][3] , 
        \sample_internal[10][2] , \sample_internal[10][1] , 
        \sample_internal[10][0] }), .accum_out({\accum_internal[10][11] , 
        \accum_internal[10][10] , \accum_internal[10][9] , 
        \accum_internal[10][8] , \accum_internal[10][7] , 
        \accum_internal[10][6] , \accum_internal[10][5] , 
        \accum_internal[10][4] , \accum_internal[10][3] , 
        \accum_internal[10][2] , \accum_internal[10][1] , 
        \accum_internal[10][0] }) );
  dsp_slice_60 \GEN_SLICE[10].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[10][3] , \sample_internal[10][2] , 
        \sample_internal[10][1] , \sample_internal[10][0] }), .accum_in({
        \accum_internal[10][11] , \accum_internal[10][10] , 
        \accum_internal[10][9] , \accum_internal[10][8] , 
        \accum_internal[10][7] , \accum_internal[10][6] , 
        \accum_internal[10][5] , \accum_internal[10][4] , 
        \accum_internal[10][3] , \accum_internal[10][2] , 
        \accum_internal[10][1] , \accum_internal[10][0] }), .coeff_in({
        \coeff[10][7] , \coeff[10][6] , \coeff[10][5] , \coeff[10][4] , 
        \coeff[10][3] , \coeff[10][2] , \coeff[10][1] , \coeff[10][0] }), 
        .sample_out({\sample_internal[11][3] , \sample_internal[11][2] , 
        \sample_internal[11][1] , \sample_internal[11][0] }), .accum_out({
        \accum_internal[11][11] , \accum_internal[11][10] , 
        \accum_internal[11][9] , \accum_internal[11][8] , 
        \accum_internal[11][7] , \accum_internal[11][6] , 
        \accum_internal[11][5] , \accum_internal[11][4] , 
        \accum_internal[11][3] , \accum_internal[11][2] , 
        \accum_internal[11][1] , \accum_internal[11][0] }) );
  dsp_slice_59 \GEN_SLICE[11].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[11][3] , \sample_internal[11][2] , 
        \sample_internal[11][1] , \sample_internal[11][0] }), .accum_in({
        \accum_internal[11][11] , \accum_internal[11][10] , 
        \accum_internal[11][9] , \accum_internal[11][8] , 
        \accum_internal[11][7] , \accum_internal[11][6] , 
        \accum_internal[11][5] , \accum_internal[11][4] , 
        \accum_internal[11][3] , \accum_internal[11][2] , 
        \accum_internal[11][1] , \accum_internal[11][0] }), .coeff_in({
        \coeff[11][7] , \coeff[11][6] , \coeff[11][5] , \coeff[11][4] , 
        \coeff[11][3] , \coeff[11][2] , \coeff[11][1] , \coeff[11][0] }), 
        .sample_out({\sample_internal[12][3] , \sample_internal[12][2] , 
        \sample_internal[12][1] , \sample_internal[12][0] }), .accum_out({
        \accum_internal[12][11] , \accum_internal[12][10] , 
        \accum_internal[12][9] , \accum_internal[12][8] , 
        \accum_internal[12][7] , \accum_internal[12][6] , 
        \accum_internal[12][5] , \accum_internal[12][4] , 
        \accum_internal[12][3] , \accum_internal[12][2] , 
        \accum_internal[12][1] , \accum_internal[12][0] }) );
  dsp_slice_58 \GEN_SLICE[12].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[12][3] , \sample_internal[12][2] , 
        \sample_internal[12][1] , \sample_internal[12][0] }), .accum_in({
        \accum_internal[12][11] , \accum_internal[12][10] , 
        \accum_internal[12][9] , \accum_internal[12][8] , 
        \accum_internal[12][7] , \accum_internal[12][6] , 
        \accum_internal[12][5] , \accum_internal[12][4] , 
        \accum_internal[12][3] , \accum_internal[12][2] , 
        \accum_internal[12][1] , \accum_internal[12][0] }), .coeff_in({
        \coeff[12][7] , \coeff[12][6] , \coeff[12][5] , \coeff[12][4] , 
        \coeff[12][3] , \coeff[12][2] , \coeff[12][1] , \coeff[12][0] }), 
        .sample_out({\sample_internal[13][3] , \sample_internal[13][2] , 
        \sample_internal[13][1] , \sample_internal[13][0] }), .accum_out({
        \accum_internal[13][11] , \accum_internal[13][10] , 
        \accum_internal[13][9] , \accum_internal[13][8] , 
        \accum_internal[13][7] , \accum_internal[13][6] , 
        \accum_internal[13][5] , \accum_internal[13][4] , 
        \accum_internal[13][3] , \accum_internal[13][2] , 
        \accum_internal[13][1] , \accum_internal[13][0] }) );
  dsp_slice_57 \GEN_SLICE[13].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[13][3] , \sample_internal[13][2] , 
        \sample_internal[13][1] , \sample_internal[13][0] }), .accum_in({
        \accum_internal[13][11] , \accum_internal[13][10] , 
        \accum_internal[13][9] , \accum_internal[13][8] , 
        \accum_internal[13][7] , \accum_internal[13][6] , 
        \accum_internal[13][5] , \accum_internal[13][4] , 
        \accum_internal[13][3] , \accum_internal[13][2] , 
        \accum_internal[13][1] , \accum_internal[13][0] }), .coeff_in({
        \coeff[13][7] , \coeff[13][6] , \coeff[13][5] , \coeff[13][4] , 
        \coeff[13][3] , \coeff[13][2] , \coeff[13][1] , \coeff[13][0] }), 
        .sample_out({\sample_internal[14][3] , \sample_internal[14][2] , 
        \sample_internal[14][1] , \sample_internal[14][0] }), .accum_out({
        \accum_internal[14][11] , \accum_internal[14][10] , 
        \accum_internal[14][9] , \accum_internal[14][8] , 
        \accum_internal[14][7] , \accum_internal[14][6] , 
        \accum_internal[14][5] , \accum_internal[14][4] , 
        \accum_internal[14][3] , \accum_internal[14][2] , 
        \accum_internal[14][1] , \accum_internal[14][0] }) );
  dsp_slice_56 \GEN_SLICE[14].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[14][3] , \sample_internal[14][2] , 
        \sample_internal[14][1] , \sample_internal[14][0] }), .accum_in({
        \accum_internal[14][11] , \accum_internal[14][10] , 
        \accum_internal[14][9] , \accum_internal[14][8] , 
        \accum_internal[14][7] , \accum_internal[14][6] , 
        \accum_internal[14][5] , \accum_internal[14][4] , 
        \accum_internal[14][3] , \accum_internal[14][2] , 
        \accum_internal[14][1] , \accum_internal[14][0] }), .coeff_in({
        \coeff[14][7] , \coeff[14][6] , \coeff[14][5] , \coeff[14][4] , 
        \coeff[14][3] , \coeff[14][2] , \coeff[14][1] , \coeff[14][0] }), 
        .sample_out({\sample_internal[15][3] , \sample_internal[15][2] , 
        \sample_internal[15][1] , \sample_internal[15][0] }), .accum_out({
        \accum_internal[15][11] , \accum_internal[15][10] , 
        \accum_internal[15][9] , \accum_internal[15][8] , 
        \accum_internal[15][7] , \accum_internal[15][6] , 
        \accum_internal[15][5] , \accum_internal[15][4] , 
        \accum_internal[15][3] , \accum_internal[15][2] , 
        \accum_internal[15][1] , \accum_internal[15][0] }) );
  dsp_slice_55 \GEN_SLICE[15].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[15][3] , \sample_internal[15][2] , 
        \sample_internal[15][1] , \sample_internal[15][0] }), .accum_in({
        \accum_internal[15][11] , \accum_internal[15][10] , 
        \accum_internal[15][9] , \accum_internal[15][8] , 
        \accum_internal[15][7] , \accum_internal[15][6] , 
        \accum_internal[15][5] , \accum_internal[15][4] , 
        \accum_internal[15][3] , \accum_internal[15][2] , 
        \accum_internal[15][1] , \accum_internal[15][0] }), .coeff_in({
        \coeff[15][7] , \coeff[15][6] , \coeff[15][5] , \coeff[15][4] , 
        \coeff[15][3] , \coeff[15][2] , \coeff[15][1] , \coeff[15][0] }), 
        .sample_out({\sample_internal[16][3] , \sample_internal[16][2] , 
        \sample_internal[16][1] , \sample_internal[16][0] }), .accum_out({
        \accum_internal[16][11] , \accum_internal[16][10] , 
        \accum_internal[16][9] , \accum_internal[16][8] , 
        \accum_internal[16][7] , \accum_internal[16][6] , 
        \accum_internal[16][5] , \accum_internal[16][4] , 
        \accum_internal[16][3] , \accum_internal[16][2] , 
        \accum_internal[16][1] , \accum_internal[16][0] }) );
  dsp_slice_54 \GEN_SLICE[16].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[16][3] , \sample_internal[16][2] , 
        \sample_internal[16][1] , \sample_internal[16][0] }), .accum_in({
        \accum_internal[16][11] , \accum_internal[16][10] , 
        \accum_internal[16][9] , \accum_internal[16][8] , 
        \accum_internal[16][7] , \accum_internal[16][6] , 
        \accum_internal[16][5] , \accum_internal[16][4] , 
        \accum_internal[16][3] , \accum_internal[16][2] , 
        \accum_internal[16][1] , \accum_internal[16][0] }), .coeff_in({
        \coeff[16][7] , \coeff[16][6] , \coeff[16][5] , \coeff[16][4] , 
        \coeff[16][3] , \coeff[16][2] , \coeff[16][1] , \coeff[16][0] }), 
        .sample_out({\sample_internal[17][3] , \sample_internal[17][2] , 
        \sample_internal[17][1] , \sample_internal[17][0] }), .accum_out({
        \accum_internal[17][11] , \accum_internal[17][10] , 
        \accum_internal[17][9] , \accum_internal[17][8] , 
        \accum_internal[17][7] , \accum_internal[17][6] , 
        \accum_internal[17][5] , \accum_internal[17][4] , 
        \accum_internal[17][3] , \accum_internal[17][2] , 
        \accum_internal[17][1] , \accum_internal[17][0] }) );
  dsp_slice_53 \GEN_SLICE[17].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[17][3] , \sample_internal[17][2] , 
        \sample_internal[17][1] , \sample_internal[17][0] }), .accum_in({
        \accum_internal[17][11] , \accum_internal[17][10] , 
        \accum_internal[17][9] , \accum_internal[17][8] , 
        \accum_internal[17][7] , \accum_internal[17][6] , 
        \accum_internal[17][5] , \accum_internal[17][4] , 
        \accum_internal[17][3] , \accum_internal[17][2] , 
        \accum_internal[17][1] , \accum_internal[17][0] }), .coeff_in({
        \coeff[17][7] , \coeff[17][6] , \coeff[17][5] , \coeff[17][4] , 
        \coeff[17][3] , \coeff[17][2] , \coeff[17][1] , \coeff[17][0] }), 
        .sample_out({\sample_internal[18][3] , \sample_internal[18][2] , 
        \sample_internal[18][1] , \sample_internal[18][0] }), .accum_out({
        \accum_internal[18][11] , \accum_internal[18][10] , 
        \accum_internal[18][9] , \accum_internal[18][8] , 
        \accum_internal[18][7] , \accum_internal[18][6] , 
        \accum_internal[18][5] , \accum_internal[18][4] , 
        \accum_internal[18][3] , \accum_internal[18][2] , 
        \accum_internal[18][1] , \accum_internal[18][0] }) );
  dsp_slice_52 \GEN_SLICE[18].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[18][3] , \sample_internal[18][2] , 
        \sample_internal[18][1] , \sample_internal[18][0] }), .accum_in({
        \accum_internal[18][11] , \accum_internal[18][10] , 
        \accum_internal[18][9] , \accum_internal[18][8] , 
        \accum_internal[18][7] , \accum_internal[18][6] , 
        \accum_internal[18][5] , \accum_internal[18][4] , 
        \accum_internal[18][3] , \accum_internal[18][2] , 
        \accum_internal[18][1] , \accum_internal[18][0] }), .coeff_in({
        \coeff[18][7] , \coeff[18][6] , \coeff[18][5] , \coeff[18][4] , 
        \coeff[18][3] , \coeff[18][2] , \coeff[18][1] , \coeff[18][0] }), 
        .sample_out({\sample_internal[19][3] , \sample_internal[19][2] , 
        \sample_internal[19][1] , \sample_internal[19][0] }), .accum_out({
        \accum_internal[19][11] , \accum_internal[19][10] , 
        \accum_internal[19][9] , \accum_internal[19][8] , 
        \accum_internal[19][7] , \accum_internal[19][6] , 
        \accum_internal[19][5] , \accum_internal[19][4] , 
        \accum_internal[19][3] , \accum_internal[19][2] , 
        \accum_internal[19][1] , \accum_internal[19][0] }) );
  dsp_slice_51 \GEN_SLICE[19].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[19][3] , \sample_internal[19][2] , 
        \sample_internal[19][1] , \sample_internal[19][0] }), .accum_in({
        \accum_internal[19][11] , \accum_internal[19][10] , 
        \accum_internal[19][9] , \accum_internal[19][8] , 
        \accum_internal[19][7] , \accum_internal[19][6] , 
        \accum_internal[19][5] , \accum_internal[19][4] , 
        \accum_internal[19][3] , \accum_internal[19][2] , 
        \accum_internal[19][1] , \accum_internal[19][0] }), .coeff_in({
        \coeff[19][7] , \coeff[19][6] , \coeff[19][5] , \coeff[19][4] , 
        \coeff[19][3] , \coeff[19][2] , \coeff[19][1] , \coeff[19][0] }), 
        .sample_out({\sample_internal[20][3] , \sample_internal[20][2] , 
        \sample_internal[20][1] , \sample_internal[20][0] }), .accum_out({
        \accum_internal[20][11] , \accum_internal[20][10] , 
        \accum_internal[20][9] , \accum_internal[20][8] , 
        \accum_internal[20][7] , \accum_internal[20][6] , 
        \accum_internal[20][5] , \accum_internal[20][4] , 
        \accum_internal[20][3] , \accum_internal[20][2] , 
        \accum_internal[20][1] , \accum_internal[20][0] }) );
  dsp_slice_50 \GEN_SLICE[20].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[20][3] , \sample_internal[20][2] , 
        \sample_internal[20][1] , \sample_internal[20][0] }), .accum_in({
        \accum_internal[20][11] , \accum_internal[20][10] , 
        \accum_internal[20][9] , \accum_internal[20][8] , 
        \accum_internal[20][7] , \accum_internal[20][6] , 
        \accum_internal[20][5] , \accum_internal[20][4] , 
        \accum_internal[20][3] , \accum_internal[20][2] , 
        \accum_internal[20][1] , \accum_internal[20][0] }), .coeff_in({
        \coeff[20][7] , \coeff[20][6] , \coeff[20][5] , \coeff[20][4] , 
        \coeff[20][3] , \coeff[20][2] , \coeff[20][1] , \coeff[20][0] }), 
        .sample_out({\sample_internal[21][3] , \sample_internal[21][2] , 
        \sample_internal[21][1] , \sample_internal[21][0] }), .accum_out({
        \accum_internal[21][11] , \accum_internal[21][10] , 
        \accum_internal[21][9] , \accum_internal[21][8] , 
        \accum_internal[21][7] , \accum_internal[21][6] , 
        \accum_internal[21][5] , \accum_internal[21][4] , 
        \accum_internal[21][3] , \accum_internal[21][2] , 
        \accum_internal[21][1] , \accum_internal[21][0] }) );
  dsp_slice_49 \GEN_SLICE[21].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[21][3] , \sample_internal[21][2] , 
        \sample_internal[21][1] , \sample_internal[21][0] }), .accum_in({
        \accum_internal[21][11] , \accum_internal[21][10] , 
        \accum_internal[21][9] , \accum_internal[21][8] , 
        \accum_internal[21][7] , \accum_internal[21][6] , 
        \accum_internal[21][5] , \accum_internal[21][4] , 
        \accum_internal[21][3] , \accum_internal[21][2] , 
        \accum_internal[21][1] , \accum_internal[21][0] }), .coeff_in({
        \coeff[21][7] , \coeff[21][6] , \coeff[21][5] , \coeff[21][4] , 
        \coeff[21][3] , \coeff[21][2] , \coeff[21][1] , \coeff[21][0] }), 
        .sample_out({\sample_internal[22][3] , \sample_internal[22][2] , 
        \sample_internal[22][1] , \sample_internal[22][0] }), .accum_out({
        \accum_internal[22][11] , \accum_internal[22][10] , 
        \accum_internal[22][9] , \accum_internal[22][8] , 
        \accum_internal[22][7] , \accum_internal[22][6] , 
        \accum_internal[22][5] , \accum_internal[22][4] , 
        \accum_internal[22][3] , \accum_internal[22][2] , 
        \accum_internal[22][1] , \accum_internal[22][0] }) );
  dsp_slice_48 \GEN_SLICE[22].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[22][3] , \sample_internal[22][2] , 
        \sample_internal[22][1] , \sample_internal[22][0] }), .accum_in({
        \accum_internal[22][11] , \accum_internal[22][10] , 
        \accum_internal[22][9] , \accum_internal[22][8] , 
        \accum_internal[22][7] , \accum_internal[22][6] , 
        \accum_internal[22][5] , \accum_internal[22][4] , 
        \accum_internal[22][3] , \accum_internal[22][2] , 
        \accum_internal[22][1] , \accum_internal[22][0] }), .coeff_in({
        \coeff[22][7] , \coeff[22][6] , \coeff[22][5] , \coeff[22][4] , 
        \coeff[22][3] , \coeff[22][2] , \coeff[22][1] , \coeff[22][0] }), 
        .sample_out({\sample_internal[23][3] , \sample_internal[23][2] , 
        \sample_internal[23][1] , \sample_internal[23][0] }), .accum_out({
        \accum_internal[23][11] , \accum_internal[23][10] , 
        \accum_internal[23][9] , \accum_internal[23][8] , 
        \accum_internal[23][7] , \accum_internal[23][6] , 
        \accum_internal[23][5] , \accum_internal[23][4] , 
        \accum_internal[23][3] , \accum_internal[23][2] , 
        \accum_internal[23][1] , \accum_internal[23][0] }) );
  dsp_slice_47 \GEN_SLICE[23].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[23][3] , \sample_internal[23][2] , 
        \sample_internal[23][1] , \sample_internal[23][0] }), .accum_in({
        \accum_internal[23][11] , \accum_internal[23][10] , 
        \accum_internal[23][9] , \accum_internal[23][8] , 
        \accum_internal[23][7] , \accum_internal[23][6] , 
        \accum_internal[23][5] , \accum_internal[23][4] , 
        \accum_internal[23][3] , \accum_internal[23][2] , 
        \accum_internal[23][1] , \accum_internal[23][0] }), .coeff_in({
        \coeff[23][7] , \coeff[23][6] , \coeff[23][5] , \coeff[23][4] , 
        \coeff[23][3] , \coeff[23][2] , \coeff[23][1] , \coeff[23][0] }), 
        .sample_out({\sample_internal[24][3] , \sample_internal[24][2] , 
        \sample_internal[24][1] , \sample_internal[24][0] }), .accum_out({
        \accum_internal[24][11] , \accum_internal[24][10] , 
        \accum_internal[24][9] , \accum_internal[24][8] , 
        \accum_internal[24][7] , \accum_internal[24][6] , 
        \accum_internal[24][5] , \accum_internal[24][4] , 
        \accum_internal[24][3] , \accum_internal[24][2] , 
        \accum_internal[24][1] , \accum_internal[24][0] }) );
  dsp_slice_46 \GEN_SLICE[24].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[24][3] , \sample_internal[24][2] , 
        \sample_internal[24][1] , \sample_internal[24][0] }), .accum_in({
        \accum_internal[24][11] , \accum_internal[24][10] , 
        \accum_internal[24][9] , \accum_internal[24][8] , 
        \accum_internal[24][7] , \accum_internal[24][6] , 
        \accum_internal[24][5] , \accum_internal[24][4] , 
        \accum_internal[24][3] , \accum_internal[24][2] , 
        \accum_internal[24][1] , \accum_internal[24][0] }), .coeff_in({
        \coeff[24][7] , \coeff[24][6] , \coeff[24][5] , \coeff[24][4] , 
        \coeff[24][3] , \coeff[24][2] , \coeff[24][1] , \coeff[24][0] }), 
        .sample_out({\sample_internal[25][3] , \sample_internal[25][2] , 
        \sample_internal[25][1] , \sample_internal[25][0] }), .accum_out({
        \accum_internal[25][11] , \accum_internal[25][10] , 
        \accum_internal[25][9] , \accum_internal[25][8] , 
        \accum_internal[25][7] , \accum_internal[25][6] , 
        \accum_internal[25][5] , \accum_internal[25][4] , 
        \accum_internal[25][3] , \accum_internal[25][2] , 
        \accum_internal[25][1] , \accum_internal[25][0] }) );
  dsp_slice_45 \GEN_SLICE[25].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[25][3] , \sample_internal[25][2] , 
        \sample_internal[25][1] , \sample_internal[25][0] }), .accum_in({
        \accum_internal[25][11] , \accum_internal[25][10] , 
        \accum_internal[25][9] , \accum_internal[25][8] , 
        \accum_internal[25][7] , \accum_internal[25][6] , 
        \accum_internal[25][5] , \accum_internal[25][4] , 
        \accum_internal[25][3] , \accum_internal[25][2] , 
        \accum_internal[25][1] , \accum_internal[25][0] }), .coeff_in({
        \coeff[25][7] , \coeff[25][6] , \coeff[25][5] , \coeff[25][4] , 
        \coeff[25][3] , \coeff[25][2] , \coeff[25][1] , \coeff[25][0] }), 
        .sample_out({\sample_internal[26][3] , \sample_internal[26][2] , 
        \sample_internal[26][1] , \sample_internal[26][0] }), .accum_out({
        \accum_internal[26][11] , \accum_internal[26][10] , 
        \accum_internal[26][9] , \accum_internal[26][8] , 
        \accum_internal[26][7] , \accum_internal[26][6] , 
        \accum_internal[26][5] , \accum_internal[26][4] , 
        \accum_internal[26][3] , \accum_internal[26][2] , 
        \accum_internal[26][1] , \accum_internal[26][0] }) );
  dsp_slice_44 \GEN_SLICE[26].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[26][3] , \sample_internal[26][2] , 
        \sample_internal[26][1] , \sample_internal[26][0] }), .accum_in({
        \accum_internal[26][11] , \accum_internal[26][10] , 
        \accum_internal[26][9] , \accum_internal[26][8] , 
        \accum_internal[26][7] , \accum_internal[26][6] , 
        \accum_internal[26][5] , \accum_internal[26][4] , 
        \accum_internal[26][3] , \accum_internal[26][2] , 
        \accum_internal[26][1] , \accum_internal[26][0] }), .coeff_in({
        \coeff[26][7] , \coeff[26][6] , \coeff[26][5] , \coeff[26][4] , 
        \coeff[26][3] , \coeff[26][2] , \coeff[26][1] , \coeff[26][0] }), 
        .sample_out({\sample_internal[27][3] , \sample_internal[27][2] , 
        \sample_internal[27][1] , \sample_internal[27][0] }), .accum_out({
        \accum_internal[27][11] , \accum_internal[27][10] , 
        \accum_internal[27][9] , \accum_internal[27][8] , 
        \accum_internal[27][7] , \accum_internal[27][6] , 
        \accum_internal[27][5] , \accum_internal[27][4] , 
        \accum_internal[27][3] , \accum_internal[27][2] , 
        \accum_internal[27][1] , \accum_internal[27][0] }) );
  dsp_slice_43 \GEN_SLICE[27].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[27][3] , \sample_internal[27][2] , 
        \sample_internal[27][1] , \sample_internal[27][0] }), .accum_in({
        \accum_internal[27][11] , \accum_internal[27][10] , 
        \accum_internal[27][9] , \accum_internal[27][8] , 
        \accum_internal[27][7] , \accum_internal[27][6] , 
        \accum_internal[27][5] , \accum_internal[27][4] , 
        \accum_internal[27][3] , \accum_internal[27][2] , 
        \accum_internal[27][1] , \accum_internal[27][0] }), .coeff_in({
        \coeff[27][7] , \coeff[27][6] , \coeff[27][5] , \coeff[27][4] , 
        \coeff[27][3] , \coeff[27][2] , \coeff[27][1] , \coeff[27][0] }), 
        .sample_out({\sample_internal[28][3] , \sample_internal[28][2] , 
        \sample_internal[28][1] , \sample_internal[28][0] }), .accum_out({
        \accum_internal[28][11] , \accum_internal[28][10] , 
        \accum_internal[28][9] , \accum_internal[28][8] , 
        \accum_internal[28][7] , \accum_internal[28][6] , 
        \accum_internal[28][5] , \accum_internal[28][4] , 
        \accum_internal[28][3] , \accum_internal[28][2] , 
        \accum_internal[28][1] , \accum_internal[28][0] }) );
  dsp_slice_42 \GEN_SLICE[28].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[28][3] , \sample_internal[28][2] , 
        \sample_internal[28][1] , \sample_internal[28][0] }), .accum_in({
        \accum_internal[28][11] , \accum_internal[28][10] , 
        \accum_internal[28][9] , \accum_internal[28][8] , 
        \accum_internal[28][7] , \accum_internal[28][6] , 
        \accum_internal[28][5] , \accum_internal[28][4] , 
        \accum_internal[28][3] , \accum_internal[28][2] , 
        \accum_internal[28][1] , \accum_internal[28][0] }), .coeff_in({
        \coeff[28][7] , \coeff[28][6] , \coeff[28][5] , \coeff[28][4] , 
        \coeff[28][3] , \coeff[28][2] , \coeff[28][1] , \coeff[28][0] }), 
        .sample_out({\sample_internal[29][3] , \sample_internal[29][2] , 
        \sample_internal[29][1] , \sample_internal[29][0] }), .accum_out({
        \accum_internal[29][11] , \accum_internal[29][10] , 
        \accum_internal[29][9] , \accum_internal[29][8] , 
        \accum_internal[29][7] , \accum_internal[29][6] , 
        \accum_internal[29][5] , \accum_internal[29][4] , 
        \accum_internal[29][3] , \accum_internal[29][2] , 
        \accum_internal[29][1] , \accum_internal[29][0] }) );
  dsp_slice_41 \GEN_SLICE[29].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[29][3] , \sample_internal[29][2] , 
        \sample_internal[29][1] , \sample_internal[29][0] }), .accum_in({
        \accum_internal[29][11] , \accum_internal[29][10] , 
        \accum_internal[29][9] , \accum_internal[29][8] , 
        \accum_internal[29][7] , \accum_internal[29][6] , 
        \accum_internal[29][5] , \accum_internal[29][4] , 
        \accum_internal[29][3] , \accum_internal[29][2] , 
        \accum_internal[29][1] , \accum_internal[29][0] }), .coeff_in({
        \coeff[29][7] , \coeff[29][6] , \coeff[29][5] , \coeff[29][4] , 
        \coeff[29][3] , \coeff[29][2] , \coeff[29][1] , \coeff[29][0] }), 
        .sample_out({\sample_internal[30][3] , \sample_internal[30][2] , 
        \sample_internal[30][1] , \sample_internal[30][0] }), .accum_out({
        \accum_internal[30][11] , \accum_internal[30][10] , 
        \accum_internal[30][9] , \accum_internal[30][8] , 
        \accum_internal[30][7] , \accum_internal[30][6] , 
        \accum_internal[30][5] , \accum_internal[30][4] , 
        \accum_internal[30][3] , \accum_internal[30][2] , 
        \accum_internal[30][1] , \accum_internal[30][0] }) );
  dsp_slice_40 \GEN_SLICE[30].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[30][3] , \sample_internal[30][2] , 
        \sample_internal[30][1] , \sample_internal[30][0] }), .accum_in({
        \accum_internal[30][11] , \accum_internal[30][10] , 
        \accum_internal[30][9] , \accum_internal[30][8] , 
        \accum_internal[30][7] , \accum_internal[30][6] , 
        \accum_internal[30][5] , \accum_internal[30][4] , 
        \accum_internal[30][3] , \accum_internal[30][2] , 
        \accum_internal[30][1] , \accum_internal[30][0] }), .coeff_in({
        \coeff[30][7] , \coeff[30][6] , \coeff[30][5] , \coeff[30][4] , 
        \coeff[30][3] , \coeff[30][2] , \coeff[30][1] , \coeff[30][0] }), 
        .sample_out({\sample_internal[31][3] , \sample_internal[31][2] , 
        \sample_internal[31][1] , \sample_internal[31][0] }), .accum_out({
        \accum_internal[31][11] , \accum_internal[31][10] , 
        \accum_internal[31][9] , \accum_internal[31][8] , 
        \accum_internal[31][7] , \accum_internal[31][6] , 
        \accum_internal[31][5] , \accum_internal[31][4] , 
        \accum_internal[31][3] , \accum_internal[31][2] , 
        \accum_internal[31][1] , \accum_internal[31][0] }) );
  dsp_slice_39 \GEN_SLICE[31].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[31][3] , \sample_internal[31][2] , 
        \sample_internal[31][1] , \sample_internal[31][0] }), .accum_in({
        \accum_internal[31][11] , \accum_internal[31][10] , 
        \accum_internal[31][9] , \accum_internal[31][8] , 
        \accum_internal[31][7] , \accum_internal[31][6] , 
        \accum_internal[31][5] , \accum_internal[31][4] , 
        \accum_internal[31][3] , \accum_internal[31][2] , 
        \accum_internal[31][1] , \accum_internal[31][0] }), .coeff_in({
        \coeff[31][7] , \coeff[31][6] , \coeff[31][5] , \coeff[31][4] , 
        \coeff[31][3] , \coeff[31][2] , \coeff[31][1] , \coeff[31][0] }), 
        .sample_out({\sample_internal[32][3] , \sample_internal[32][2] , 
        \sample_internal[32][1] , \sample_internal[32][0] }), .accum_out({
        \accum_internal[32][11] , \accum_internal[32][10] , 
        \accum_internal[32][9] , \accum_internal[32][8] , 
        \accum_internal[32][7] , \accum_internal[32][6] , 
        \accum_internal[32][5] , \accum_internal[32][4] , 
        \accum_internal[32][3] , \accum_internal[32][2] , 
        \accum_internal[32][1] , \accum_internal[32][0] }) );
  dsp_slice_38 \GEN_SLICE[32].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[32][3] , \sample_internal[32][2] , 
        \sample_internal[32][1] , \sample_internal[32][0] }), .accum_in({
        \accum_internal[32][11] , \accum_internal[32][10] , 
        \accum_internal[32][9] , \accum_internal[32][8] , 
        \accum_internal[32][7] , \accum_internal[32][6] , 
        \accum_internal[32][5] , \accum_internal[32][4] , 
        \accum_internal[32][3] , \accum_internal[32][2] , 
        \accum_internal[32][1] , \accum_internal[32][0] }), .coeff_in({
        \coeff[32][7] , \coeff[32][6] , \coeff[32][5] , \coeff[32][4] , 
        \coeff[32][3] , \coeff[32][2] , \coeff[32][1] , \coeff[32][0] }), 
        .sample_out({\sample_internal[33][3] , \sample_internal[33][2] , 
        \sample_internal[33][1] , \sample_internal[33][0] }), .accum_out({
        \accum_internal[33][11] , \accum_internal[33][10] , 
        \accum_internal[33][9] , \accum_internal[33][8] , 
        \accum_internal[33][7] , \accum_internal[33][6] , 
        \accum_internal[33][5] , \accum_internal[33][4] , 
        \accum_internal[33][3] , \accum_internal[33][2] , 
        \accum_internal[33][1] , \accum_internal[33][0] }) );
  dsp_slice_37 \GEN_SLICE[33].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[33][3] , \sample_internal[33][2] , 
        \sample_internal[33][1] , \sample_internal[33][0] }), .accum_in({
        \accum_internal[33][11] , \accum_internal[33][10] , 
        \accum_internal[33][9] , \accum_internal[33][8] , 
        \accum_internal[33][7] , \accum_internal[33][6] , 
        \accum_internal[33][5] , \accum_internal[33][4] , 
        \accum_internal[33][3] , \accum_internal[33][2] , 
        \accum_internal[33][1] , \accum_internal[33][0] }), .coeff_in({
        \coeff[33][7] , \coeff[33][6] , \coeff[33][5] , \coeff[33][4] , 
        \coeff[33][3] , \coeff[33][2] , \coeff[33][1] , \coeff[33][0] }), 
        .sample_out({\sample_internal[34][3] , \sample_internal[34][2] , 
        \sample_internal[34][1] , \sample_internal[34][0] }), .accum_out({
        \accum_internal[34][11] , \accum_internal[34][10] , 
        \accum_internal[34][9] , \accum_internal[34][8] , 
        \accum_internal[34][7] , \accum_internal[34][6] , 
        \accum_internal[34][5] , \accum_internal[34][4] , 
        \accum_internal[34][3] , \accum_internal[34][2] , 
        \accum_internal[34][1] , \accum_internal[34][0] }) );
  dsp_slice_36 \GEN_SLICE[34].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[34][3] , \sample_internal[34][2] , 
        \sample_internal[34][1] , \sample_internal[34][0] }), .accum_in({
        \accum_internal[34][11] , \accum_internal[34][10] , 
        \accum_internal[34][9] , \accum_internal[34][8] , 
        \accum_internal[34][7] , \accum_internal[34][6] , 
        \accum_internal[34][5] , \accum_internal[34][4] , 
        \accum_internal[34][3] , \accum_internal[34][2] , 
        \accum_internal[34][1] , \accum_internal[34][0] }), .coeff_in({
        \coeff[34][7] , \coeff[34][6] , \coeff[34][5] , \coeff[34][4] , 
        \coeff[34][3] , \coeff[34][2] , \coeff[34][1] , \coeff[34][0] }), 
        .sample_out({\sample_internal[35][3] , \sample_internal[35][2] , 
        \sample_internal[35][1] , \sample_internal[35][0] }), .accum_out({
        \accum_internal[35][11] , \accum_internal[35][10] , 
        \accum_internal[35][9] , \accum_internal[35][8] , 
        \accum_internal[35][7] , \accum_internal[35][6] , 
        \accum_internal[35][5] , \accum_internal[35][4] , 
        \accum_internal[35][3] , \accum_internal[35][2] , 
        \accum_internal[35][1] , \accum_internal[35][0] }) );
  dsp_slice_35 \GEN_SLICE[35].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[35][3] , \sample_internal[35][2] , 
        \sample_internal[35][1] , \sample_internal[35][0] }), .accum_in({
        \accum_internal[35][11] , \accum_internal[35][10] , 
        \accum_internal[35][9] , \accum_internal[35][8] , 
        \accum_internal[35][7] , \accum_internal[35][6] , 
        \accum_internal[35][5] , \accum_internal[35][4] , 
        \accum_internal[35][3] , \accum_internal[35][2] , 
        \accum_internal[35][1] , \accum_internal[35][0] }), .coeff_in({
        \coeff[35][7] , \coeff[35][6] , \coeff[35][5] , \coeff[35][4] , 
        \coeff[35][3] , \coeff[35][2] , \coeff[35][1] , \coeff[35][0] }), 
        .sample_out({\sample_internal[36][3] , \sample_internal[36][2] , 
        \sample_internal[36][1] , \sample_internal[36][0] }), .accum_out({
        \accum_internal[36][11] , \accum_internal[36][10] , 
        \accum_internal[36][9] , \accum_internal[36][8] , 
        \accum_internal[36][7] , \accum_internal[36][6] , 
        \accum_internal[36][5] , \accum_internal[36][4] , 
        \accum_internal[36][3] , \accum_internal[36][2] , 
        \accum_internal[36][1] , \accum_internal[36][0] }) );
  dsp_slice_34 \GEN_SLICE[36].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[36][3] , \sample_internal[36][2] , 
        \sample_internal[36][1] , \sample_internal[36][0] }), .accum_in({
        \accum_internal[36][11] , \accum_internal[36][10] , 
        \accum_internal[36][9] , \accum_internal[36][8] , 
        \accum_internal[36][7] , \accum_internal[36][6] , 
        \accum_internal[36][5] , \accum_internal[36][4] , 
        \accum_internal[36][3] , \accum_internal[36][2] , 
        \accum_internal[36][1] , \accum_internal[36][0] }), .coeff_in({
        \coeff[36][7] , \coeff[36][6] , \coeff[36][5] , \coeff[36][4] , 
        \coeff[36][3] , \coeff[36][2] , \coeff[36][1] , \coeff[36][0] }), 
        .sample_out({\sample_internal[37][3] , \sample_internal[37][2] , 
        \sample_internal[37][1] , \sample_internal[37][0] }), .accum_out({
        \accum_internal[37][11] , \accum_internal[37][10] , 
        \accum_internal[37][9] , \accum_internal[37][8] , 
        \accum_internal[37][7] , \accum_internal[37][6] , 
        \accum_internal[37][5] , \accum_internal[37][4] , 
        \accum_internal[37][3] , \accum_internal[37][2] , 
        \accum_internal[37][1] , \accum_internal[37][0] }) );
  dsp_slice_33 \GEN_SLICE[37].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[37][3] , \sample_internal[37][2] , 
        \sample_internal[37][1] , \sample_internal[37][0] }), .accum_in({
        \accum_internal[37][11] , \accum_internal[37][10] , 
        \accum_internal[37][9] , \accum_internal[37][8] , 
        \accum_internal[37][7] , \accum_internal[37][6] , 
        \accum_internal[37][5] , \accum_internal[37][4] , 
        \accum_internal[37][3] , \accum_internal[37][2] , 
        \accum_internal[37][1] , \accum_internal[37][0] }), .coeff_in({
        \coeff[37][7] , \coeff[37][6] , \coeff[37][5] , \coeff[37][4] , 
        \coeff[37][3] , \coeff[37][2] , \coeff[37][1] , \coeff[37][0] }), 
        .sample_out({\sample_internal[38][3] , \sample_internal[38][2] , 
        \sample_internal[38][1] , \sample_internal[38][0] }), .accum_out({
        \accum_internal[38][11] , \accum_internal[38][10] , 
        \accum_internal[38][9] , \accum_internal[38][8] , 
        \accum_internal[38][7] , \accum_internal[38][6] , 
        \accum_internal[38][5] , \accum_internal[38][4] , 
        \accum_internal[38][3] , \accum_internal[38][2] , 
        \accum_internal[38][1] , \accum_internal[38][0] }) );
  dsp_slice_32 \GEN_SLICE[38].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[38][3] , \sample_internal[38][2] , 
        \sample_internal[38][1] , \sample_internal[38][0] }), .accum_in({
        \accum_internal[38][11] , \accum_internal[38][10] , 
        \accum_internal[38][9] , \accum_internal[38][8] , 
        \accum_internal[38][7] , \accum_internal[38][6] , 
        \accum_internal[38][5] , \accum_internal[38][4] , 
        \accum_internal[38][3] , \accum_internal[38][2] , 
        \accum_internal[38][1] , \accum_internal[38][0] }), .coeff_in({
        \coeff[38][7] , \coeff[38][6] , \coeff[38][5] , \coeff[38][4] , 
        \coeff[38][3] , \coeff[38][2] , \coeff[38][1] , \coeff[38][0] }), 
        .sample_out({\sample_internal[39][3] , \sample_internal[39][2] , 
        \sample_internal[39][1] , \sample_internal[39][0] }), .accum_out({
        \accum_internal[39][11] , \accum_internal[39][10] , 
        \accum_internal[39][9] , \accum_internal[39][8] , 
        \accum_internal[39][7] , \accum_internal[39][6] , 
        \accum_internal[39][5] , \accum_internal[39][4] , 
        \accum_internal[39][3] , \accum_internal[39][2] , 
        \accum_internal[39][1] , \accum_internal[39][0] }) );
  dsp_slice_31 \GEN_SLICE[39].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[39][3] , \sample_internal[39][2] , 
        \sample_internal[39][1] , \sample_internal[39][0] }), .accum_in({
        \accum_internal[39][11] , \accum_internal[39][10] , 
        \accum_internal[39][9] , \accum_internal[39][8] , 
        \accum_internal[39][7] , \accum_internal[39][6] , 
        \accum_internal[39][5] , \accum_internal[39][4] , 
        \accum_internal[39][3] , \accum_internal[39][2] , 
        \accum_internal[39][1] , \accum_internal[39][0] }), .coeff_in({
        \coeff[39][7] , \coeff[39][6] , \coeff[39][5] , \coeff[39][4] , 
        \coeff[39][3] , \coeff[39][2] , \coeff[39][1] , \coeff[39][0] }), 
        .sample_out({\sample_internal[40][3] , \sample_internal[40][2] , 
        \sample_internal[40][1] , \sample_internal[40][0] }), .accum_out({
        \accum_internal[40][11] , \accum_internal[40][10] , 
        \accum_internal[40][9] , \accum_internal[40][8] , 
        \accum_internal[40][7] , \accum_internal[40][6] , 
        \accum_internal[40][5] , \accum_internal[40][4] , 
        \accum_internal[40][3] , \accum_internal[40][2] , 
        \accum_internal[40][1] , \accum_internal[40][0] }) );
  dsp_slice_30 \GEN_SLICE[40].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[40][3] , \sample_internal[40][2] , 
        \sample_internal[40][1] , \sample_internal[40][0] }), .accum_in({
        \accum_internal[40][11] , \accum_internal[40][10] , 
        \accum_internal[40][9] , \accum_internal[40][8] , 
        \accum_internal[40][7] , \accum_internal[40][6] , 
        \accum_internal[40][5] , \accum_internal[40][4] , 
        \accum_internal[40][3] , \accum_internal[40][2] , 
        \accum_internal[40][1] , \accum_internal[40][0] }), .coeff_in({
        \coeff[40][7] , \coeff[40][6] , \coeff[40][5] , \coeff[40][4] , 
        \coeff[40][3] , \coeff[40][2] , \coeff[40][1] , \coeff[40][0] }), 
        .sample_out({\sample_internal[41][3] , \sample_internal[41][2] , 
        \sample_internal[41][1] , \sample_internal[41][0] }), .accum_out({
        \accum_internal[41][11] , \accum_internal[41][10] , 
        \accum_internal[41][9] , \accum_internal[41][8] , 
        \accum_internal[41][7] , \accum_internal[41][6] , 
        \accum_internal[41][5] , \accum_internal[41][4] , 
        \accum_internal[41][3] , \accum_internal[41][2] , 
        \accum_internal[41][1] , \accum_internal[41][0] }) );
  dsp_slice_29 \GEN_SLICE[41].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[41][3] , \sample_internal[41][2] , 
        \sample_internal[41][1] , \sample_internal[41][0] }), .accum_in({
        \accum_internal[41][11] , \accum_internal[41][10] , 
        \accum_internal[41][9] , \accum_internal[41][8] , 
        \accum_internal[41][7] , \accum_internal[41][6] , 
        \accum_internal[41][5] , \accum_internal[41][4] , 
        \accum_internal[41][3] , \accum_internal[41][2] , 
        \accum_internal[41][1] , \accum_internal[41][0] }), .coeff_in({
        \coeff[41][7] , \coeff[41][6] , \coeff[41][5] , \coeff[41][4] , 
        \coeff[41][3] , \coeff[41][2] , \coeff[41][1] , \coeff[41][0] }), 
        .sample_out({\sample_internal[42][3] , \sample_internal[42][2] , 
        \sample_internal[42][1] , \sample_internal[42][0] }), .accum_out({
        \accum_internal[42][11] , \accum_internal[42][10] , 
        \accum_internal[42][9] , \accum_internal[42][8] , 
        \accum_internal[42][7] , \accum_internal[42][6] , 
        \accum_internal[42][5] , \accum_internal[42][4] , 
        \accum_internal[42][3] , \accum_internal[42][2] , 
        \accum_internal[42][1] , \accum_internal[42][0] }) );
  dsp_slice_28 \GEN_SLICE[42].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[42][3] , \sample_internal[42][2] , 
        \sample_internal[42][1] , \sample_internal[42][0] }), .accum_in({
        \accum_internal[42][11] , \accum_internal[42][10] , 
        \accum_internal[42][9] , \accum_internal[42][8] , 
        \accum_internal[42][7] , \accum_internal[42][6] , 
        \accum_internal[42][5] , \accum_internal[42][4] , 
        \accum_internal[42][3] , \accum_internal[42][2] , 
        \accum_internal[42][1] , \accum_internal[42][0] }), .coeff_in({
        \coeff[42][7] , \coeff[42][6] , \coeff[42][5] , \coeff[42][4] , 
        \coeff[42][3] , \coeff[42][2] , \coeff[42][1] , \coeff[42][0] }), 
        .sample_out({\sample_internal[43][3] , \sample_internal[43][2] , 
        \sample_internal[43][1] , \sample_internal[43][0] }), .accum_out({
        \accum_internal[43][11] , \accum_internal[43][10] , 
        \accum_internal[43][9] , \accum_internal[43][8] , 
        \accum_internal[43][7] , \accum_internal[43][6] , 
        \accum_internal[43][5] , \accum_internal[43][4] , 
        \accum_internal[43][3] , \accum_internal[43][2] , 
        \accum_internal[43][1] , \accum_internal[43][0] }) );
  dsp_slice_27 \GEN_SLICE[43].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[43][3] , \sample_internal[43][2] , 
        \sample_internal[43][1] , \sample_internal[43][0] }), .accum_in({
        \accum_internal[43][11] , \accum_internal[43][10] , 
        \accum_internal[43][9] , \accum_internal[43][8] , 
        \accum_internal[43][7] , \accum_internal[43][6] , 
        \accum_internal[43][5] , \accum_internal[43][4] , 
        \accum_internal[43][3] , \accum_internal[43][2] , 
        \accum_internal[43][1] , \accum_internal[43][0] }), .coeff_in({
        \coeff[43][7] , \coeff[43][6] , \coeff[43][5] , \coeff[43][4] , 
        \coeff[43][3] , \coeff[43][2] , \coeff[43][1] , \coeff[43][0] }), 
        .sample_out({\sample_internal[44][3] , \sample_internal[44][2] , 
        \sample_internal[44][1] , \sample_internal[44][0] }), .accum_out({
        \accum_internal[44][11] , \accum_internal[44][10] , 
        \accum_internal[44][9] , \accum_internal[44][8] , 
        \accum_internal[44][7] , \accum_internal[44][6] , 
        \accum_internal[44][5] , \accum_internal[44][4] , 
        \accum_internal[44][3] , \accum_internal[44][2] , 
        \accum_internal[44][1] , \accum_internal[44][0] }) );
  dsp_slice_26 \GEN_SLICE[44].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[44][3] , \sample_internal[44][2] , 
        \sample_internal[44][1] , \sample_internal[44][0] }), .accum_in({
        \accum_internal[44][11] , \accum_internal[44][10] , 
        \accum_internal[44][9] , \accum_internal[44][8] , 
        \accum_internal[44][7] , \accum_internal[44][6] , 
        \accum_internal[44][5] , \accum_internal[44][4] , 
        \accum_internal[44][3] , \accum_internal[44][2] , 
        \accum_internal[44][1] , \accum_internal[44][0] }), .coeff_in({
        \coeff[44][7] , \coeff[44][6] , \coeff[44][5] , \coeff[44][4] , 
        \coeff[44][3] , \coeff[44][2] , \coeff[44][1] , \coeff[44][0] }), 
        .sample_out({\sample_internal[45][3] , \sample_internal[45][2] , 
        \sample_internal[45][1] , \sample_internal[45][0] }), .accum_out({
        \accum_internal[45][11] , \accum_internal[45][10] , 
        \accum_internal[45][9] , \accum_internal[45][8] , 
        \accum_internal[45][7] , \accum_internal[45][6] , 
        \accum_internal[45][5] , \accum_internal[45][4] , 
        \accum_internal[45][3] , \accum_internal[45][2] , 
        \accum_internal[45][1] , \accum_internal[45][0] }) );
  dsp_slice_25 \GEN_SLICE[45].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[45][3] , \sample_internal[45][2] , 
        \sample_internal[45][1] , \sample_internal[45][0] }), .accum_in({
        \accum_internal[45][11] , \accum_internal[45][10] , 
        \accum_internal[45][9] , \accum_internal[45][8] , 
        \accum_internal[45][7] , \accum_internal[45][6] , 
        \accum_internal[45][5] , \accum_internal[45][4] , 
        \accum_internal[45][3] , \accum_internal[45][2] , 
        \accum_internal[45][1] , \accum_internal[45][0] }), .coeff_in({
        \coeff[45][7] , \coeff[45][6] , \coeff[45][5] , \coeff[45][4] , 
        \coeff[45][3] , \coeff[45][2] , \coeff[45][1] , \coeff[45][0] }), 
        .sample_out({\sample_internal[46][3] , \sample_internal[46][2] , 
        \sample_internal[46][1] , \sample_internal[46][0] }), .accum_out({
        \accum_internal[46][11] , \accum_internal[46][10] , 
        \accum_internal[46][9] , \accum_internal[46][8] , 
        \accum_internal[46][7] , \accum_internal[46][6] , 
        \accum_internal[46][5] , \accum_internal[46][4] , 
        \accum_internal[46][3] , \accum_internal[46][2] , 
        \accum_internal[46][1] , \accum_internal[46][0] }) );
  dsp_slice_24 \GEN_SLICE[46].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[46][3] , \sample_internal[46][2] , 
        \sample_internal[46][1] , \sample_internal[46][0] }), .accum_in({
        \accum_internal[46][11] , \accum_internal[46][10] , 
        \accum_internal[46][9] , \accum_internal[46][8] , 
        \accum_internal[46][7] , \accum_internal[46][6] , 
        \accum_internal[46][5] , \accum_internal[46][4] , 
        \accum_internal[46][3] , \accum_internal[46][2] , 
        \accum_internal[46][1] , \accum_internal[46][0] }), .coeff_in({
        \coeff[46][7] , \coeff[46][6] , \coeff[46][5] , \coeff[46][4] , 
        \coeff[46][3] , \coeff[46][2] , \coeff[46][1] , \coeff[46][0] }), 
        .sample_out({\sample_internal[47][3] , \sample_internal[47][2] , 
        \sample_internal[47][1] , \sample_internal[47][0] }), .accum_out({
        \accum_internal[47][11] , \accum_internal[47][10] , 
        \accum_internal[47][9] , \accum_internal[47][8] , 
        \accum_internal[47][7] , \accum_internal[47][6] , 
        \accum_internal[47][5] , \accum_internal[47][4] , 
        \accum_internal[47][3] , \accum_internal[47][2] , 
        \accum_internal[47][1] , \accum_internal[47][0] }) );
  dsp_slice_23 \GEN_SLICE[47].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[47][3] , \sample_internal[47][2] , 
        \sample_internal[47][1] , \sample_internal[47][0] }), .accum_in({
        \accum_internal[47][11] , \accum_internal[47][10] , 
        \accum_internal[47][9] , \accum_internal[47][8] , 
        \accum_internal[47][7] , \accum_internal[47][6] , 
        \accum_internal[47][5] , \accum_internal[47][4] , 
        \accum_internal[47][3] , \accum_internal[47][2] , 
        \accum_internal[47][1] , \accum_internal[47][0] }), .coeff_in({
        \coeff[47][7] , \coeff[47][6] , \coeff[47][5] , \coeff[47][4] , 
        \coeff[47][3] , \coeff[47][2] , \coeff[47][1] , \coeff[47][0] }), 
        .sample_out({\sample_internal[48][3] , \sample_internal[48][2] , 
        \sample_internal[48][1] , \sample_internal[48][0] }), .accum_out({
        \accum_internal[48][11] , \accum_internal[48][10] , 
        \accum_internal[48][9] , \accum_internal[48][8] , 
        \accum_internal[48][7] , \accum_internal[48][6] , 
        \accum_internal[48][5] , \accum_internal[48][4] , 
        \accum_internal[48][3] , \accum_internal[48][2] , 
        \accum_internal[48][1] , \accum_internal[48][0] }) );
  dsp_slice_22 \GEN_SLICE[48].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[48][3] , \sample_internal[48][2] , 
        \sample_internal[48][1] , \sample_internal[48][0] }), .accum_in({
        \accum_internal[48][11] , \accum_internal[48][10] , 
        \accum_internal[48][9] , \accum_internal[48][8] , 
        \accum_internal[48][7] , \accum_internal[48][6] , 
        \accum_internal[48][5] , \accum_internal[48][4] , 
        \accum_internal[48][3] , \accum_internal[48][2] , 
        \accum_internal[48][1] , \accum_internal[48][0] }), .coeff_in({
        \coeff[48][7] , \coeff[48][6] , \coeff[48][5] , \coeff[48][4] , 
        \coeff[48][3] , \coeff[48][2] , \coeff[48][1] , \coeff[48][0] }), 
        .sample_out({\sample_internal[49][3] , \sample_internal[49][2] , 
        \sample_internal[49][1] , \sample_internal[49][0] }), .accum_out({
        \accum_internal[49][11] , \accum_internal[49][10] , 
        \accum_internal[49][9] , \accum_internal[49][8] , 
        \accum_internal[49][7] , \accum_internal[49][6] , 
        \accum_internal[49][5] , \accum_internal[49][4] , 
        \accum_internal[49][3] , \accum_internal[49][2] , 
        \accum_internal[49][1] , \accum_internal[49][0] }) );
  dsp_slice_21 \GEN_SLICE[49].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[49][3] , \sample_internal[49][2] , 
        \sample_internal[49][1] , \sample_internal[49][0] }), .accum_in({
        \accum_internal[49][11] , \accum_internal[49][10] , 
        \accum_internal[49][9] , \accum_internal[49][8] , 
        \accum_internal[49][7] , \accum_internal[49][6] , 
        \accum_internal[49][5] , \accum_internal[49][4] , 
        \accum_internal[49][3] , \accum_internal[49][2] , 
        \accum_internal[49][1] , \accum_internal[49][0] }), .coeff_in({
        \coeff[49][7] , \coeff[49][6] , \coeff[49][5] , \coeff[49][4] , 
        \coeff[49][3] , \coeff[49][2] , \coeff[49][1] , \coeff[49][0] }), 
        .sample_out({\sample_internal[50][3] , \sample_internal[50][2] , 
        \sample_internal[50][1] , \sample_internal[50][0] }), .accum_out({
        \accum_internal[50][11] , \accum_internal[50][10] , 
        \accum_internal[50][9] , \accum_internal[50][8] , 
        \accum_internal[50][7] , \accum_internal[50][6] , 
        \accum_internal[50][5] , \accum_internal[50][4] , 
        \accum_internal[50][3] , \accum_internal[50][2] , 
        \accum_internal[50][1] , \accum_internal[50][0] }) );
  dsp_slice_20 \GEN_SLICE[50].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[50][3] , \sample_internal[50][2] , 
        \sample_internal[50][1] , \sample_internal[50][0] }), .accum_in({
        \accum_internal[50][11] , \accum_internal[50][10] , 
        \accum_internal[50][9] , \accum_internal[50][8] , 
        \accum_internal[50][7] , \accum_internal[50][6] , 
        \accum_internal[50][5] , \accum_internal[50][4] , 
        \accum_internal[50][3] , \accum_internal[50][2] , 
        \accum_internal[50][1] , \accum_internal[50][0] }), .coeff_in({
        \coeff[50][7] , \coeff[50][6] , \coeff[50][5] , \coeff[50][4] , 
        \coeff[50][3] , \coeff[50][2] , \coeff[50][1] , \coeff[50][0] }), 
        .sample_out({\sample_internal[51][3] , \sample_internal[51][2] , 
        \sample_internal[51][1] , \sample_internal[51][0] }), .accum_out({
        \accum_internal[51][11] , \accum_internal[51][10] , 
        \accum_internal[51][9] , \accum_internal[51][8] , 
        \accum_internal[51][7] , \accum_internal[51][6] , 
        \accum_internal[51][5] , \accum_internal[51][4] , 
        \accum_internal[51][3] , \accum_internal[51][2] , 
        \accum_internal[51][1] , \accum_internal[51][0] }) );
  dsp_slice_19 \GEN_SLICE[51].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[51][3] , \sample_internal[51][2] , 
        \sample_internal[51][1] , \sample_internal[51][0] }), .accum_in({
        \accum_internal[51][11] , \accum_internal[51][10] , 
        \accum_internal[51][9] , \accum_internal[51][8] , 
        \accum_internal[51][7] , \accum_internal[51][6] , 
        \accum_internal[51][5] , \accum_internal[51][4] , 
        \accum_internal[51][3] , \accum_internal[51][2] , 
        \accum_internal[51][1] , \accum_internal[51][0] }), .coeff_in({
        \coeff[51][7] , \coeff[51][6] , \coeff[51][5] , \coeff[51][4] , 
        \coeff[51][3] , \coeff[51][2] , \coeff[51][1] , \coeff[51][0] }), 
        .sample_out({\sample_internal[52][3] , \sample_internal[52][2] , 
        \sample_internal[52][1] , \sample_internal[52][0] }), .accum_out({
        \accum_internal[52][11] , \accum_internal[52][10] , 
        \accum_internal[52][9] , \accum_internal[52][8] , 
        \accum_internal[52][7] , \accum_internal[52][6] , 
        \accum_internal[52][5] , \accum_internal[52][4] , 
        \accum_internal[52][3] , \accum_internal[52][2] , 
        \accum_internal[52][1] , \accum_internal[52][0] }) );
  dsp_slice_18 \GEN_SLICE[52].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[52][3] , \sample_internal[52][2] , 
        \sample_internal[52][1] , \sample_internal[52][0] }), .accum_in({
        \accum_internal[52][11] , \accum_internal[52][10] , 
        \accum_internal[52][9] , \accum_internal[52][8] , 
        \accum_internal[52][7] , \accum_internal[52][6] , 
        \accum_internal[52][5] , \accum_internal[52][4] , 
        \accum_internal[52][3] , \accum_internal[52][2] , 
        \accum_internal[52][1] , \accum_internal[52][0] }), .coeff_in({
        \coeff[52][7] , \coeff[52][6] , \coeff[52][5] , \coeff[52][4] , 
        \coeff[52][3] , \coeff[52][2] , \coeff[52][1] , \coeff[52][0] }), 
        .sample_out({\sample_internal[53][3] , \sample_internal[53][2] , 
        \sample_internal[53][1] , \sample_internal[53][0] }), .accum_out({
        \accum_internal[53][11] , \accum_internal[53][10] , 
        \accum_internal[53][9] , \accum_internal[53][8] , 
        \accum_internal[53][7] , \accum_internal[53][6] , 
        \accum_internal[53][5] , \accum_internal[53][4] , 
        \accum_internal[53][3] , \accum_internal[53][2] , 
        \accum_internal[53][1] , \accum_internal[53][0] }) );
  dsp_slice_17 \GEN_SLICE[53].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[53][3] , \sample_internal[53][2] , 
        \sample_internal[53][1] , \sample_internal[53][0] }), .accum_in({
        \accum_internal[53][11] , \accum_internal[53][10] , 
        \accum_internal[53][9] , \accum_internal[53][8] , 
        \accum_internal[53][7] , \accum_internal[53][6] , 
        \accum_internal[53][5] , \accum_internal[53][4] , 
        \accum_internal[53][3] , \accum_internal[53][2] , 
        \accum_internal[53][1] , \accum_internal[53][0] }), .coeff_in({
        \coeff[53][7] , \coeff[53][6] , \coeff[53][5] , \coeff[53][4] , 
        \coeff[53][3] , \coeff[53][2] , \coeff[53][1] , \coeff[53][0] }), 
        .sample_out({\sample_internal[54][3] , \sample_internal[54][2] , 
        \sample_internal[54][1] , \sample_internal[54][0] }), .accum_out({
        \accum_internal[54][11] , \accum_internal[54][10] , 
        \accum_internal[54][9] , \accum_internal[54][8] , 
        \accum_internal[54][7] , \accum_internal[54][6] , 
        \accum_internal[54][5] , \accum_internal[54][4] , 
        \accum_internal[54][3] , \accum_internal[54][2] , 
        \accum_internal[54][1] , \accum_internal[54][0] }) );
  dsp_slice_16 \GEN_SLICE[54].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[54][3] , \sample_internal[54][2] , 
        \sample_internal[54][1] , \sample_internal[54][0] }), .accum_in({
        \accum_internal[54][11] , \accum_internal[54][10] , 
        \accum_internal[54][9] , \accum_internal[54][8] , 
        \accum_internal[54][7] , \accum_internal[54][6] , 
        \accum_internal[54][5] , \accum_internal[54][4] , 
        \accum_internal[54][3] , \accum_internal[54][2] , 
        \accum_internal[54][1] , \accum_internal[54][0] }), .coeff_in({
        \coeff[54][7] , \coeff[54][6] , \coeff[54][5] , \coeff[54][4] , 
        \coeff[54][3] , \coeff[54][2] , \coeff[54][1] , \coeff[54][0] }), 
        .sample_out({\sample_internal[55][3] , \sample_internal[55][2] , 
        \sample_internal[55][1] , \sample_internal[55][0] }), .accum_out({
        \accum_internal[55][11] , \accum_internal[55][10] , 
        \accum_internal[55][9] , \accum_internal[55][8] , 
        \accum_internal[55][7] , \accum_internal[55][6] , 
        \accum_internal[55][5] , \accum_internal[55][4] , 
        \accum_internal[55][3] , \accum_internal[55][2] , 
        \accum_internal[55][1] , \accum_internal[55][0] }) );
  dsp_slice_15 \GEN_SLICE[55].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[55][3] , \sample_internal[55][2] , 
        \sample_internal[55][1] , \sample_internal[55][0] }), .accum_in({
        \accum_internal[55][11] , \accum_internal[55][10] , 
        \accum_internal[55][9] , \accum_internal[55][8] , 
        \accum_internal[55][7] , \accum_internal[55][6] , 
        \accum_internal[55][5] , \accum_internal[55][4] , 
        \accum_internal[55][3] , \accum_internal[55][2] , 
        \accum_internal[55][1] , \accum_internal[55][0] }), .coeff_in({
        \coeff[55][7] , \coeff[55][6] , \coeff[55][5] , \coeff[55][4] , 
        \coeff[55][3] , \coeff[55][2] , \coeff[55][1] , \coeff[55][0] }), 
        .sample_out({\sample_internal[56][3] , \sample_internal[56][2] , 
        \sample_internal[56][1] , \sample_internal[56][0] }), .accum_out({
        \accum_internal[56][11] , \accum_internal[56][10] , 
        \accum_internal[56][9] , \accum_internal[56][8] , 
        \accum_internal[56][7] , \accum_internal[56][6] , 
        \accum_internal[56][5] , \accum_internal[56][4] , 
        \accum_internal[56][3] , \accum_internal[56][2] , 
        \accum_internal[56][1] , \accum_internal[56][0] }) );
  dsp_slice_14 \GEN_SLICE[56].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[56][3] , \sample_internal[56][2] , 
        \sample_internal[56][1] , \sample_internal[56][0] }), .accum_in({
        \accum_internal[56][11] , \accum_internal[56][10] , 
        \accum_internal[56][9] , \accum_internal[56][8] , 
        \accum_internal[56][7] , \accum_internal[56][6] , 
        \accum_internal[56][5] , \accum_internal[56][4] , 
        \accum_internal[56][3] , \accum_internal[56][2] , 
        \accum_internal[56][1] , \accum_internal[56][0] }), .coeff_in({
        \coeff[56][7] , \coeff[56][6] , \coeff[56][5] , \coeff[56][4] , 
        \coeff[56][3] , \coeff[56][2] , \coeff[56][1] , \coeff[56][0] }), 
        .sample_out({\sample_internal[57][3] , \sample_internal[57][2] , 
        \sample_internal[57][1] , \sample_internal[57][0] }), .accum_out({
        \accum_internal[57][11] , \accum_internal[57][10] , 
        \accum_internal[57][9] , \accum_internal[57][8] , 
        \accum_internal[57][7] , \accum_internal[57][6] , 
        \accum_internal[57][5] , \accum_internal[57][4] , 
        \accum_internal[57][3] , \accum_internal[57][2] , 
        \accum_internal[57][1] , \accum_internal[57][0] }) );
  dsp_slice_13 \GEN_SLICE[57].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[57][3] , \sample_internal[57][2] , 
        \sample_internal[57][1] , \sample_internal[57][0] }), .accum_in({
        \accum_internal[57][11] , \accum_internal[57][10] , 
        \accum_internal[57][9] , \accum_internal[57][8] , 
        \accum_internal[57][7] , \accum_internal[57][6] , 
        \accum_internal[57][5] , \accum_internal[57][4] , 
        \accum_internal[57][3] , \accum_internal[57][2] , 
        \accum_internal[57][1] , \accum_internal[57][0] }), .coeff_in({
        \coeff[57][7] , \coeff[57][6] , \coeff[57][5] , \coeff[57][4] , 
        \coeff[57][3] , \coeff[57][2] , \coeff[57][1] , \coeff[57][0] }), 
        .sample_out({\sample_internal[58][3] , \sample_internal[58][2] , 
        \sample_internal[58][1] , \sample_internal[58][0] }), .accum_out({
        \accum_internal[58][11] , \accum_internal[58][10] , 
        \accum_internal[58][9] , \accum_internal[58][8] , 
        \accum_internal[58][7] , \accum_internal[58][6] , 
        \accum_internal[58][5] , \accum_internal[58][4] , 
        \accum_internal[58][3] , \accum_internal[58][2] , 
        \accum_internal[58][1] , \accum_internal[58][0] }) );
  dsp_slice_12 \GEN_SLICE[58].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[58][3] , \sample_internal[58][2] , 
        \sample_internal[58][1] , \sample_internal[58][0] }), .accum_in({
        \accum_internal[58][11] , \accum_internal[58][10] , 
        \accum_internal[58][9] , \accum_internal[58][8] , 
        \accum_internal[58][7] , \accum_internal[58][6] , 
        \accum_internal[58][5] , \accum_internal[58][4] , 
        \accum_internal[58][3] , \accum_internal[58][2] , 
        \accum_internal[58][1] , \accum_internal[58][0] }), .coeff_in({
        \coeff[58][7] , \coeff[58][6] , \coeff[58][5] , \coeff[58][4] , 
        \coeff[58][3] , \coeff[58][2] , \coeff[58][1] , \coeff[58][0] }), 
        .sample_out({\sample_internal[59][3] , \sample_internal[59][2] , 
        \sample_internal[59][1] , \sample_internal[59][0] }), .accum_out({
        \accum_internal[59][11] , \accum_internal[59][10] , 
        \accum_internal[59][9] , \accum_internal[59][8] , 
        \accum_internal[59][7] , \accum_internal[59][6] , 
        \accum_internal[59][5] , \accum_internal[59][4] , 
        \accum_internal[59][3] , \accum_internal[59][2] , 
        \accum_internal[59][1] , \accum_internal[59][0] }) );
  dsp_slice_11 \GEN_SLICE[59].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[59][3] , \sample_internal[59][2] , 
        \sample_internal[59][1] , \sample_internal[59][0] }), .accum_in({
        \accum_internal[59][11] , \accum_internal[59][10] , 
        \accum_internal[59][9] , \accum_internal[59][8] , 
        \accum_internal[59][7] , \accum_internal[59][6] , 
        \accum_internal[59][5] , \accum_internal[59][4] , 
        \accum_internal[59][3] , \accum_internal[59][2] , 
        \accum_internal[59][1] , \accum_internal[59][0] }), .coeff_in({
        \coeff[59][7] , \coeff[59][6] , \coeff[59][5] , \coeff[59][4] , 
        \coeff[59][3] , \coeff[59][2] , \coeff[59][1] , \coeff[59][0] }), 
        .sample_out({\sample_internal[60][3] , \sample_internal[60][2] , 
        \sample_internal[60][1] , \sample_internal[60][0] }), .accum_out({
        \accum_internal[60][11] , \accum_internal[60][10] , 
        \accum_internal[60][9] , \accum_internal[60][8] , 
        \accum_internal[60][7] , \accum_internal[60][6] , 
        \accum_internal[60][5] , \accum_internal[60][4] , 
        \accum_internal[60][3] , \accum_internal[60][2] , 
        \accum_internal[60][1] , \accum_internal[60][0] }) );
  dsp_slice_10 \GEN_SLICE[60].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[60][3] , \sample_internal[60][2] , 
        \sample_internal[60][1] , \sample_internal[60][0] }), .accum_in({
        \accum_internal[60][11] , \accum_internal[60][10] , 
        \accum_internal[60][9] , \accum_internal[60][8] , 
        \accum_internal[60][7] , \accum_internal[60][6] , 
        \accum_internal[60][5] , \accum_internal[60][4] , 
        \accum_internal[60][3] , \accum_internal[60][2] , 
        \accum_internal[60][1] , \accum_internal[60][0] }), .coeff_in({
        \coeff[60][7] , \coeff[60][6] , \coeff[60][5] , \coeff[60][4] , 
        \coeff[60][3] , \coeff[60][2] , \coeff[60][1] , \coeff[60][0] }), 
        .sample_out({\sample_internal[61][3] , \sample_internal[61][2] , 
        \sample_internal[61][1] , \sample_internal[61][0] }), .accum_out({
        \accum_internal[61][11] , \accum_internal[61][10] , 
        \accum_internal[61][9] , \accum_internal[61][8] , 
        \accum_internal[61][7] , \accum_internal[61][6] , 
        \accum_internal[61][5] , \accum_internal[61][4] , 
        \accum_internal[61][3] , \accum_internal[61][2] , 
        \accum_internal[61][1] , \accum_internal[61][0] }) );
  dsp_slice_9 \GEN_SLICE[61].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[61][3] , \sample_internal[61][2] , 
        \sample_internal[61][1] , \sample_internal[61][0] }), .accum_in({
        \accum_internal[61][11] , \accum_internal[61][10] , 
        \accum_internal[61][9] , \accum_internal[61][8] , 
        \accum_internal[61][7] , \accum_internal[61][6] , 
        \accum_internal[61][5] , \accum_internal[61][4] , 
        \accum_internal[61][3] , \accum_internal[61][2] , 
        \accum_internal[61][1] , \accum_internal[61][0] }), .coeff_in({
        \coeff[61][7] , \coeff[61][6] , \coeff[61][5] , \coeff[61][4] , 
        \coeff[61][3] , \coeff[61][2] , \coeff[61][1] , \coeff[61][0] }), 
        .sample_out({\sample_internal[62][3] , \sample_internal[62][2] , 
        \sample_internal[62][1] , \sample_internal[62][0] }), .accum_out({
        \accum_internal[62][11] , \accum_internal[62][10] , 
        \accum_internal[62][9] , \accum_internal[62][8] , 
        \accum_internal[62][7] , \accum_internal[62][6] , 
        \accum_internal[62][5] , \accum_internal[62][4] , 
        \accum_internal[62][3] , \accum_internal[62][2] , 
        \accum_internal[62][1] , \accum_internal[62][0] }) );
  dsp_slice_8 \GEN_SLICE[62].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[62][3] , \sample_internal[62][2] , 
        \sample_internal[62][1] , \sample_internal[62][0] }), .accum_in({
        \accum_internal[62][11] , \accum_internal[62][10] , 
        \accum_internal[62][9] , \accum_internal[62][8] , 
        \accum_internal[62][7] , \accum_internal[62][6] , 
        \accum_internal[62][5] , \accum_internal[62][4] , 
        \accum_internal[62][3] , \accum_internal[62][2] , 
        \accum_internal[62][1] , \accum_internal[62][0] }), .coeff_in({
        \coeff[62][7] , \coeff[62][6] , \coeff[62][5] , \coeff[62][4] , 
        \coeff[62][3] , \coeff[62][2] , \coeff[62][1] , \coeff[62][0] }), 
        .sample_out({\sample_internal[63][3] , \sample_internal[63][2] , 
        \sample_internal[63][1] , \sample_internal[63][0] }), .accum_out({
        \accum_internal[63][11] , \accum_internal[63][10] , 
        \accum_internal[63][9] , \accum_internal[63][8] , 
        \accum_internal[63][7] , \accum_internal[63][6] , 
        \accum_internal[63][5] , \accum_internal[63][4] , 
        \accum_internal[63][3] , \accum_internal[63][2] , 
        \accum_internal[63][1] , \accum_internal[63][0] }) );
  dsp_slice_7 \GEN_SLICE[63].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[63][3] , \sample_internal[63][2] , 
        \sample_internal[63][1] , \sample_internal[63][0] }), .accum_in({
        \accum_internal[63][11] , \accum_internal[63][10] , 
        \accum_internal[63][9] , \accum_internal[63][8] , 
        \accum_internal[63][7] , \accum_internal[63][6] , 
        \accum_internal[63][5] , \accum_internal[63][4] , 
        \accum_internal[63][3] , \accum_internal[63][2] , 
        \accum_internal[63][1] , \accum_internal[63][0] }), .coeff_in({
        \coeff[63][7] , \coeff[63][6] , \coeff[63][5] , \coeff[63][4] , 
        \coeff[63][3] , \coeff[63][2] , \coeff[63][1] , \coeff[63][0] }), 
        .sample_out({\sample_internal[64][3] , \sample_internal[64][2] , 
        \sample_internal[64][1] , \sample_internal[64][0] }), .accum_out({
        \accum_internal[64][11] , \accum_internal[64][10] , 
        \accum_internal[64][9] , \accum_internal[64][8] , 
        \accum_internal[64][7] , \accum_internal[64][6] , 
        \accum_internal[64][5] , \accum_internal[64][4] , 
        \accum_internal[64][3] , \accum_internal[64][2] , 
        \accum_internal[64][1] , \accum_internal[64][0] }) );
  dsp_slice_6 \GEN_SLICE[64].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[64][3] , \sample_internal[64][2] , 
        \sample_internal[64][1] , \sample_internal[64][0] }), .accum_in({
        \accum_internal[64][11] , \accum_internal[64][10] , 
        \accum_internal[64][9] , \accum_internal[64][8] , 
        \accum_internal[64][7] , \accum_internal[64][6] , 
        \accum_internal[64][5] , \accum_internal[64][4] , 
        \accum_internal[64][3] , \accum_internal[64][2] , 
        \accum_internal[64][1] , \accum_internal[64][0] }), .coeff_in({
        \coeff[64][7] , \coeff[64][6] , \coeff[64][5] , \coeff[64][4] , 
        \coeff[64][3] , \coeff[64][2] , \coeff[64][1] , \coeff[64][0] }), 
        .sample_out({\sample_internal[65][3] , \sample_internal[65][2] , 
        \sample_internal[65][1] , \sample_internal[65][0] }), .accum_out({
        \accum_internal[65][11] , \accum_internal[65][10] , 
        \accum_internal[65][9] , \accum_internal[65][8] , 
        \accum_internal[65][7] , \accum_internal[65][6] , 
        \accum_internal[65][5] , \accum_internal[65][4] , 
        \accum_internal[65][3] , \accum_internal[65][2] , 
        \accum_internal[65][1] , \accum_internal[65][0] }) );
  dsp_slice_5 \GEN_SLICE[65].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[65][3] , \sample_internal[65][2] , 
        \sample_internal[65][1] , \sample_internal[65][0] }), .accum_in({
        \accum_internal[65][11] , \accum_internal[65][10] , 
        \accum_internal[65][9] , \accum_internal[65][8] , 
        \accum_internal[65][7] , \accum_internal[65][6] , 
        \accum_internal[65][5] , \accum_internal[65][4] , 
        \accum_internal[65][3] , \accum_internal[65][2] , 
        \accum_internal[65][1] , \accum_internal[65][0] }), .coeff_in({
        \coeff[65][7] , \coeff[65][6] , \coeff[65][5] , \coeff[65][4] , 
        \coeff[65][3] , \coeff[65][2] , \coeff[65][1] , \coeff[65][0] }), 
        .sample_out({\sample_internal[66][3] , \sample_internal[66][2] , 
        \sample_internal[66][1] , \sample_internal[66][0] }), .accum_out({
        \accum_internal[66][11] , \accum_internal[66][10] , 
        \accum_internal[66][9] , \accum_internal[66][8] , 
        \accum_internal[66][7] , \accum_internal[66][6] , 
        \accum_internal[66][5] , \accum_internal[66][4] , 
        \accum_internal[66][3] , \accum_internal[66][2] , 
        \accum_internal[66][1] , \accum_internal[66][0] }) );
  dsp_slice_4 \GEN_SLICE[66].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[66][3] , \sample_internal[66][2] , 
        \sample_internal[66][1] , \sample_internal[66][0] }), .accum_in({
        \accum_internal[66][11] , \accum_internal[66][10] , 
        \accum_internal[66][9] , \accum_internal[66][8] , 
        \accum_internal[66][7] , \accum_internal[66][6] , 
        \accum_internal[66][5] , \accum_internal[66][4] , 
        \accum_internal[66][3] , \accum_internal[66][2] , 
        \accum_internal[66][1] , \accum_internal[66][0] }), .coeff_in({
        \coeff[66][7] , \coeff[66][6] , \coeff[66][5] , \coeff[66][4] , 
        \coeff[66][3] , \coeff[66][2] , \coeff[66][1] , \coeff[66][0] }), 
        .sample_out({\sample_internal[67][3] , \sample_internal[67][2] , 
        \sample_internal[67][1] , \sample_internal[67][0] }), .accum_out({
        \accum_internal[67][11] , \accum_internal[67][10] , 
        \accum_internal[67][9] , \accum_internal[67][8] , 
        \accum_internal[67][7] , \accum_internal[67][6] , 
        \accum_internal[67][5] , \accum_internal[67][4] , 
        \accum_internal[67][3] , \accum_internal[67][2] , 
        \accum_internal[67][1] , \accum_internal[67][0] }) );
  dsp_slice_3 \GEN_SLICE[67].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[67][3] , \sample_internal[67][2] , 
        \sample_internal[67][1] , \sample_internal[67][0] }), .accum_in({
        \accum_internal[67][11] , \accum_internal[67][10] , 
        \accum_internal[67][9] , \accum_internal[67][8] , 
        \accum_internal[67][7] , \accum_internal[67][6] , 
        \accum_internal[67][5] , \accum_internal[67][4] , 
        \accum_internal[67][3] , \accum_internal[67][2] , 
        \accum_internal[67][1] , \accum_internal[67][0] }), .coeff_in({
        \coeff[67][7] , \coeff[67][6] , \coeff[67][5] , \coeff[67][4] , 
        \coeff[67][3] , \coeff[67][2] , \coeff[67][1] , \coeff[67][0] }), 
        .sample_out({\sample_internal[68][3] , \sample_internal[68][2] , 
        \sample_internal[68][1] , \sample_internal[68][0] }), .accum_out({
        \accum_internal[68][11] , \accum_internal[68][10] , 
        \accum_internal[68][9] , \accum_internal[68][8] , 
        \accum_internal[68][7] , \accum_internal[68][6] , 
        \accum_internal[68][5] , \accum_internal[68][4] , 
        \accum_internal[68][3] , \accum_internal[68][2] , 
        \accum_internal[68][1] , \accum_internal[68][0] }) );
  dsp_slice_2 \GEN_SLICE[68].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[68][3] , \sample_internal[68][2] , 
        \sample_internal[68][1] , \sample_internal[68][0] }), .accum_in({
        \accum_internal[68][11] , \accum_internal[68][10] , 
        \accum_internal[68][9] , \accum_internal[68][8] , 
        \accum_internal[68][7] , \accum_internal[68][6] , 
        \accum_internal[68][5] , \accum_internal[68][4] , 
        \accum_internal[68][3] , \accum_internal[68][2] , 
        \accum_internal[68][1] , \accum_internal[68][0] }), .coeff_in({
        \coeff[68][7] , \coeff[68][6] , \coeff[68][5] , \coeff[68][4] , 
        \coeff[68][3] , \coeff[68][2] , \coeff[68][1] , \coeff[68][0] }), 
        .sample_out({\sample_internal[69][3] , \sample_internal[69][2] , 
        \sample_internal[69][1] , \sample_internal[69][0] }), .accum_out({
        \accum_internal[69][11] , \accum_internal[69][10] , 
        \accum_internal[69][9] , \accum_internal[69][8] , 
        \accum_internal[69][7] , \accum_internal[69][6] , 
        \accum_internal[69][5] , \accum_internal[69][4] , 
        \accum_internal[69][3] , \accum_internal[69][2] , 
        \accum_internal[69][1] , \accum_internal[69][0] }) );
  dsp_slice_1 \GEN_SLICE[69].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[69][3] , \sample_internal[69][2] , 
        \sample_internal[69][1] , \sample_internal[69][0] }), .accum_in({
        \accum_internal[69][11] , \accum_internal[69][10] , 
        \accum_internal[69][9] , \accum_internal[69][8] , 
        \accum_internal[69][7] , \accum_internal[69][6] , 
        \accum_internal[69][5] , \accum_internal[69][4] , 
        \accum_internal[69][3] , \accum_internal[69][2] , 
        \accum_internal[69][1] , \accum_internal[69][0] }), .coeff_in({
        \coeff[69][7] , \coeff[69][6] , \coeff[69][5] , \coeff[69][4] , 
        \coeff[69][3] , \coeff[69][2] , \coeff[69][1] , \coeff[69][0] }), 
        .sample_out({\sample_internal[70][3] , \sample_internal[70][2] , 
        \sample_internal[70][1] , \sample_internal[70][0] }), .accum_out({
        \accum_internal[70][11] , \accum_internal[70][10] , 
        \accum_internal[70][9] , \accum_internal[70][8] , 
        \accum_internal[70][7] , \accum_internal[70][6] , 
        \accum_internal[70][5] , \accum_internal[70][4] , 
        \accum_internal[70][3] , \accum_internal[70][2] , 
        \accum_internal[70][1] , \accum_internal[70][0] }) );
  dsp_slice_0 \GEN_SLICE[70].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[70][3] , \sample_internal[70][2] , 
        \sample_internal[70][1] , \sample_internal[70][0] }), .accum_in({
        \accum_internal[70][11] , \accum_internal[70][10] , 
        \accum_internal[70][9] , \accum_internal[70][8] , 
        \accum_internal[70][7] , \accum_internal[70][6] , 
        \accum_internal[70][5] , \accum_internal[70][4] , 
        \accum_internal[70][3] , \accum_internal[70][2] , 
        \accum_internal[70][1] , \accum_internal[70][0] }), .coeff_in({
        \coeff[70][7] , \coeff[70][6] , \coeff[70][5] , \coeff[70][4] , 
        \coeff[70][3] , \coeff[70][2] , \coeff[70][1] , \coeff[70][0] }), 
        .accum_out(fir_out) );
  coeff_memory u_coeff_memory ( .clk(clk), .coeff_in(coeff_in), .coeff_addr(
        coeff_addr), .coeff_write(coeff_write), .coeff_out0({\coeff[0][7] , 
        \coeff[0][6] , \coeff[0][5] , \coeff[0][4] , \coeff[0][3] , 
        \coeff[0][2] , \coeff[0][1] , \coeff[0][0] }), .coeff_out1({
        \coeff[1][7] , \coeff[1][6] , \coeff[1][5] , \coeff[1][4] , 
        \coeff[1][3] , \coeff[1][2] , \coeff[1][1] , \coeff[1][0] }), 
        .coeff_out2({\coeff[2][7] , \coeff[2][6] , \coeff[2][5] , 
        \coeff[2][4] , \coeff[2][3] , \coeff[2][2] , \coeff[2][1] , 
        \coeff[2][0] }), .coeff_out3({\coeff[3][7] , \coeff[3][6] , 
        \coeff[3][5] , \coeff[3][4] , \coeff[3][3] , \coeff[3][2] , 
        \coeff[3][1] , \coeff[3][0] }), .coeff_out4({\coeff[4][7] , 
        \coeff[4][6] , \coeff[4][5] , \coeff[4][4] , \coeff[4][3] , 
        \coeff[4][2] , \coeff[4][1] , \coeff[4][0] }), .coeff_out5({
        \coeff[5][7] , \coeff[5][6] , \coeff[5][5] , \coeff[5][4] , 
        \coeff[5][3] , \coeff[5][2] , \coeff[5][1] , \coeff[5][0] }), 
        .coeff_out6({\coeff[6][7] , \coeff[6][6] , \coeff[6][5] , 
        \coeff[6][4] , \coeff[6][3] , \coeff[6][2] , \coeff[6][1] , 
        \coeff[6][0] }), .coeff_out7({\coeff[7][7] , \coeff[7][6] , 
        \coeff[7][5] , \coeff[7][4] , \coeff[7][3] , \coeff[7][2] , 
        \coeff[7][1] , \coeff[7][0] }), .coeff_out8({\coeff[8][7] , 
        \coeff[8][6] , \coeff[8][5] , \coeff[8][4] , \coeff[8][3] , 
        \coeff[8][2] , \coeff[8][1] , \coeff[8][0] }), .coeff_out9({
        \coeff[9][7] , \coeff[9][6] , \coeff[9][5] , \coeff[9][4] , 
        \coeff[9][3] , \coeff[9][2] , \coeff[9][1] , \coeff[9][0] }), 
        .coeff_out10({\coeff[10][7] , \coeff[10][6] , \coeff[10][5] , 
        \coeff[10][4] , \coeff[10][3] , \coeff[10][2] , \coeff[10][1] , 
        \coeff[10][0] }), .coeff_out11({\coeff[11][7] , \coeff[11][6] , 
        \coeff[11][5] , \coeff[11][4] , \coeff[11][3] , \coeff[11][2] , 
        \coeff[11][1] , \coeff[11][0] }), .coeff_out12({\coeff[12][7] , 
        \coeff[12][6] , \coeff[12][5] , \coeff[12][4] , \coeff[12][3] , 
        \coeff[12][2] , \coeff[12][1] , \coeff[12][0] }), .coeff_out13({
        \coeff[13][7] , \coeff[13][6] , \coeff[13][5] , \coeff[13][4] , 
        \coeff[13][3] , \coeff[13][2] , \coeff[13][1] , \coeff[13][0] }), 
        .coeff_out14({\coeff[14][7] , \coeff[14][6] , \coeff[14][5] , 
        \coeff[14][4] , \coeff[14][3] , \coeff[14][2] , \coeff[14][1] , 
        \coeff[14][0] }), .coeff_out15({\coeff[15][7] , \coeff[15][6] , 
        \coeff[15][5] , \coeff[15][4] , \coeff[15][3] , \coeff[15][2] , 
        \coeff[15][1] , \coeff[15][0] }), .coeff_out16({\coeff[16][7] , 
        \coeff[16][6] , \coeff[16][5] , \coeff[16][4] , \coeff[16][3] , 
        \coeff[16][2] , \coeff[16][1] , \coeff[16][0] }), .coeff_out17({
        \coeff[17][7] , \coeff[17][6] , \coeff[17][5] , \coeff[17][4] , 
        \coeff[17][3] , \coeff[17][2] , \coeff[17][1] , \coeff[17][0] }), 
        .coeff_out18({\coeff[18][7] , \coeff[18][6] , \coeff[18][5] , 
        \coeff[18][4] , \coeff[18][3] , \coeff[18][2] , \coeff[18][1] , 
        \coeff[18][0] }), .coeff_out19({\coeff[19][7] , \coeff[19][6] , 
        \coeff[19][5] , \coeff[19][4] , \coeff[19][3] , \coeff[19][2] , 
        \coeff[19][1] , \coeff[19][0] }), .coeff_out20({\coeff[20][7] , 
        \coeff[20][6] , \coeff[20][5] , \coeff[20][4] , \coeff[20][3] , 
        \coeff[20][2] , \coeff[20][1] , \coeff[20][0] }), .coeff_out21({
        \coeff[21][7] , \coeff[21][6] , \coeff[21][5] , \coeff[21][4] , 
        \coeff[21][3] , \coeff[21][2] , \coeff[21][1] , \coeff[21][0] }), 
        .coeff_out22({\coeff[22][7] , \coeff[22][6] , \coeff[22][5] , 
        \coeff[22][4] , \coeff[22][3] , \coeff[22][2] , \coeff[22][1] , 
        \coeff[22][0] }), .coeff_out23({\coeff[23][7] , \coeff[23][6] , 
        \coeff[23][5] , \coeff[23][4] , \coeff[23][3] , \coeff[23][2] , 
        \coeff[23][1] , \coeff[23][0] }), .coeff_out24({\coeff[24][7] , 
        \coeff[24][6] , \coeff[24][5] , \coeff[24][4] , \coeff[24][3] , 
        \coeff[24][2] , \coeff[24][1] , \coeff[24][0] }), .coeff_out25({
        \coeff[25][7] , \coeff[25][6] , \coeff[25][5] , \coeff[25][4] , 
        \coeff[25][3] , \coeff[25][2] , \coeff[25][1] , \coeff[25][0] }), 
        .coeff_out26({\coeff[26][7] , \coeff[26][6] , \coeff[26][5] , 
        \coeff[26][4] , \coeff[26][3] , \coeff[26][2] , \coeff[26][1] , 
        \coeff[26][0] }), .coeff_out27({\coeff[27][7] , \coeff[27][6] , 
        \coeff[27][5] , \coeff[27][4] , \coeff[27][3] , \coeff[27][2] , 
        \coeff[27][1] , \coeff[27][0] }), .coeff_out28({\coeff[28][7] , 
        \coeff[28][6] , \coeff[28][5] , \coeff[28][4] , \coeff[28][3] , 
        \coeff[28][2] , \coeff[28][1] , \coeff[28][0] }), .coeff_out29({
        \coeff[29][7] , \coeff[29][6] , \coeff[29][5] , \coeff[29][4] , 
        \coeff[29][3] , \coeff[29][2] , \coeff[29][1] , \coeff[29][0] }), 
        .coeff_out30({\coeff[30][7] , \coeff[30][6] , \coeff[30][5] , 
        \coeff[30][4] , \coeff[30][3] , \coeff[30][2] , \coeff[30][1] , 
        \coeff[30][0] }), .coeff_out31({\coeff[31][7] , \coeff[31][6] , 
        \coeff[31][5] , \coeff[31][4] , \coeff[31][3] , \coeff[31][2] , 
        \coeff[31][1] , \coeff[31][0] }), .coeff_out32({\coeff[32][7] , 
        \coeff[32][6] , \coeff[32][5] , \coeff[32][4] , \coeff[32][3] , 
        \coeff[32][2] , \coeff[32][1] , \coeff[32][0] }), .coeff_out33({
        \coeff[33][7] , \coeff[33][6] , \coeff[33][5] , \coeff[33][4] , 
        \coeff[33][3] , \coeff[33][2] , \coeff[33][1] , \coeff[33][0] }), 
        .coeff_out34({\coeff[34][7] , \coeff[34][6] , \coeff[34][5] , 
        \coeff[34][4] , \coeff[34][3] , \coeff[34][2] , \coeff[34][1] , 
        \coeff[34][0] }), .coeff_out35({\coeff[35][7] , \coeff[35][6] , 
        \coeff[35][5] , \coeff[35][4] , \coeff[35][3] , \coeff[35][2] , 
        \coeff[35][1] , \coeff[35][0] }), .coeff_out36({\coeff[36][7] , 
        \coeff[36][6] , \coeff[36][5] , \coeff[36][4] , \coeff[36][3] , 
        \coeff[36][2] , \coeff[36][1] , \coeff[36][0] }), .coeff_out37({
        \coeff[37][7] , \coeff[37][6] , \coeff[37][5] , \coeff[37][4] , 
        \coeff[37][3] , \coeff[37][2] , \coeff[37][1] , \coeff[37][0] }), 
        .coeff_out38({\coeff[38][7] , \coeff[38][6] , \coeff[38][5] , 
        \coeff[38][4] , \coeff[38][3] , \coeff[38][2] , \coeff[38][1] , 
        \coeff[38][0] }), .coeff_out39({\coeff[39][7] , \coeff[39][6] , 
        \coeff[39][5] , \coeff[39][4] , \coeff[39][3] , \coeff[39][2] , 
        \coeff[39][1] , \coeff[39][0] }), .coeff_out40({\coeff[40][7] , 
        \coeff[40][6] , \coeff[40][5] , \coeff[40][4] , \coeff[40][3] , 
        \coeff[40][2] , \coeff[40][1] , \coeff[40][0] }), .coeff_out41({
        \coeff[41][7] , \coeff[41][6] , \coeff[41][5] , \coeff[41][4] , 
        \coeff[41][3] , \coeff[41][2] , \coeff[41][1] , \coeff[41][0] }), 
        .coeff_out42({\coeff[42][7] , \coeff[42][6] , \coeff[42][5] , 
        \coeff[42][4] , \coeff[42][3] , \coeff[42][2] , \coeff[42][1] , 
        \coeff[42][0] }), .coeff_out43({\coeff[43][7] , \coeff[43][6] , 
        \coeff[43][5] , \coeff[43][4] , \coeff[43][3] , \coeff[43][2] , 
        \coeff[43][1] , \coeff[43][0] }), .coeff_out44({\coeff[44][7] , 
        \coeff[44][6] , \coeff[44][5] , \coeff[44][4] , \coeff[44][3] , 
        \coeff[44][2] , \coeff[44][1] , \coeff[44][0] }), .coeff_out45({
        \coeff[45][7] , \coeff[45][6] , \coeff[45][5] , \coeff[45][4] , 
        \coeff[45][3] , \coeff[45][2] , \coeff[45][1] , \coeff[45][0] }), 
        .coeff_out46({\coeff[46][7] , \coeff[46][6] , \coeff[46][5] , 
        \coeff[46][4] , \coeff[46][3] , \coeff[46][2] , \coeff[46][1] , 
        \coeff[46][0] }), .coeff_out47({\coeff[47][7] , \coeff[47][6] , 
        \coeff[47][5] , \coeff[47][4] , \coeff[47][3] , \coeff[47][2] , 
        \coeff[47][1] , \coeff[47][0] }), .coeff_out48({\coeff[48][7] , 
        \coeff[48][6] , \coeff[48][5] , \coeff[48][4] , \coeff[48][3] , 
        \coeff[48][2] , \coeff[48][1] , \coeff[48][0] }), .coeff_out49({
        \coeff[49][7] , \coeff[49][6] , \coeff[49][5] , \coeff[49][4] , 
        \coeff[49][3] , \coeff[49][2] , \coeff[49][1] , \coeff[49][0] }), 
        .coeff_out50({\coeff[50][7] , \coeff[50][6] , \coeff[50][5] , 
        \coeff[50][4] , \coeff[50][3] , \coeff[50][2] , \coeff[50][1] , 
        \coeff[50][0] }), .coeff_out51({\coeff[51][7] , \coeff[51][6] , 
        \coeff[51][5] , \coeff[51][4] , \coeff[51][3] , \coeff[51][2] , 
        \coeff[51][1] , \coeff[51][0] }), .coeff_out52({\coeff[52][7] , 
        \coeff[52][6] , \coeff[52][5] , \coeff[52][4] , \coeff[52][3] , 
        \coeff[52][2] , \coeff[52][1] , \coeff[52][0] }), .coeff_out53({
        \coeff[53][7] , \coeff[53][6] , \coeff[53][5] , \coeff[53][4] , 
        \coeff[53][3] , \coeff[53][2] , \coeff[53][1] , \coeff[53][0] }), 
        .coeff_out54({\coeff[54][7] , \coeff[54][6] , \coeff[54][5] , 
        \coeff[54][4] , \coeff[54][3] , \coeff[54][2] , \coeff[54][1] , 
        \coeff[54][0] }), .coeff_out55({\coeff[55][7] , \coeff[55][6] , 
        \coeff[55][5] , \coeff[55][4] , \coeff[55][3] , \coeff[55][2] , 
        \coeff[55][1] , \coeff[55][0] }), .coeff_out56({\coeff[56][7] , 
        \coeff[56][6] , \coeff[56][5] , \coeff[56][4] , \coeff[56][3] , 
        \coeff[56][2] , \coeff[56][1] , \coeff[56][0] }), .coeff_out57({
        \coeff[57][7] , \coeff[57][6] , \coeff[57][5] , \coeff[57][4] , 
        \coeff[57][3] , \coeff[57][2] , \coeff[57][1] , \coeff[57][0] }), 
        .coeff_out58({\coeff[58][7] , \coeff[58][6] , \coeff[58][5] , 
        \coeff[58][4] , \coeff[58][3] , \coeff[58][2] , \coeff[58][1] , 
        \coeff[58][0] }), .coeff_out59({\coeff[59][7] , \coeff[59][6] , 
        \coeff[59][5] , \coeff[59][4] , \coeff[59][3] , \coeff[59][2] , 
        \coeff[59][1] , \coeff[59][0] }), .coeff_out60({\coeff[60][7] , 
        \coeff[60][6] , \coeff[60][5] , \coeff[60][4] , \coeff[60][3] , 
        \coeff[60][2] , \coeff[60][1] , \coeff[60][0] }), .coeff_out61({
        \coeff[61][7] , \coeff[61][6] , \coeff[61][5] , \coeff[61][4] , 
        \coeff[61][3] , \coeff[61][2] , \coeff[61][1] , \coeff[61][0] }), 
        .coeff_out62({\coeff[62][7] , \coeff[62][6] , \coeff[62][5] , 
        \coeff[62][4] , \coeff[62][3] , \coeff[62][2] , \coeff[62][1] , 
        \coeff[62][0] }), .coeff_out63({\coeff[63][7] , \coeff[63][6] , 
        \coeff[63][5] , \coeff[63][4] , \coeff[63][3] , \coeff[63][2] , 
        \coeff[63][1] , \coeff[63][0] }), .coeff_out64({\coeff[64][7] , 
        \coeff[64][6] , \coeff[64][5] , \coeff[64][4] , \coeff[64][3] , 
        \coeff[64][2] , \coeff[64][1] , \coeff[64][0] }), .coeff_out65({
        \coeff[65][7] , \coeff[65][6] , \coeff[65][5] , \coeff[65][4] , 
        \coeff[65][3] , \coeff[65][2] , \coeff[65][1] , \coeff[65][0] }), 
        .coeff_out66({\coeff[66][7] , \coeff[66][6] , \coeff[66][5] , 
        \coeff[66][4] , \coeff[66][3] , \coeff[66][2] , \coeff[66][1] , 
        \coeff[66][0] }), .coeff_out67({\coeff[67][7] , \coeff[67][6] , 
        \coeff[67][5] , \coeff[67][4] , \coeff[67][3] , \coeff[67][2] , 
        \coeff[67][1] , \coeff[67][0] }), .coeff_out68({\coeff[68][7] , 
        \coeff[68][6] , \coeff[68][5] , \coeff[68][4] , \coeff[68][3] , 
        \coeff[68][2] , \coeff[68][1] , \coeff[68][0] }), .coeff_out69({
        \coeff[69][7] , \coeff[69][6] , \coeff[69][5] , \coeff[69][4] , 
        \coeff[69][3] , \coeff[69][2] , \coeff[69][1] , \coeff[69][0] }), 
        .coeff_out70({\coeff[70][7] , \coeff[70][6] , \coeff[70][5] , 
        \coeff[70][4] , \coeff[70][3] , \coeff[70][2] , \coeff[70][1] , 
        \coeff[70][0] }) );
endmodule


module TopModule_syn ( clk, rst_n, sample_rate, data_in, coeff_write, coeff_in, 
        coeff_addr, new_symbol, data_out, data_out_valid );
  input [3:0] sample_rate;
  input [3:0] data_in;
  input [7:0] coeff_in;
  input [6:0] coeff_addr;
  output [11:0] data_out;
  input clk, rst_n, coeff_write, new_symbol;
  output data_out_valid;
  wire   n84, rst_n_sync_wire, N2, N3, N4, N5, N6, N7, N8, N9, n1, n3, n4, n5,
         n6, n7, n8, n9, n10, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36,
         n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50,
         n51, n52, n53, n54, n55, n56, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83;
  wire   [3:0] upsampler_out;
  wire   [7:0] counter;

  reset_synchronization rst ( .clk(clk), .rst_n(n35), .rst_n_sync(
        rst_n_sync_wire) );
  upsampler u_upsampler ( .clk(clk), .rst_n(n44), .new_symbol(new_symbol), 
        .input_data({n23, n21, n19, n17}), .sample_rate(sample_rate), 
        .output_data(upsampler_out) );
  fir_filter u_fir_filter ( .clk(clk), .sample_in(upsampler_out), 
        .coeff_write(n39), .coeff_in(coeff_in), .coeff_addr({n15, n33, n31, 
        n29, n27, n37, n25}), .fir_out(data_out) );
  DFFR_E \counter_reg[0]  ( .D(n10), .CLK(clk), .RN(n43), .Q(counter[0]), 
        .QBAR(n68) );
  DFFR_E \counter_reg[3]  ( .D(n7), .CLK(clk), .RN(n43), .Q(counter[3]), 
        .QBAR(n67) );
  DFFR_E \counter_reg[1]  ( .D(n9), .CLK(clk), .RN(n43), .Q(counter[1]), 
        .QBAR(n64) );
  DFFR_E \counter_reg[6]  ( .D(n4), .CLK(clk), .RN(n43), .Q(counter[6]), 
        .QBAR(n62) );
  DFFR_E \counter_reg[5]  ( .D(n5), .CLK(clk), .RN(n43), .Q(counter[5]), 
        .QBAR(n72) );
  DFFR_E \counter_reg[2]  ( .D(n8), .CLK(clk), .RN(n43), .Q(counter[2]), 
        .QBAR(n59) );
  DFFR_E data_out_valid_reg ( .D(n13), .CLK(clk), .RN(n43), .Q(n84) );
  DFFR_E \counter_reg[4]  ( .D(n6), .CLK(clk), .RN(n43), .Q(counter[4]), 
        .QBAR(n54) );
  DFFR_E \counter_reg[7]  ( .D(n3), .CLK(clk), .RN(n43), .QBAR(n50) );
  INVERT_I U15 ( .A(coeff_addr[1]), .Z(n36) );
  INVERT_K U16 ( .A(n26), .Z(n27) );
  INVERT_H U17 ( .A(coeff_addr[6]), .Z(n14) );
  INVERT_H U18 ( .A(data_in[0]), .Z(n16) );
  INVERT_H U19 ( .A(data_in[1]), .Z(n18) );
  INVERT_H U20 ( .A(data_in[2]), .Z(n20) );
  INVERT_H U21 ( .A(data_in[3]), .Z(n22) );
  INVERT_I U22 ( .A(n74), .Z(n73) );
  INVERT_H U23 ( .A(rst_n_sync_wire), .Z(n74) );
  INVERT_H U24 ( .A(rst_n), .Z(n34) );
  OA21_F U25 ( .A1(n55), .A2(n82), .B(n53), .Z(n13) );
  INVERT_I U26 ( .A(n14), .Z(n15) );
  INVERT_H U27 ( .A(n16), .Z(n17) );
  INVERT_H U28 ( .A(n18), .Z(n19) );
  INVERT_H U29 ( .A(n20), .Z(n21) );
  INVERT_H U30 ( .A(n22), .Z(n23) );
  INVERT_H U31 ( .A(coeff_addr[0]), .Z(n24) );
  INVERT_K U32 ( .A(n24), .Z(n25) );
  INVERT_H U33 ( .A(coeff_addr[2]), .Z(n26) );
  INVERT_H U34 ( .A(coeff_addr[3]), .Z(n28) );
  INVERT_K U35 ( .A(n28), .Z(n29) );
  INVERT_H U36 ( .A(coeff_addr[4]), .Z(n30) );
  INVERT_J U37 ( .A(n30), .Z(n31) );
  INVERT_H U38 ( .A(coeff_addr[5]), .Z(n32) );
  INVERT_J U39 ( .A(n32), .Z(n33) );
  INVERT_I U40 ( .A(n34), .Z(n35) );
  INVERT_M U41 ( .A(n36), .Z(n37) );
  INVERT_H U42 ( .A(coeff_write), .Z(n38) );
  INVERT_L U43 ( .A(n38), .Z(n39) );
  INVERT_E U44 ( .A(n78), .Z(n40) );
  INVERT_H U45 ( .A(n40), .Z(n41) );
  INVERT_H U46 ( .A(n69), .Z(N2) );
  INVERT_J U47 ( .A(n84), .Z(n56) );
  INVERT_M U48 ( .A(n73), .Z(n42) );
  INVERT_N U49 ( .A(n42), .Z(n43) );
  INVERT_O U50 ( .A(n42), .Z(n44) );
  BUFFER_F U51 ( .A(n47), .Z(n45) );
  AO22_F U52 ( .A1(N7), .A2(n66), .B1(n58), .B2(counter[5]), .Z(n5) );
  INVERT_H U53 ( .A(n66), .Z(n58) );
  NAND2_D U54 ( .A(n46), .B(n45), .Z(n8) );
  NAND2_D U55 ( .A(n83), .B(n60), .Z(n46) );
  NAND2_D U56 ( .A(N4), .B(n66), .Z(n47) );
  XNOR2_B U57 ( .A(n75), .B(counter[2]), .Z(N4) );
  INVERT_H U58 ( .A(n1), .Z(n48) );
  INVERT_I U59 ( .A(n48), .Z(n49) );
  NOR4_B U60 ( .A(n19), .B(n17), .C(n23), .D(n21), .Z(n1) );
  XNOR2_B U61 ( .A(n41), .B(counter[5]), .Z(N7) );
  INVERT_E U62 ( .A(n76), .Z(n51) );
  INVERT_H U63 ( .A(n51), .Z(n52) );
  INVERT_I U64 ( .A(n50), .Z(n53) );
  INVERT_H U65 ( .A(n54), .Z(n55) );
  INVERT_O U66 ( .A(n56), .Z(data_out_valid) );
  INVERT_N U67 ( .A(n49), .Z(n66) );
  AO22_F U68 ( .A1(N3), .A2(n66), .B1(n83), .B2(n65), .Z(n9) );
  INVERT_H U69 ( .A(n59), .Z(n60) );
  AO22_F U70 ( .A1(N9), .A2(n66), .B1(n83), .B2(n53), .Z(n3) );
  XOR2_B U71 ( .A(n53), .B(n80), .Z(N9) );
  BUFFER_I U72 ( .A(n71), .Z(n70) );
  AO22_F U73 ( .A1(N2), .A2(n66), .B1(n83), .B2(n69), .Z(n10) );
  XNOR2_C U74 ( .A(n65), .B(N2), .Z(N3) );
  AO22_F U75 ( .A1(N6), .A2(n66), .B1(n83), .B2(n55), .Z(n6) );
  XOR2_B U76 ( .A(counter[4]), .B(n77), .Z(N6) );
  AO22_F U77 ( .A1(N5), .A2(n66), .B1(n83), .B2(counter[3]), .Z(n7) );
  INVERT_E U78 ( .A(n72), .Z(n61) );
  INVERT_H U79 ( .A(n62), .Z(n63) );
  XOR2_B U80 ( .A(n63), .B(n70), .Z(N8) );
  AO22_F U81 ( .A1(N8), .A2(n66), .B1(n83), .B2(n63), .Z(n4) );
  AND2_H U82 ( .A(n70), .B(counter[6]), .Z(n80) );
  OR2_H U83 ( .A(counter[6]), .B(n61), .Z(n82) );
  INVERT_H U84 ( .A(n64), .Z(n65) );
  NOR2_C U85 ( .A(n52), .B(n67), .Z(n77) );
  INVERT_I U86 ( .A(n68), .Z(n69) );
  NAND2_D U87 ( .A(counter[1]), .B(n69), .Z(n75) );
  XNOR2_B U88 ( .A(n81), .B(n67), .Z(N5) );
  INVERT_F U89 ( .A(n52), .Z(n81) );
  NAND3_C U90 ( .A(counter[1]), .B(counter[0]), .C(counter[2]), .Z(n76) );
  BUFFER_H U91 ( .A(n79), .Z(n71) );
  NOR2_C U92 ( .A(n72), .B(n41), .Z(n79) );
  NAND3_C U93 ( .A(counter[3]), .B(n81), .C(counter[4]), .Z(n78) );
  INVERT_L U94 ( .A(n66), .Z(n83) );
endmodule

