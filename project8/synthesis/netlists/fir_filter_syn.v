/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : O-2018.06-SP1
// Date      : Thu Apr 24 19:57:18 2025
/////////////////////////////////////////////////////////////


module dsp_slice_70_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_70_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_70_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_70_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  BUFFER_H U85 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U86 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U87 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U88 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U89 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_70 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_70_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_70_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_69_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_69_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_69_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_69_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  NOR2_C U95 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  BUFFER_H U96 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U97 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U98 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U99 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U100 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_69 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_69_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_69_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_68_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_68_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_68_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_68_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_68 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_68_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_68_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_67_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_67_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_67_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_67_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_67 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_67_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_67_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_66_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_66_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_66_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_66_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_66 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_66_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_66_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_65_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_65_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_65_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_65_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_65 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_65_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_65_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_64_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_64_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_64_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_64_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_64 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_64_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_64_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_63_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_63_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_63_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_63_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_63 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_63_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_63_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_62_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_62_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_62_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_62_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_62 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_62_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_62_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_61_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_61_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_61_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_61_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_61 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_61_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_61_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_60_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_60_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_60_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_60_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_60 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_60_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_60_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_59_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_59_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_59_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_59_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_59 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_59_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_59_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_58_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_58_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_58_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_58_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_58 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_58_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_58_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_57_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_57_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_57_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_57_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_57 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_57_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_57_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_56_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_56_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_56_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_56_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_56 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_56_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_56_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_55_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_55_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_55_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_55_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_55 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_55_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_55_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_54_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_54_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_54_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_54_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_54 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_54_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_54_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_53_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_53_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_53_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_53_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_53 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_53_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_53_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_52_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_52_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_52_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_52_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_52 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_52_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_52_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_51_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_51_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_51_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_51_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_51 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_51_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_51_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_50_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_50_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_50_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_50_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_50 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_50_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_50_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_49_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_49_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_49_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_49_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_49 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_49_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_49_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_48_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_48_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_48_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_48_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_48 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_48_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_48_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_47_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_47_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_47_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_47_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_47 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_47_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_47_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_46_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_46_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_46_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_46_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_46 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_46_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_46_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_45_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_45_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_45_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_45_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_45 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_45_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_45_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_44_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_44_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_44_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_44_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_44 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_44_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_44_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_43_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_43_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_43_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_43_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_43 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_43_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_43_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_42_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_42_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_42_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_42_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_42 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_42_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_42_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_41_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_41_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_41_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_41_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_41 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_41_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_41_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_40_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_40_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_40_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_40_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_40 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_40_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_40_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_39_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_39_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_39_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_39_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_39 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_39_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_39_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_38_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_38_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_38_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_38_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_38 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_38_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_38_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_37_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_37_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_37_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_37_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_37 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_37_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_37_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_36_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_36_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_36_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_36_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_36 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_36_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_36_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_35_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_35_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_35_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_35_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_35 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_35_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_35_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_34_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_34_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_34_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_34_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_34 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_34_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_34_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_33_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_33_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_33_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_33_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_33 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_33_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_33_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_32_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_32_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_32_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_32_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_32 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_32_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_32_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_31_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_31_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_31_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_31_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_31 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_31_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_31_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_30_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_30_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_30_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_30_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_30 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_30_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_30_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_29_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_29_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_29_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_29_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_29 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_29_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_29_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_28_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_28_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_28_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_28_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_28 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_28_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_28_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_27_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_27_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_27_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_27_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_27 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_27_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_27_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_26_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_26_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_26_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_26_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_26 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_26_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_26_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_25_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_25_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_25_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_25_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_25 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_25_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_25_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_24_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_24_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_24_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_24_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_24 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_24_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_24_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_23_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_23_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_23_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_23_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_23 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_23_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_23_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_22_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_22_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_22_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_22_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_22 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_22_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_22_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_21_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_21_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_21_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_21_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_21 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_21_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_21_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_20_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_20_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_20_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_20_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_20 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_20_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_20_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_19_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_19_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_19_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_19_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_19 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_19_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_19_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_18_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_18_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_18_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_18_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_18 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_18_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_18_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_17_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_17_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_17_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_17_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_17 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_17_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_17_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_16_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_16_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_16_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_16_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_16 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_16_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_16_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_15_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_15_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_15_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_15_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_15 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_15_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_15_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_14_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_14_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_14_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_14_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_14 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_14_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_14_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_13_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_13_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_13_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_13_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_13 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_13_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_13_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_12_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_12_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_12_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_12_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_12 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_12_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_12_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_11_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_11_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_11_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_11_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_11 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_11_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_11_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_10_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_10_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_10_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_10_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_10 ( clk, sample_in, accum_in, coeff_in, sample_out, 
        accum_out );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_10_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_10_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(
        coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, 
        N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_9_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_9_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_9_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_9_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_9 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_9_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_9_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_8_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_8_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_8_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_8_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_8 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_8_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_8_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_7_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_7_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_7_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_7_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_7 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_7_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_7_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_6_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_6_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_6_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_6_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_6 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_6_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_6_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_5_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_5_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_5_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_5_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_5 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_5_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_5_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_4_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_4_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_4_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_4_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_4 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_4_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_4_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_3_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_3_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_3_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_3_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_3 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_3_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_3_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_2_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_2_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  OAI21_D U28 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NOR2_F U29 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NAND2BAL_E U30 ( .A(n20), .B(n39), .Z(n40) );
  NAND2_F U31 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U32 ( .A(n1), .Z(n8) );
  INVERT_E U33 ( .A(n24), .Z(n9) );
  INVERT_H U34 ( .A(n9), .Z(n10) );
  INVERT_D U35 ( .A(n38), .Z(n11) );
  OA21_F U36 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U37 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U38 ( .A(n27), .Z(n15) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_2_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_F S3_2_6 ( .A(\ab[2][6] ), .B(\CARRYB[1][6] ), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  dsp_slice_2_DW01_add_1 FS_1 ( .A({n31, n19, n25, \A1[6] , n6, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n8, n26, \A2[6] , 
        n24, n28, n23, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2])
         );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n30), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n10), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n29), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n13), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n27), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(n32), .B(n42), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n12), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n23) );
  INVERT_E U3 ( .A(n14), .Z(n13) );
  INVERT_H U4 ( .A(ZA), .Z(n3) );
  INVERT_K U5 ( .A(n3), .Z(n4) );
  AND2_H U6 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A2[2] ) );
  NOR2_F U7 ( .A(A[0]), .B(n42), .Z(\ab[0][7] ) );
  INVERT_F U8 ( .A(A[1]), .Z(n22) );
  NOR2_C U9 ( .A(n33), .B(n39), .Z(\ab[2][4] ) );
  INVERT_I U10 ( .A(\A1[5] ), .Z(n5) );
  INVERT_I U11 ( .A(n5), .Z(n6) );
  INVERT_H U12 ( .A(\A2[8] ), .Z(n7) );
  INVERT_H U13 ( .A(n7), .Z(n8) );
  AND2_I U14 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U15 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  AND2_H U16 ( .A(\ab[1][1] ), .B(\ab[0][2] ), .Z(\CARRYB[1][1] ) );
  INVERT_I U17 ( .A(n18), .Z(n19) );
  INVERT_D U18 ( .A(\CARRYB[1][2] ), .Z(n9) );
  INVERT_E U19 ( .A(n9), .Z(n10) );
  AND2_H U20 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_D U21 ( .A(\CARRYB[1][4] ), .Z(n11) );
  INVERT_E U22 ( .A(n11), .Z(n12) );
  AND2_H U23 ( .A(\ab[1][4] ), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_I U24 ( .A(n34), .Z(n20) );
  BUFFER_J U25 ( .A(A[0]), .Z(n34) );
  BUFFER_H U26 ( .A(\CARRYB[1][3] ), .Z(n27) );
  AND2_H U27 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_C U28 ( .A(n38), .B(n33), .Z(\ab[2][3] ) );
  AND2_H U29 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U30 ( .A(\CARRYB[1][5] ), .Z(n14) );
  INVERT_I U31 ( .A(n22), .Z(n15) );
  NOR2_D U32 ( .A(n33), .B(n41), .Z(\ab[2][6] ) );
  INVERT_L U33 ( .A(A[2]), .Z(n33) );
  AND2_I U34 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_E U35 ( .A(n41), .B(n21), .Z(\ab[1][6] ) );
  INVERT_I U36 ( .A(n20), .Z(n16) );
  INVERT_M U37 ( .A(n16), .Z(n17) );
  INVERT_H U38 ( .A(\A1[8] ), .Z(n18) );
  NOR2_E U39 ( .A(n38), .B(n21), .Z(\ab[1][3] ) );
  NOR2_E U40 ( .A(n39), .B(n21), .Z(\ab[1][4] ) );
  NOR2_E U41 ( .A(n36), .B(n21), .Z(\ab[1][1] ) );
  NOR2_E U42 ( .A(n40), .B(n21), .Z(\ab[1][5] ) );
  INVERT_M U43 ( .A(n15), .Z(n21) );
  NOR2_E U44 ( .A(n39), .B(n20), .Z(\ab[0][4] ) );
  INVERT_I U45 ( .A(B[4]), .Z(n39) );
  NOR2_E U46 ( .A(n41), .B(n17), .Z(\ab[0][6] ) );
  INVERT_I U47 ( .A(B[6]), .Z(n41) );
  NOR2_E U48 ( .A(n40), .B(n17), .Z(\ab[0][5] ) );
  INVERT_I U49 ( .A(B[5]), .Z(n40) );
  NOR2_E U50 ( .A(n38), .B(n17), .Z(\ab[0][3] ) );
  INVERT_I U51 ( .A(B[3]), .Z(n38) );
  NOR2_E U52 ( .A(n35), .B(n21), .Z(\ab[1][0] ) );
  INVERT_I U53 ( .A(B[0]), .Z(n35) );
  NOR2_E U54 ( .A(n36), .B(n17), .Z(\ab[0][1] ) );
  INVERT_I U55 ( .A(B[1]), .Z(n36) );
  NOR2_E U56 ( .A(n37), .B(n21), .Z(\ab[1][2] ) );
  NOR2_E U57 ( .A(n37), .B(n17), .Z(\ab[0][2] ) );
  INVERT_I U58 ( .A(B[2]), .Z(n37) );
  NOR2_D U59 ( .A(B[6]), .B(n32), .Z(\ab[3][6] ) );
  NOR2_D U60 ( .A(B[2]), .B(n32), .Z(\ab[3][2] ) );
  NOR2_D U61 ( .A(B[0]), .B(n32), .Z(\ab[3][0] ) );
  XOR2_D U62 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  INVERT_N U63 ( .A(n4), .Z(n32) );
  XOR2_D U64 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U65 ( .A(n33), .B(n35), .Z(\ab[2][0] ) );
  XOR2_B U66 ( .A(\SUMB[3][0] ), .B(n4), .Z(\A1[1] ) );
  NAND2_E U67 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NAND2BAL_E U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U69 ( .A(\A2[5] ), .Z(n24) );
  BUFFER_J U70 ( .A(\A1[7] ), .Z(n25) );
  XOR2_D U71 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NOR2_D U72 ( .A(n42), .B(n32), .Z(\ab[3][7] ) );
  NOR2_D U73 ( .A(A[1]), .B(n42), .Z(\ab[1][7] ) );
  INVERT_K U74 ( .A(ZB), .Z(n42) );
  NAND2BAL_E U75 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U76 ( .A(\A2[7] ), .Z(n26) );
  NOR2_D U77 ( .A(A[2]), .B(n42), .Z(\ab[2][7] ) );
  XOR2_B U78 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Z(\SUMB[1][4] ) );
  NOR2_D U79 ( .A(B[1]), .B(n32), .Z(\ab[3][1] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U81 ( .A(\A2[4] ), .Z(n28) );
  NOR2_C U82 ( .A(n33), .B(n40), .Z(\ab[2][5] ) );
  XOR2_B U83 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U84 ( .A(B[3]), .B(n32), .Z(\ab[3][3] ) );
  NOR2_C U85 ( .A(n35), .B(n17), .Z(PRODUCT[0]) );
  BUFFER_H U86 ( .A(\CARRYB[1][1] ), .Z(n29) );
  NOR2_C U87 ( .A(n33), .B(n36), .Z(\ab[2][1] ) );
  NOR2_D U88 ( .A(B[5]), .B(n32), .Z(\ab[3][5] ) );
  AND2_H U89 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U90 ( .A(n33), .B(n37), .Z(\ab[2][2] ) );
  XOR2_B U91 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U92 ( .A(\CARRYB[1][0] ), .Z(n30) );
  XOR2_B U93 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U94 ( .A(B[4]), .B(n32), .Z(\ab[3][4] ) );
  XOR2_C U95 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U96 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U97 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U98 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U99 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U100 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U101 ( .A(\CARRYB[3][7] ), .Z(n31) );
endmodule


module dsp_slice_2 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n12, n13;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_2_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n13}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_2_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n10) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_H U4 ( .A(n6), .Z(n7) );
  INVERT_I U5 ( .A(n8), .Z(n9) );
  INVERT_I U6 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U7 ( .A(n3), .Z(sample_out[0]) );
  INVERT_H U8 ( .A(n10), .Z(accum_out[0]) );
  INVERT_H U9 ( .A(n12), .Z(n13) );
endmodule


module dsp_slice_1_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_B U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_1_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n15), .Z(n13) );
  AO21_F U3 ( .A1(n19), .A2(n33), .B(n16), .Z(n1) );
  INVERT_D U4 ( .A(B[2]), .Z(n24) );
  NAND2BAL_E U5 ( .A(n18), .B(n3), .Z(n32) );
  INVERT_E U6 ( .A(n30), .Z(n18) );
  AO21_E U7 ( .A1(n14), .A2(A[8]), .B(n28), .Z(n26) );
  OA21_H U8 ( .A1(A[8]), .A2(n14), .B(B[8]), .Z(n28) );
  OR2_I U9 ( .A(n21), .B(n41), .Z(n44) );
  XOR2_B U10 ( .A(B[9]), .B(A[9]), .Z(n25) );
  XOR2_B U11 ( .A(n25), .B(n26), .Z(SUM[9]) );
  INVERT_F U12 ( .A(n31), .Z(n2) );
  INVERT_H U13 ( .A(n2), .Z(n3) );
  INVERT_H U14 ( .A(n12), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_E U16 ( .A(n11), .Z(n12) );
  INVERT_H U17 ( .A(n43), .Z(n21) );
  NAND2_F U18 ( .A(B[4]), .B(A[4]), .Z(n43) );
  INVERT_E U19 ( .A(n47), .Z(n22) );
  XOR2_B U20 ( .A(B[8]), .B(A[8]), .Z(n29) );
  XOR2_B U21 ( .A(n29), .B(n14), .Z(SUM[8]) );
  CLKI_O U22 ( .A(n13), .Z(n14) );
  INVERT_H U23 ( .A(n46), .Z(n6) );
  INVERT_H U24 ( .A(n6), .Z(n7) );
  AND2_I U25 ( .A(B[3]), .B(A[3]), .Z(n46) );
  XOR2_B U26 ( .A(n45), .B(n48), .Z(SUM[3]) );
  NOR2_C U27 ( .A(n7), .B(n47), .Z(n48) );
  NAND2BAL_E U28 ( .A(n20), .B(n39), .Z(n40) );
  OAI21_D U29 ( .A1(n37), .A2(n5), .B(n39), .Z(n33) );
  NAND2_F U30 ( .A(B[5]), .B(A[5]), .Z(n39) );
  INVERT_H U31 ( .A(n1), .Z(n8) );
  INVERT_E U32 ( .A(n24), .Z(n9) );
  INVERT_H U33 ( .A(n9), .Z(n10) );
  INVERT_D U34 ( .A(n38), .Z(n11) );
  OA21_F U35 ( .A1(n41), .A2(n42), .B(n43), .Z(n38) );
  OA21_F U36 ( .A1(n30), .A2(n8), .B(n3), .Z(n27) );
  INVERT_D U37 ( .A(n27), .Z(n15) );
  NOR2_F U38 ( .A(B[5]), .B(A[5]), .Z(n37) );
  NOR2_E U39 ( .A(B[3]), .B(A[3]), .Z(n47) );
  NAND2BAL_E U40 ( .A(B[6]), .B(A[6]), .Z(n34) );
  INVERT_H U41 ( .A(n34), .Z(n16) );
  INVERT_F U42 ( .A(n44), .Z(n17) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n30) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n41) );
  XOR2_B U45 ( .A(n36), .B(n33), .Z(SUM[6]) );
  NOR2_C U46 ( .A(n16), .B(n35), .Z(n36) );
  NOR2_E U47 ( .A(B[6]), .B(A[6]), .Z(n35) );
  XNOR2_B U48 ( .A(n42), .B(n17), .Z(SUM[4]) );
  AOI21_D U49 ( .A1(n22), .A2(n45), .B(n7), .Z(n42) );
  INVERT_F U50 ( .A(n37), .Z(n20) );
  NAND2_E U51 ( .A(B[7]), .B(A[7]), .Z(n31) );
  XOR2_B U52 ( .A(n32), .B(n8), .Z(SUM[7]) );
  XOR2_B U53 ( .A(n40), .B(n5), .Z(SUM[5]) );
  NOR2_F U54 ( .A(n10), .B(n23), .Z(n45) );
  INVERT_H U55 ( .A(A[2]), .Z(n23) );
  INVERT_D U56 ( .A(n35), .Z(n19) );
  AOI21_A U57 ( .A1(n10), .A2(n23), .B(n45), .Z(SUM[2]) );
endmodule


module dsp_slice_1_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][4] , \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] ,
         \A1[7] , \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] ,
         \A1[0] , \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] ,
         \A2[3] , \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  ADDF_F S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  dsp_slice_1_DW01_add_1 FS_1 ( .A({n43, n26, n35, \A1[6] , n7, \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , \A2[8] , n36, 
        \A2[6] , n37, n40, n33, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n42), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n9), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n41), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n14), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_B S3_2_6 ( .A(n39), .B(n12), .CIN(n38), .COUT(\CARRYB[2][6] ), .SUM(
        \SUMB[2][6] ) );
  ADDF_B S2_2_4 ( .A(\ab[2][4] ), .B(n10), .CIN(\SUMB[1][5] ), .COUT(
        \CARRYB[2][4] ), .SUM(\SUMB[2][4] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(\SUMB[1][4] ), .COUT(
        \CARRYB[2][3] ), .SUM(\SUMB[2][3] ) );
  ADDF_E S14_7 ( .A(\ab[3][7] ), .B(n53), .CIN(n5), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_F S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  INVERT_H U2 ( .A(\A2[3] ), .Z(n33) );
  INVERT_E U3 ( .A(n11), .Z(n10) );
  INVERT_H U4 ( .A(\CARRYB[1][3] ), .Z(n34) );
  INVERT_E U5 ( .A(n15), .Z(n14) );
  INVERT_E U6 ( .A(n13), .Z(n12) );
  NOR2_D U7 ( .A(B[2]), .B(n5), .Z(\ab[3][2] ) );
  NOR2_D U8 ( .A(B[0]), .B(n5), .Z(\ab[3][0] ) );
  NOR2_D U9 ( .A(B[6]), .B(n5), .Z(\ab[3][6] ) );
  NOR2_D U10 ( .A(n53), .B(n5), .Z(\ab[3][7] ) );
  INVERT_H U11 ( .A(n45), .Z(n3) );
  AND2_H U12 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  INVERT_I U13 ( .A(n44), .Z(n4) );
  INVERT_N U14 ( .A(n4), .Z(n5) );
  INVERT_H U15 ( .A(ZA), .Z(n44) );
  INVERT_I U16 ( .A(\A1[5] ), .Z(n6) );
  INVERT_I U17 ( .A(n6), .Z(n7) );
  AND2_J U18 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U19 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U20 ( .A(n25), .Z(n26) );
  INVERT_D U21 ( .A(\CARRYB[1][2] ), .Z(n8) );
  INVERT_E U22 ( .A(n8), .Z(n9) );
  AND2_H U23 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  AND2_H U24 ( .A(n17), .B(\ab[0][5] ), .Z(\CARRYB[1][4] ) );
  INVERT_D U25 ( .A(\CARRYB[1][4] ), .Z(n11) );
  AND2_H U26 ( .A(\ab[1][6] ), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  INVERT_D U27 ( .A(\CARRYB[1][6] ), .Z(n13) );
  AND2_H U28 ( .A(n24), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U29 ( .A(\CARRYB[1][5] ), .Z(n15) );
  INVERT_E U30 ( .A(\ab[1][4] ), .Z(n16) );
  INVERT_H U31 ( .A(n16), .Z(n17) );
  BUFFER_J U32 ( .A(\ab[1][3] ), .Z(n18) );
  NAND2_E U33 ( .A(n18), .B(n20), .Z(\CARRYB[1][3] ) );
  NOR2_D U34 ( .A(n49), .B(n29), .Z(\ab[1][3] ) );
  INVERT_E U35 ( .A(\ab[0][4] ), .Z(n19) );
  INVERT_H U36 ( .A(n19), .Z(n20) );
  AND2_H U37 ( .A(\ab[1][1] ), .B(n22), .Z(\CARRYB[1][1] ) );
  NOR2_E U38 ( .A(n47), .B(n28), .Z(\ab[1][1] ) );
  INVERT_E U39 ( .A(\ab[0][2] ), .Z(n21) );
  INVERT_H U40 ( .A(n21), .Z(n22) );
  INVERT_E U41 ( .A(\ab[1][5] ), .Z(n23) );
  INVERT_H U42 ( .A(n23), .Z(n24) );
  XOR2_B U43 ( .A(\ab[0][5] ), .B(n17), .Z(\SUMB[1][4] ) );
  NOR2_E U44 ( .A(n51), .B(n31), .Z(\ab[0][5] ) );
  INVERT_H U45 ( .A(\A1[8] ), .Z(n25) );
  INVERT_H U46 ( .A(A[1]), .Z(n29) );
  INVERT_H U47 ( .A(A[0]), .Z(n32) );
  NOR2_E U48 ( .A(n46), .B(n28), .Z(\ab[1][0] ) );
  INVERT_I U49 ( .A(B[0]), .Z(n46) );
  NOR2_E U50 ( .A(n47), .B(n31), .Z(\ab[0][1] ) );
  INVERT_I U51 ( .A(B[1]), .Z(n47) );
  NOR2_E U52 ( .A(n48), .B(n28), .Z(\ab[1][2] ) );
  INVERT_I U53 ( .A(B[2]), .Z(n48) );
  NOR2_E U54 ( .A(n49), .B(n31), .Z(\ab[0][3] ) );
  INVERT_I U55 ( .A(B[3]), .Z(n49) );
  INVERT_I U56 ( .A(B[4]), .Z(n50) );
  INVERT_I U57 ( .A(B[5]), .Z(n51) );
  NOR2_E U58 ( .A(n52), .B(n31), .Z(\ab[0][6] ) );
  NOR2_E U59 ( .A(n52), .B(n28), .Z(\ab[1][6] ) );
  INVERT_I U60 ( .A(B[6]), .Z(n52) );
  NOR2_E U61 ( .A(A[0]), .B(n53), .Z(\ab[0][7] ) );
  OR2_I U62 ( .A(A[1]), .B(n53), .Z(\ab[1][7] ) );
  INVERT_K U63 ( .A(ZB), .Z(n53) );
  INVERT_H U64 ( .A(n29), .Z(n27) );
  INVERT_L U65 ( .A(n27), .Z(n28) );
  INVERT_H U66 ( .A(n32), .Z(n30) );
  INVERT_L U67 ( .A(n30), .Z(n31) );
  XOR2_D U68 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  XOR2_D U70 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  NOR2_C U71 ( .A(n45), .B(n49), .Z(\ab[2][3] ) );
  NOR2_C U72 ( .A(n45), .B(n50), .Z(\ab[2][4] ) );
  NOR2_C U73 ( .A(n45), .B(n46), .Z(\ab[2][0] ) );
  INVERT_M U74 ( .A(A[2]), .Z(n45) );
  NAND2_E U75 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  NOR2_C U76 ( .A(n50), .B(n32), .Z(\ab[0][4] ) );
  BUFFER_J U77 ( .A(\A1[7] ), .Z(n35) );
  NOR2_C U78 ( .A(n50), .B(n28), .Z(\ab[1][4] ) );
  XOR2_D U79 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  NAND2BAL_E U80 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  INVERT_I U81 ( .A(\A2[7] ), .Z(n36) );
  NAND2BAL_E U82 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  INVERT_I U83 ( .A(\A2[5] ), .Z(n37) );
  INVERT_H U84 ( .A(\ab[1][7] ), .Z(n38) );
  OR2_J U85 ( .A(n45), .B(n52), .Z(\ab[2][6] ) );
  INVERT_H U86 ( .A(\ab[2][6] ), .Z(n39) );
  NOR2_D U87 ( .A(B[1]), .B(n5), .Z(\ab[3][1] ) );
  NAND2BAL_E U88 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U89 ( .A(\A2[4] ), .Z(n40) );
  NOR2_D U90 ( .A(n3), .B(n53), .Z(\ab[2][7] ) );
  NOR2_C U91 ( .A(n45), .B(n51), .Z(\ab[2][5] ) );
  NOR2_C U92 ( .A(n28), .B(n51), .Z(\ab[1][5] ) );
  XOR2_B U93 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Z(\SUMB[1][6] ) );
  NOR2_D U94 ( .A(B[3]), .B(n5), .Z(\ab[3][3] ) );
  BUFFER_H U95 ( .A(\CARRYB[1][1] ), .Z(n41) );
  NOR2_C U96 ( .A(n45), .B(n47), .Z(\ab[2][1] ) );
  NOR2_C U97 ( .A(n48), .B(n31), .Z(\ab[0][2] ) );
  NOR2_D U98 ( .A(B[5]), .B(n5), .Z(\ab[3][5] ) );
  AND2_H U99 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U100 ( .A(n31), .B(n46), .Z(PRODUCT[0]) );
  NOR2_C U101 ( .A(n45), .B(n48), .Z(\ab[2][2] ) );
  XOR2_B U102 ( .A(n20), .B(n18), .Z(\SUMB[1][3] ) );
  BUFFER_H U103 ( .A(\CARRYB[1][0] ), .Z(n42) );
  XOR2_B U104 ( .A(n22), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U105 ( .A(B[4]), .B(n5), .Z(\ab[3][4] ) );
  XOR2_C U106 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U107 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U108 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U109 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U110 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U111 ( .A(\ab[0][6] ), .B(n24), .Z(\SUMB[1][5] ) );
  INVERT_D U112 ( .A(\CARRYB[3][7] ), .Z(n43) );
endmodule


module dsp_slice_1 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n6, n7, n8, n9, n10,
         n11, n12;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_1_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n11}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_1_DW02_mult_0 mult_32 ( .A({n7, n9, sample_out[1:0]}), .B(coeff_in), .TC(1'b1), .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .Q(accum_out[11]) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .Q(accum_out[10]) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .Q(accum_out[9]) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .Q(accum_out[8]) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .Q(accum_out[7]) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .Q(accum_out[6]) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .Q(accum_out[5]) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .Q(accum_out[4]) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .Q(accum_out[3]) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .Q(accum_out[2]) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .Q(accum_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n12) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n10) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .Q(
        sample_out[2]), .QBAR(n8) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(
        sample_out[3]), .QBAR(n6) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  INVERT_I U4 ( .A(n2), .Z(sample_out[1]) );
  INVERT_I U5 ( .A(n3), .Z(sample_out[0]) );
  INVERT_I U6 ( .A(n6), .Z(n7) );
  INVERT_I U7 ( .A(n8), .Z(n9) );
  INVERT_H U8 ( .A(n10), .Z(n11) );
  INVERT_H U9 ( .A(n12), .Z(accum_out[0]) );
endmodule


module dsp_slice_0_DW01_add_0 ( A, B, CI, SUM, CO );
  input [11:0] A;
  input [11:0] B;
  output [11:0] SUM;
  input CI;
  output CO;

  wire   [11:1] carry;

  ADDF_F U1_11 ( .A(A[11]), .B(B[11]), .CIN(carry[11]), .SUM(SUM[11]) );
  ADDF_F U1_10 ( .A(A[10]), .B(B[10]), .CIN(carry[10]), .COUT(carry[11]), 
        .SUM(SUM[10]) );
  ADDF_F U1_9 ( .A(A[9]), .B(B[9]), .CIN(carry[9]), .COUT(carry[10]), .SUM(
        SUM[9]) );
  ADDF_F U1_8 ( .A(A[8]), .B(B[8]), .CIN(carry[8]), .COUT(carry[9]), .SUM(
        SUM[8]) );
  ADDF_F U1_7 ( .A(A[7]), .B(B[7]), .CIN(carry[7]), .COUT(carry[8]), .SUM(
        SUM[7]) );
  ADDF_F U1_6 ( .A(A[6]), .B(B[6]), .CIN(carry[6]), .COUT(carry[7]), .SUM(
        SUM[6]) );
  ADDF_F U1_5 ( .A(A[5]), .B(B[5]), .CIN(carry[5]), .COUT(carry[6]), .SUM(
        SUM[5]) );
  ADDF_F U1_4 ( .A(A[4]), .B(B[4]), .CIN(carry[4]), .COUT(carry[5]), .SUM(
        SUM[4]) );
  ADDF_F U1_3 ( .A(A[3]), .B(B[3]), .CIN(carry[3]), .COUT(carry[4]), .SUM(
        SUM[3]) );
  ADDF_F U1_2 ( .A(A[2]), .B(B[2]), .CIN(carry[2]), .COUT(carry[3]), .SUM(
        SUM[2]) );
  ADDF_F U1_1 ( .A(A[1]), .B(B[1]), .CIN(carry[1]), .COUT(carry[2]), .SUM(
        SUM[1]) );
  AND2_I U1 ( .A(A[0]), .B(B[0]), .Z(carry[1]) );
  XOR2_C U2 ( .A(A[0]), .B(B[0]), .Z(SUM[0]) );
endmodule


module dsp_slice_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   \A[1] , \A[0] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53;
  assign SUM[1] = \A[1] ;
  assign \A[1]  = A[1];
  assign SUM[0] = \A[0] ;
  assign \A[0]  = A[0];

  INVERT_E U2 ( .A(n21), .Z(n19) );
  AO21_F U3 ( .A1(n25), .A2(n7), .B(n22), .Z(n1) );
  INVERT_F U4 ( .A(n10), .Z(n11) );
  NAND2BAL_E U5 ( .A(n24), .B(n5), .Z(n37) );
  INVERT_E U6 ( .A(n35), .Z(n24) );
  NAND2BAL_E U7 ( .A(n10), .B(n13), .Z(n45) );
  AO21_E U8 ( .A1(n20), .A2(A[8]), .B(n33), .Z(n31) );
  OA21_H U9 ( .A1(A[8]), .A2(n20), .B(B[8]), .Z(n33) );
  INVERT_E U10 ( .A(n17), .Z(n2) );
  INVERT_H U11 ( .A(n2), .Z(n3) );
  XOR2_B U12 ( .A(B[9]), .B(A[9]), .Z(n30) );
  XOR2_B U13 ( .A(n30), .B(n31), .Z(SUM[9]) );
  INVERT_F U14 ( .A(n36), .Z(n4) );
  INVERT_H U15 ( .A(n4), .Z(n5) );
  INVERT_H U16 ( .A(n48), .Z(n26) );
  NAND2_F U17 ( .A(B[4]), .B(A[4]), .Z(n48) );
  INVERT_E U18 ( .A(n52), .Z(n27) );
  XOR2_B U19 ( .A(B[8]), .B(A[8]), .Z(n34) );
  XOR2_B U20 ( .A(n34), .B(n20), .Z(SUM[8]) );
  CLKI_O U21 ( .A(n19), .Z(n20) );
  INVERT_H U22 ( .A(n38), .Z(n6) );
  INVERT_H U23 ( .A(n6), .Z(n7) );
  INVERT_F U24 ( .A(n49), .Z(n23) );
  OR2_I U25 ( .A(n26), .B(n46), .Z(n49) );
  INVERT_H U26 ( .A(n51), .Z(n8) );
  INVERT_H U27 ( .A(n8), .Z(n9) );
  AND2_I U28 ( .A(B[3]), .B(A[3]), .Z(n51) );
  XOR2_B U29 ( .A(n50), .B(n53), .Z(SUM[3]) );
  NOR2_C U30 ( .A(n9), .B(n52), .Z(n53) );
  INVERT_H U31 ( .A(n42), .Z(n10) );
  NOR2_D U32 ( .A(B[5]), .B(A[5]), .Z(n42) );
  INVERT_H U33 ( .A(n44), .Z(n12) );
  INVERT_H U34 ( .A(n12), .Z(n13) );
  INVERT_H U35 ( .A(n1), .Z(n14) );
  INVERT_E U36 ( .A(n29), .Z(n15) );
  INVERT_H U37 ( .A(n15), .Z(n16) );
  INVERT_D U38 ( .A(n43), .Z(n17) );
  INVERT_F U39 ( .A(n3), .Z(n18) );
  OA21_F U40 ( .A1(n46), .A2(n47), .B(n48), .Z(n43) );
  OA21_F U41 ( .A1(n35), .A2(n14), .B(n5), .Z(n32) );
  INVERT_D U42 ( .A(n32), .Z(n21) );
  NOR2_E U43 ( .A(B[7]), .B(A[7]), .Z(n35) );
  NOR2_E U44 ( .A(B[4]), .B(A[4]), .Z(n46) );
  NAND2BAL_E U45 ( .A(B[6]), .B(A[6]), .Z(n39) );
  INVERT_H U46 ( .A(n39), .Z(n22) );
  NOR2_E U47 ( .A(B[3]), .B(A[3]), .Z(n52) );
  XOR2_B U48 ( .A(n41), .B(n7), .Z(SUM[6]) );
  NOR2_C U49 ( .A(n22), .B(n40), .Z(n41) );
  NOR2_E U50 ( .A(B[6]), .B(A[6]), .Z(n40) );
  OAI21_C U51 ( .A1(n11), .A2(n18), .B(n13), .Z(n38) );
  XNOR2_B U52 ( .A(n47), .B(n23), .Z(SUM[4]) );
  AOI21_D U53 ( .A1(n27), .A2(n50), .B(n9), .Z(n47) );
  NAND2_E U54 ( .A(B[7]), .B(A[7]), .Z(n36) );
  XOR2_B U55 ( .A(n14), .B(n37), .Z(SUM[7]) );
  XOR2_B U56 ( .A(n45), .B(n18), .Z(SUM[5]) );
  NAND2_E U57 ( .A(B[5]), .B(A[5]), .Z(n44) );
  NOR2_F U58 ( .A(n16), .B(n28), .Z(n50) );
  INVERT_H U59 ( .A(A[2]), .Z(n28) );
  INVERT_D U60 ( .A(n40), .Z(n25) );
  INVERT_D U61 ( .A(B[2]), .Z(n29) );
  AOI21_A U62 ( .A1(n16), .A2(n28), .B(n50), .Z(SUM[2]) );
endmodule


module dsp_slice_0_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [3:0] A;
  input [7:0] B;
  output [11:0] PRODUCT;
  input TC;
  wire   \ab[3][7] , \ab[3][6] , \ab[3][5] , \ab[3][4] , \ab[3][3] ,
         \ab[3][2] , \ab[3][1] , \ab[3][0] , \ab[2][7] , \ab[2][6] ,
         \ab[2][5] , \ab[2][4] , \ab[2][3] , \ab[2][2] , \ab[2][1] ,
         \ab[2][0] , \ab[1][7] , \ab[1][6] , \ab[1][5] , \ab[1][4] ,
         \ab[1][3] , \ab[1][2] , \ab[1][1] , \ab[1][0] , \ab[0][7] ,
         \ab[0][6] , \ab[0][5] , \ab[0][4] , \ab[0][3] , \ab[0][2] ,
         \ab[0][1] , \CARRYB[3][7] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \CARRYB[1][6] , \CARRYB[1][5] , \CARRYB[1][4] , \CARRYB[1][3] ,
         \CARRYB[1][2] , \CARRYB[1][1] , \CARRYB[1][0] , \SUMB[3][7] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[3][0] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] ,
         \SUMB[2][3] , \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , ZA, \A1[8] , \A1[7] ,
         \A1[6] , \A1[5] , \A1[4] , \A1[3] , \A1[2] , \A1[1] , \A1[0] ,
         \A2[9] , \A2[8] , \A2[7] , \A2[6] , \A2[5] , \A2[4] , \A2[3] ,
         \A2[2] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51;
  tri   [7:0] B;
  tri   ZB;
  assign ZA = A[3];
  assign ZB = B[7];

  ADDF_F S14_7_0 ( .A(ZB), .B(\CARRYB[3][3] ), .CIN(\SUMB[3][4] ), .COUT(
        \A2[6] ), .SUM(\A1[5] ) );
  ADDF_F S4_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CIN(\SUMB[2][2] ), .COUT(
        \CARRYB[3][1] ), .SUM(\SUMB[3][1] ) );
  ADDF_F S4_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CIN(\SUMB[2][4] ), .COUT(
        \CARRYB[3][3] ), .SUM(\SUMB[3][3] ) );
  ADDF_F S4_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CIN(\SUMB[2][5] ), .COUT(
        \CARRYB[3][4] ), .SUM(\SUMB[3][4] ) );
  dsp_slice_0_DW01_add_1 FS_1 ( .A({n39, n37, n19, n28, \A1[5] , n21, n23, 
        \A1[2] , \A1[1] , \A1[0] }), .B({\A2[9] , n13, n33, \A2[6] , n29, n24, 
        n25, \A2[2] , 1'b0, 1'b0}), .CI(1'b0), .SUM(PRODUCT[11:2]) );
  ADDF_B S1_2_0 ( .A(\ab[2][0] ), .B(n38), .CIN(\SUMB[1][1] ), .COUT(
        \CARRYB[2][0] ), .SUM(\A1[0] ) );
  ADDF_B S2_2_2 ( .A(\ab[2][2] ), .B(n15), .CIN(\SUMB[1][3] ), .COUT(
        \CARRYB[2][2] ), .SUM(\SUMB[2][2] ) );
  ADDF_E S14_7 ( .A(n40), .B(n51), .CIN(\ab[3][7] ), .COUT(\CARRYB[3][7] ), 
        .SUM(\SUMB[3][7] ) );
  ADDF_B S2_2_3 ( .A(\ab[2][3] ), .B(n34), .CIN(n3), .COUT(\CARRYB[2][3] ), 
        .SUM(\SUMB[2][3] ) );
  ADDF_E S4_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CIN(\SUMB[2][6] ), .COUT(
        \CARRYB[3][5] ), .SUM(\SUMB[3][5] ) );
  ADDF_E S5_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CIN(\ab[2][7] ), .COUT(
        \CARRYB[3][6] ), .SUM(\SUMB[3][6] ) );
  ADDF_B S2_2_1 ( .A(\ab[2][1] ), .B(n32), .CIN(\SUMB[1][2] ), .COUT(
        \CARRYB[2][1] ), .SUM(\SUMB[2][1] ) );
  ADDF_B S2_2_5 ( .A(\ab[2][5] ), .B(n31), .CIN(\SUMB[1][6] ), .COUT(
        \CARRYB[2][5] ), .SUM(\SUMB[2][5] ) );
  ADDF_E S4_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CIN(\SUMB[2][1] ), .COUT(
        \CARRYB[3][0] ), .SUM(\SUMB[3][0] ) );
  ADDF_B S3_2_6 ( .A(\ab[2][6] ), .B(n30), .CIN(\ab[1][7] ), .COUT(
        \CARRYB[2][6] ), .SUM(\SUMB[2][6] ) );
  ADDF_E S4_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CIN(\SUMB[2][3] ), .COUT(
        \CARRYB[3][2] ), .SUM(\SUMB[3][2] ) );
  ADDF_B S2_2_4 ( .A(n16), .B(n26), .CIN(\SUMB[1][5] ), .COUT(\CARRYB[2][4] ), 
        .SUM(\SUMB[2][4] ) );
  INVERT_E U2 ( .A(n17), .Z(n31) );
  INVERT_H U3 ( .A(n22), .Z(n23) );
  INVERT_H U4 ( .A(\A2[3] ), .Z(n25) );
  XOR2_C U5 ( .A(n9), .B(n7), .Z(n3) );
  INVERT_H U6 ( .A(\CARRYB[1][4] ), .Z(n26) );
  INVERT_H U7 ( .A(\CARRYB[1][1] ), .Z(n32) );
  NOR2_C U8 ( .A(A[1]), .B(n51), .Z(\ab[1][7] ) );
  INVERT_I U9 ( .A(n18), .Z(n4) );
  INVERT_M U10 ( .A(n4), .Z(n5) );
  AND2_H U11 ( .A(\ab[1][3] ), .B(\ab[0][4] ), .Z(\CARRYB[1][3] ) );
  NOR2_E U12 ( .A(n48), .B(n5), .Z(\ab[0][4] ) );
  INVERT_F U13 ( .A(\ab[1][4] ), .Z(n6) );
  INVERT_H U14 ( .A(n6), .Z(n7) );
  NOR2_D U15 ( .A(n48), .B(n42), .Z(\ab[1][4] ) );
  INVERT_H U16 ( .A(\ab[2][4] ), .Z(n16) );
  OR2_J U17 ( .A(n41), .B(n48), .Z(\ab[2][4] ) );
  INVERT_F U18 ( .A(\ab[0][5] ), .Z(n8) );
  INVERT_H U19 ( .A(n8), .Z(n9) );
  NOR2_D U20 ( .A(n49), .B(n18), .Z(\ab[0][5] ) );
  NOR2_F U21 ( .A(n45), .B(n42), .Z(\ab[1][1] ) );
  INVERT_F U22 ( .A(\ab[0][2] ), .Z(n10) );
  INVERT_H U23 ( .A(n10), .Z(n11) );
  NOR2_D U24 ( .A(n46), .B(n5), .Z(\ab[0][2] ) );
  INVERT_H U25 ( .A(\A2[8] ), .Z(n12) );
  INVERT_H U26 ( .A(n12), .Z(n13) );
  AND2_I U27 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A2[8] ) );
  AND2_H U28 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Z(\CARRYB[1][0] ) );
  INVERT_I U29 ( .A(n36), .Z(n37) );
  INVERT_D U30 ( .A(\CARRYB[1][2] ), .Z(n14) );
  INVERT_E U31 ( .A(n14), .Z(n15) );
  AND2_H U32 ( .A(\ab[1][2] ), .B(\ab[0][3] ), .Z(\CARRYB[1][2] ) );
  INVERT_I U33 ( .A(n43), .Z(n18) );
  BUFFER_I U34 ( .A(A[0]), .Z(n43) );
  INVERT_M U35 ( .A(A[2]), .Z(n41) );
  NAND2_E U36 ( .A(n7), .B(n9), .Z(\CARRYB[1][4] ) );
  AND2_H U37 ( .A(\ab[1][5] ), .B(\ab[0][6] ), .Z(\CARRYB[1][5] ) );
  INVERT_D U38 ( .A(\CARRYB[1][5] ), .Z(n17) );
  NOR2_E U39 ( .A(n50), .B(n5), .Z(\ab[0][6] ) );
  NAND2_E U40 ( .A(\ab[1][1] ), .B(n11), .Z(\CARRYB[1][1] ) );
  NOR2_E U41 ( .A(n47), .B(n42), .Z(\ab[1][3] ) );
  NOR2_D U42 ( .A(n50), .B(n42), .Z(\ab[1][6] ) );
  NOR2_E U43 ( .A(n49), .B(n42), .Z(\ab[1][5] ) );
  INVERT_M U44 ( .A(A[1]), .Z(n42) );
  INVERT_I U45 ( .A(B[4]), .Z(n48) );
  NOR2_D U46 ( .A(n41), .B(n49), .Z(\ab[2][5] ) );
  INVERT_I U47 ( .A(B[5]), .Z(n49) );
  INVERT_I U48 ( .A(B[6]), .Z(n50) );
  NOR2_E U49 ( .A(n45), .B(n5), .Z(\ab[0][1] ) );
  INVERT_I U50 ( .A(B[1]), .Z(n45) );
  NOR2_E U51 ( .A(n46), .B(n42), .Z(\ab[1][2] ) );
  INVERT_I U52 ( .A(B[2]), .Z(n46) );
  NOR2_E U53 ( .A(n47), .B(n5), .Z(\ab[0][3] ) );
  INVERT_I U54 ( .A(B[3]), .Z(n47) );
  NOR2_E U55 ( .A(n44), .B(n42), .Z(\ab[1][0] ) );
  INVERT_I U56 ( .A(B[0]), .Z(n44) );
  NOR2_C U57 ( .A(n41), .B(n50), .Z(\ab[2][6] ) );
  NOR2_D U58 ( .A(B[2]), .B(n40), .Z(\ab[3][2] ) );
  NOR2_D U59 ( .A(B[5]), .B(n40), .Z(\ab[3][5] ) );
  BUFFER_J U60 ( .A(\A1[7] ), .Z(n19) );
  INVERT_H U61 ( .A(\A1[4] ), .Z(n20) );
  INVERT_I U62 ( .A(n20), .Z(n21) );
  INVERT_H U63 ( .A(\A1[3] ), .Z(n22) );
  NOR2_D U64 ( .A(B[6]), .B(n40), .Z(\ab[3][6] ) );
  INVERT_N U65 ( .A(ZA), .Z(n40) );
  XOR2_B U66 ( .A(\ab[0][7] ), .B(n35), .Z(\SUMB[1][6] ) );
  NAND2_E U67 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A2[4] ) );
  INVERT_I U68 ( .A(\A2[4] ), .Z(n24) );
  XOR2_B U69 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A1[1] ) );
  NAND2_E U70 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A2[3] ) );
  INVERT_H U71 ( .A(\A1[6] ), .Z(n27) );
  INVERT_I U72 ( .A(n27), .Z(n28) );
  BUFFER_J U73 ( .A(\A2[5] ), .Z(n29) );
  AND2_I U74 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A2[5] ) );
  BUFFER_H U75 ( .A(\CARRYB[1][6] ), .Z(n30) );
  AND2_H U76 ( .A(n35), .B(\ab[0][7] ), .Z(\CARRYB[1][6] ) );
  NOR2_D U77 ( .A(B[1]), .B(n40), .Z(\ab[3][1] ) );
  AND2_H U78 ( .A(\SUMB[3][0] ), .B(ZA), .Z(\A2[2] ) );
  NOR2_C U79 ( .A(n41), .B(n45), .Z(\ab[2][1] ) );
  NOR2_D U80 ( .A(B[3]), .B(n40), .Z(\ab[3][3] ) );
  AND2_H U81 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A2[9] ) );
  NOR2_C U82 ( .A(n44), .B(n5), .Z(PRODUCT[0]) );
  BUFFER_J U83 ( .A(\A2[7] ), .Z(n33) );
  AND2_I U84 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A2[7] ) );
  BUFFER_H U85 ( .A(\CARRYB[1][3] ), .Z(n34) );
  NOR2_C U86 ( .A(n41), .B(n47), .Z(\ab[2][3] ) );
  NOR2_D U87 ( .A(B[0]), .B(n40), .Z(\ab[3][0] ) );
  BUFFER_I U88 ( .A(\ab[1][6] ), .Z(n35) );
  INVERT_H U89 ( .A(\A1[8] ), .Z(n36) );
  NOR2_D U90 ( .A(n51), .B(n40), .Z(\ab[3][7] ) );
  NOR2_D U91 ( .A(A[2]), .B(n51), .Z(\ab[2][7] ) );
  NOR2_E U92 ( .A(A[0]), .B(n51), .Z(\ab[0][7] ) );
  INVERT_K U93 ( .A(ZB), .Z(n51) );
  NOR2_C U94 ( .A(n41), .B(n46), .Z(\ab[2][2] ) );
  XOR2_B U95 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Z(\SUMB[1][3] ) );
  BUFFER_H U96 ( .A(\CARRYB[1][0] ), .Z(n38) );
  NOR2_D U97 ( .A(n41), .B(n44), .Z(\ab[2][0] ) );
  XOR2_B U98 ( .A(n11), .B(\ab[1][1] ), .Z(\SUMB[1][1] ) );
  NOR2_D U99 ( .A(B[4]), .B(n40), .Z(\ab[3][4] ) );
  XOR2_C U100 ( .A(\SUMB[3][1] ), .B(\CARRYB[3][0] ), .Z(\A1[2] ) );
  XOR2_C U101 ( .A(\SUMB[3][2] ), .B(\CARRYB[3][1] ), .Z(\A1[3] ) );
  XOR2_C U102 ( .A(\SUMB[3][3] ), .B(\CARRYB[3][2] ), .Z(\A1[4] ) );
  XOR2_C U103 ( .A(\SUMB[3][5] ), .B(\CARRYB[3][4] ), .Z(\A1[6] ) );
  XOR2_C U104 ( .A(\SUMB[3][6] ), .B(\CARRYB[3][5] ), .Z(\A1[7] ) );
  XOR2_C U105 ( .A(\SUMB[3][7] ), .B(\CARRYB[3][6] ), .Z(\A1[8] ) );
  XOR2_C U106 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Z(PRODUCT[1]) );
  XOR2_C U107 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Z(\SUMB[1][2] ) );
  XOR2_C U108 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Z(\SUMB[1][5] ) );
  INVERT_D U109 ( .A(\CARRYB[3][7] ), .Z(n39) );
endmodule


module dsp_slice_0 ( clk, sample_in, accum_in, coeff_in, sample_out, accum_out
 );
  input [3:0] sample_in;
  input [11:0] accum_in;
  input [7:0] coeff_in;
  output [3:0] sample_out;
  output [11:0] accum_out;
  input clk;
  wire   n62, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17, N18, N19, N20, N21, N22, N23, n2, n3, n4, n5, n6, n7,
         n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21,
         n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35,
         n36, n37, n38, n39, n40, n55, n58, n59;
  wire   [3:0] sample_delay0;
  wire   [11:0] mult_out;
  tri   clk;
  tri   [7:0] coeff_in;

  dsp_slice_0_DW01_add_0 add_33 ( .A(accum_in), .B({mult_out[11:1], n59}), 
        .CI(1'b0), .SUM({N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12}) );
  dsp_slice_0_DW02_mult_0 mult_32 ( .A(sample_out), .B(coeff_in), .TC(1'b1), 
        .PRODUCT({N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  DFF_E \mult_out_reg[3]  ( .D(N3), .CLK(clk), .Q(mult_out[3]) );
  DFF_E \mult_out_reg[2]  ( .D(N2), .CLK(clk), .Q(mult_out[2]) );
  DFF_E \mult_out_reg[1]  ( .D(N1), .CLK(clk), .Q(mult_out[1]) );
  DFF_E \mult_out_reg[7]  ( .D(N7), .CLK(clk), .Q(mult_out[7]) );
  DFF_E \mult_out_reg[0]  ( .D(N0), .CLK(clk), .QBAR(n58) );
  DFF_E \sample_delay1_reg[1]  ( .D(sample_delay0[1]), .CLK(clk), .QBAR(n2) );
  DFF_E \mult_out_reg[4]  ( .D(N4), .CLK(clk), .Q(mult_out[4]) );
  DFF_E \sample_delay1_reg[3]  ( .D(sample_delay0[3]), .CLK(clk), .Q(n62) );
  DFF_E \sample_delay1_reg[2]  ( .D(sample_delay0[2]), .CLK(clk), .QBAR(n3) );
  DFF_E \sample_delay0_reg[2]  ( .D(sample_in[2]), .CLK(clk), .Q(
        sample_delay0[2]) );
  DFF_E \accum_reg[11]  ( .D(N23), .CLK(clk), .QBAR(n15) );
  DFF_E \accum_reg[10]  ( .D(N22), .CLK(clk), .QBAR(n14) );
  DFF_E \accum_reg[9]  ( .D(N21), .CLK(clk), .QBAR(n13) );
  DFF_E \accum_reg[8]  ( .D(N20), .CLK(clk), .QBAR(n12) );
  DFF_E \accum_reg[7]  ( .D(N19), .CLK(clk), .QBAR(n11) );
  DFF_E \accum_reg[6]  ( .D(N18), .CLK(clk), .QBAR(n10) );
  DFF_E \accum_reg[5]  ( .D(N17), .CLK(clk), .QBAR(n9) );
  DFF_E \accum_reg[4]  ( .D(N16), .CLK(clk), .QBAR(n8) );
  DFF_E \accum_reg[3]  ( .D(N15), .CLK(clk), .QBAR(n7) );
  DFF_E \accum_reg[2]  ( .D(N14), .CLK(clk), .QBAR(n6) );
  DFF_E \accum_reg[1]  ( .D(N13), .CLK(clk), .QBAR(n5) );
  DFF_E \accum_reg[0]  ( .D(N12), .CLK(clk), .QBAR(n4) );
  DFF_E \sample_delay1_reg[0]  ( .D(sample_delay0[0]), .CLK(clk), .QBAR(n40)
         );
  DFF_E \mult_out_reg[11]  ( .D(N11), .CLK(clk), .Q(mult_out[11]) );
  DFF_E \sample_delay0_reg[1]  ( .D(sample_in[1]), .CLK(clk), .Q(
        sample_delay0[1]) );
  DFF_E \sample_delay0_reg[0]  ( .D(sample_in[0]), .CLK(clk), .Q(
        sample_delay0[0]) );
  DFF_E \mult_out_reg[10]  ( .D(N10), .CLK(clk), .Q(mult_out[10]) );
  DFF_E \mult_out_reg[9]  ( .D(N9), .CLK(clk), .Q(mult_out[9]) );
  DFF_E \mult_out_reg[8]  ( .D(N8), .CLK(clk), .Q(mult_out[8]) );
  DFF_E \mult_out_reg[6]  ( .D(N6), .CLK(clk), .Q(mult_out[6]) );
  DFF_E \mult_out_reg[5]  ( .D(N5), .CLK(clk), .Q(mult_out[5]) );
  DFF_E \sample_delay0_reg[3]  ( .D(sample_in[3]), .CLK(clk), .Q(
        sample_delay0[3]) );
  CLKI_Q U4 ( .A(n3), .Z(sample_out[2]) );
  INVERT_K U5 ( .A(n55), .Z(sample_out[3]) );
  INVERT_H U6 ( .A(n4), .Z(n16) );
  INVERT_J U7 ( .A(n16), .Z(n17) );
  INVERT_H U8 ( .A(n5), .Z(n18) );
  INVERT_J U9 ( .A(n18), .Z(n19) );
  INVERT_H U10 ( .A(n6), .Z(n20) );
  INVERT_J U11 ( .A(n20), .Z(n21) );
  INVERT_H U12 ( .A(n7), .Z(n22) );
  INVERT_J U13 ( .A(n22), .Z(n23) );
  INVERT_H U14 ( .A(n8), .Z(n24) );
  INVERT_J U15 ( .A(n24), .Z(n25) );
  INVERT_H U16 ( .A(n9), .Z(n26) );
  INVERT_J U17 ( .A(n26), .Z(n27) );
  INVERT_H U18 ( .A(n10), .Z(n28) );
  INVERT_J U19 ( .A(n28), .Z(n29) );
  INVERT_H U20 ( .A(n11), .Z(n30) );
  INVERT_J U21 ( .A(n30), .Z(n31) );
  INVERT_H U22 ( .A(n12), .Z(n32) );
  INVERT_J U23 ( .A(n32), .Z(n33) );
  INVERT_H U24 ( .A(n13), .Z(n34) );
  INVERT_J U25 ( .A(n34), .Z(n35) );
  INVERT_H U26 ( .A(n14), .Z(n36) );
  INVERT_J U27 ( .A(n36), .Z(n37) );
  INVERT_H U28 ( .A(n15), .Z(n38) );
  INVERT_J U29 ( .A(n38), .Z(n39) );
  INVERT_H U30 ( .A(n40), .Z(sample_out[0]) );
  INVERT_O U31 ( .A(n17), .Z(accum_out[0]) );
  INVERT_O U32 ( .A(n19), .Z(accum_out[1]) );
  INVERT_O U33 ( .A(n21), .Z(accum_out[2]) );
  INVERT_O U34 ( .A(n23), .Z(accum_out[3]) );
  INVERT_O U35 ( .A(n25), .Z(accum_out[4]) );
  INVERT_O U36 ( .A(n27), .Z(accum_out[5]) );
  INVERT_O U37 ( .A(n29), .Z(accum_out[6]) );
  INVERT_O U38 ( .A(n31), .Z(accum_out[7]) );
  INVERT_O U39 ( .A(n33), .Z(accum_out[8]) );
  INVERT_O U40 ( .A(n35), .Z(accum_out[9]) );
  INVERT_O U41 ( .A(n37), .Z(accum_out[10]) );
  INVERT_O U42 ( .A(n39), .Z(accum_out[11]) );
  INVERT_I U43 ( .A(n2), .Z(sample_out[1]) );
  INVERT_H U44 ( .A(n62), .Z(n55) );
  INVERT_H U45 ( .A(n58), .Z(n59) );
endmodule


module fir_filter_syn ( clk, sample_in, coeff_read, coeff_write, coeff_in, 
        coeff_addr, fir_out, coeff_read_out );
  input [3:0] sample_in;
  input [7:0] coeff_in;
  input [9:0] coeff_addr;
  output [11:0] fir_out;
  output [7:0] coeff_read_out;
  input clk, coeff_read, coeff_write;
  wire   \sample_internal[1][3] , \sample_internal[1][2] ,
         \sample_internal[1][1] , \sample_internal[1][0] ,
         \sample_internal[2][3] , \sample_internal[2][2] ,
         \sample_internal[2][1] , \sample_internal[2][0] ,
         \sample_internal[3][3] , \sample_internal[3][2] ,
         \sample_internal[3][1] , \sample_internal[3][0] ,
         \sample_internal[4][3] , \sample_internal[4][2] ,
         \sample_internal[4][1] , \sample_internal[4][0] ,
         \sample_internal[5][3] , \sample_internal[5][2] ,
         \sample_internal[5][1] , \sample_internal[5][0] ,
         \sample_internal[6][3] , \sample_internal[6][2] ,
         \sample_internal[6][1] , \sample_internal[6][0] ,
         \sample_internal[7][3] , \sample_internal[7][2] ,
         \sample_internal[7][1] , \sample_internal[7][0] ,
         \sample_internal[8][3] , \sample_internal[8][2] ,
         \sample_internal[8][1] , \sample_internal[8][0] ,
         \sample_internal[9][3] , \sample_internal[9][2] ,
         \sample_internal[9][1] , \sample_internal[9][0] ,
         \sample_internal[10][3] , \sample_internal[10][2] ,
         \sample_internal[10][1] , \sample_internal[10][0] ,
         \sample_internal[11][3] , \sample_internal[11][2] ,
         \sample_internal[11][1] , \sample_internal[11][0] ,
         \sample_internal[12][3] , \sample_internal[12][2] ,
         \sample_internal[12][1] , \sample_internal[12][0] ,
         \sample_internal[13][3] , \sample_internal[13][2] ,
         \sample_internal[13][1] , \sample_internal[13][0] ,
         \sample_internal[14][3] , \sample_internal[14][2] ,
         \sample_internal[14][1] , \sample_internal[14][0] ,
         \sample_internal[15][3] , \sample_internal[15][2] ,
         \sample_internal[15][1] , \sample_internal[15][0] ,
         \sample_internal[16][3] , \sample_internal[16][2] ,
         \sample_internal[16][1] , \sample_internal[16][0] ,
         \sample_internal[17][3] , \sample_internal[17][2] ,
         \sample_internal[17][1] , \sample_internal[17][0] ,
         \sample_internal[18][3] , \sample_internal[18][2] ,
         \sample_internal[18][1] , \sample_internal[18][0] ,
         \sample_internal[19][3] , \sample_internal[19][2] ,
         \sample_internal[19][1] , \sample_internal[19][0] ,
         \sample_internal[20][3] , \sample_internal[20][2] ,
         \sample_internal[20][1] , \sample_internal[20][0] ,
         \sample_internal[21][3] , \sample_internal[21][2] ,
         \sample_internal[21][1] , \sample_internal[21][0] ,
         \sample_internal[22][3] , \sample_internal[22][2] ,
         \sample_internal[22][1] , \sample_internal[22][0] ,
         \sample_internal[23][3] , \sample_internal[23][2] ,
         \sample_internal[23][1] , \sample_internal[23][0] ,
         \sample_internal[24][3] , \sample_internal[24][2] ,
         \sample_internal[24][1] , \sample_internal[24][0] ,
         \sample_internal[25][3] , \sample_internal[25][2] ,
         \sample_internal[25][1] , \sample_internal[25][0] ,
         \sample_internal[26][3] , \sample_internal[26][2] ,
         \sample_internal[26][1] , \sample_internal[26][0] ,
         \sample_internal[27][3] , \sample_internal[27][2] ,
         \sample_internal[27][1] , \sample_internal[27][0] ,
         \sample_internal[28][3] , \sample_internal[28][2] ,
         \sample_internal[28][1] , \sample_internal[28][0] ,
         \sample_internal[29][3] , \sample_internal[29][2] ,
         \sample_internal[29][1] , \sample_internal[29][0] ,
         \sample_internal[30][3] , \sample_internal[30][2] ,
         \sample_internal[30][1] , \sample_internal[30][0] ,
         \sample_internal[31][3] , \sample_internal[31][2] ,
         \sample_internal[31][1] , \sample_internal[31][0] ,
         \sample_internal[32][3] , \sample_internal[32][2] ,
         \sample_internal[32][1] , \sample_internal[32][0] ,
         \sample_internal[33][3] , \sample_internal[33][2] ,
         \sample_internal[33][1] , \sample_internal[33][0] ,
         \sample_internal[34][3] , \sample_internal[34][2] ,
         \sample_internal[34][1] , \sample_internal[34][0] ,
         \sample_internal[35][3] , \sample_internal[35][2] ,
         \sample_internal[35][1] , \sample_internal[35][0] ,
         \sample_internal[36][3] , \sample_internal[36][2] ,
         \sample_internal[36][1] , \sample_internal[36][0] ,
         \sample_internal[37][3] , \sample_internal[37][2] ,
         \sample_internal[37][1] , \sample_internal[37][0] ,
         \sample_internal[38][3] , \sample_internal[38][2] ,
         \sample_internal[38][1] , \sample_internal[38][0] ,
         \sample_internal[39][3] , \sample_internal[39][2] ,
         \sample_internal[39][1] , \sample_internal[39][0] ,
         \sample_internal[40][3] , \sample_internal[40][2] ,
         \sample_internal[40][1] , \sample_internal[40][0] ,
         \sample_internal[41][3] , \sample_internal[41][2] ,
         \sample_internal[41][1] , \sample_internal[41][0] ,
         \sample_internal[42][3] , \sample_internal[42][2] ,
         \sample_internal[42][1] , \sample_internal[42][0] ,
         \sample_internal[43][3] , \sample_internal[43][2] ,
         \sample_internal[43][1] , \sample_internal[43][0] ,
         \sample_internal[44][3] , \sample_internal[44][2] ,
         \sample_internal[44][1] , \sample_internal[44][0] ,
         \sample_internal[45][3] , \sample_internal[45][2] ,
         \sample_internal[45][1] , \sample_internal[45][0] ,
         \sample_internal[46][3] , \sample_internal[46][2] ,
         \sample_internal[46][1] , \sample_internal[46][0] ,
         \sample_internal[47][3] , \sample_internal[47][2] ,
         \sample_internal[47][1] , \sample_internal[47][0] ,
         \sample_internal[48][3] , \sample_internal[48][2] ,
         \sample_internal[48][1] , \sample_internal[48][0] ,
         \sample_internal[49][3] , \sample_internal[49][2] ,
         \sample_internal[49][1] , \sample_internal[49][0] ,
         \sample_internal[50][3] , \sample_internal[50][2] ,
         \sample_internal[50][1] , \sample_internal[50][0] ,
         \sample_internal[51][3] , \sample_internal[51][2] ,
         \sample_internal[51][1] , \sample_internal[51][0] ,
         \sample_internal[52][3] , \sample_internal[52][2] ,
         \sample_internal[52][1] , \sample_internal[52][0] ,
         \sample_internal[53][3] , \sample_internal[53][2] ,
         \sample_internal[53][1] , \sample_internal[53][0] ,
         \sample_internal[54][3] , \sample_internal[54][2] ,
         \sample_internal[54][1] , \sample_internal[54][0] ,
         \sample_internal[55][3] , \sample_internal[55][2] ,
         \sample_internal[55][1] , \sample_internal[55][0] ,
         \sample_internal[56][3] , \sample_internal[56][2] ,
         \sample_internal[56][1] , \sample_internal[56][0] ,
         \sample_internal[57][3] , \sample_internal[57][2] ,
         \sample_internal[57][1] , \sample_internal[57][0] ,
         \sample_internal[58][3] , \sample_internal[58][2] ,
         \sample_internal[58][1] , \sample_internal[58][0] ,
         \sample_internal[59][3] , \sample_internal[59][2] ,
         \sample_internal[59][1] , \sample_internal[59][0] ,
         \sample_internal[60][3] , \sample_internal[60][2] ,
         \sample_internal[60][1] , \sample_internal[60][0] ,
         \sample_internal[61][3] , \sample_internal[61][2] ,
         \sample_internal[61][1] , \sample_internal[61][0] ,
         \sample_internal[62][3] , \sample_internal[62][2] ,
         \sample_internal[62][1] , \sample_internal[62][0] ,
         \sample_internal[63][3] , \sample_internal[63][2] ,
         \sample_internal[63][1] , \sample_internal[63][0] ,
         \sample_internal[64][3] , \sample_internal[64][2] ,
         \sample_internal[64][1] , \sample_internal[64][0] ,
         \sample_internal[65][3] , \sample_internal[65][2] ,
         \sample_internal[65][1] , \sample_internal[65][0] ,
         \sample_internal[66][3] , \sample_internal[66][2] ,
         \sample_internal[66][1] , \sample_internal[66][0] ,
         \sample_internal[67][3] , \sample_internal[67][2] ,
         \sample_internal[67][1] , \sample_internal[67][0] ,
         \sample_internal[68][3] , \sample_internal[68][2] ,
         \sample_internal[68][1] , \sample_internal[68][0] ,
         \sample_internal[69][3] , \sample_internal[69][2] ,
         \sample_internal[69][1] , \sample_internal[69][0] ,
         \sample_internal[70][3] , \sample_internal[70][2] ,
         \sample_internal[70][1] , \sample_internal[70][0] ,
         \accum_internal[1][11] , \accum_internal[1][10] ,
         \accum_internal[1][9] , \accum_internal[1][8] ,
         \accum_internal[1][7] , \accum_internal[1][6] ,
         \accum_internal[1][5] , \accum_internal[1][4] ,
         \accum_internal[1][3] , \accum_internal[1][2] ,
         \accum_internal[1][1] , \accum_internal[1][0] ,
         \accum_internal[2][11] , \accum_internal[2][10] ,
         \accum_internal[2][9] , \accum_internal[2][8] ,
         \accum_internal[2][7] , \accum_internal[2][6] ,
         \accum_internal[2][5] , \accum_internal[2][4] ,
         \accum_internal[2][3] , \accum_internal[2][2] ,
         \accum_internal[2][1] , \accum_internal[2][0] ,
         \accum_internal[3][11] , \accum_internal[3][10] ,
         \accum_internal[3][9] , \accum_internal[3][8] ,
         \accum_internal[3][7] , \accum_internal[3][6] ,
         \accum_internal[3][5] , \accum_internal[3][4] ,
         \accum_internal[3][3] , \accum_internal[3][2] ,
         \accum_internal[3][1] , \accum_internal[3][0] ,
         \accum_internal[4][11] , \accum_internal[4][10] ,
         \accum_internal[4][9] , \accum_internal[4][8] ,
         \accum_internal[4][7] , \accum_internal[4][6] ,
         \accum_internal[4][5] , \accum_internal[4][4] ,
         \accum_internal[4][3] , \accum_internal[4][2] ,
         \accum_internal[4][1] , \accum_internal[4][0] ,
         \accum_internal[5][11] , \accum_internal[5][10] ,
         \accum_internal[5][9] , \accum_internal[5][8] ,
         \accum_internal[5][7] , \accum_internal[5][6] ,
         \accum_internal[5][5] , \accum_internal[5][4] ,
         \accum_internal[5][3] , \accum_internal[5][2] ,
         \accum_internal[5][1] , \accum_internal[5][0] ,
         \accum_internal[6][11] , \accum_internal[6][10] ,
         \accum_internal[6][9] , \accum_internal[6][8] ,
         \accum_internal[6][7] , \accum_internal[6][6] ,
         \accum_internal[6][5] , \accum_internal[6][4] ,
         \accum_internal[6][3] , \accum_internal[6][2] ,
         \accum_internal[6][1] , \accum_internal[6][0] ,
         \accum_internal[7][11] , \accum_internal[7][10] ,
         \accum_internal[7][9] , \accum_internal[7][8] ,
         \accum_internal[7][7] , \accum_internal[7][6] ,
         \accum_internal[7][5] , \accum_internal[7][4] ,
         \accum_internal[7][3] , \accum_internal[7][2] ,
         \accum_internal[7][1] , \accum_internal[7][0] ,
         \accum_internal[8][11] , \accum_internal[8][10] ,
         \accum_internal[8][9] , \accum_internal[8][8] ,
         \accum_internal[8][7] , \accum_internal[8][6] ,
         \accum_internal[8][5] , \accum_internal[8][4] ,
         \accum_internal[8][3] , \accum_internal[8][2] ,
         \accum_internal[8][1] , \accum_internal[8][0] ,
         \accum_internal[9][11] , \accum_internal[9][10] ,
         \accum_internal[9][9] , \accum_internal[9][8] ,
         \accum_internal[9][7] , \accum_internal[9][6] ,
         \accum_internal[9][5] , \accum_internal[9][4] ,
         \accum_internal[9][3] , \accum_internal[9][2] ,
         \accum_internal[9][1] , \accum_internal[9][0] ,
         \accum_internal[10][11] , \accum_internal[10][10] ,
         \accum_internal[10][9] , \accum_internal[10][8] ,
         \accum_internal[10][7] , \accum_internal[10][6] ,
         \accum_internal[10][5] , \accum_internal[10][4] ,
         \accum_internal[10][3] , \accum_internal[10][2] ,
         \accum_internal[10][1] , \accum_internal[10][0] ,
         \accum_internal[11][11] , \accum_internal[11][10] ,
         \accum_internal[11][9] , \accum_internal[11][8] ,
         \accum_internal[11][7] , \accum_internal[11][6] ,
         \accum_internal[11][5] , \accum_internal[11][4] ,
         \accum_internal[11][3] , \accum_internal[11][2] ,
         \accum_internal[11][1] , \accum_internal[11][0] ,
         \accum_internal[12][11] , \accum_internal[12][10] ,
         \accum_internal[12][9] , \accum_internal[12][8] ,
         \accum_internal[12][7] , \accum_internal[12][6] ,
         \accum_internal[12][5] , \accum_internal[12][4] ,
         \accum_internal[12][3] , \accum_internal[12][2] ,
         \accum_internal[12][1] , \accum_internal[12][0] ,
         \accum_internal[13][11] , \accum_internal[13][10] ,
         \accum_internal[13][9] , \accum_internal[13][8] ,
         \accum_internal[13][7] , \accum_internal[13][6] ,
         \accum_internal[13][5] , \accum_internal[13][4] ,
         \accum_internal[13][3] , \accum_internal[13][2] ,
         \accum_internal[13][1] , \accum_internal[13][0] ,
         \accum_internal[14][11] , \accum_internal[14][10] ,
         \accum_internal[14][9] , \accum_internal[14][8] ,
         \accum_internal[14][7] , \accum_internal[14][6] ,
         \accum_internal[14][5] , \accum_internal[14][4] ,
         \accum_internal[14][3] , \accum_internal[14][2] ,
         \accum_internal[14][1] , \accum_internal[14][0] ,
         \accum_internal[15][11] , \accum_internal[15][10] ,
         \accum_internal[15][9] , \accum_internal[15][8] ,
         \accum_internal[15][7] , \accum_internal[15][6] ,
         \accum_internal[15][5] , \accum_internal[15][4] ,
         \accum_internal[15][3] , \accum_internal[15][2] ,
         \accum_internal[15][1] , \accum_internal[15][0] ,
         \accum_internal[16][11] , \accum_internal[16][10] ,
         \accum_internal[16][9] , \accum_internal[16][8] ,
         \accum_internal[16][7] , \accum_internal[16][6] ,
         \accum_internal[16][5] , \accum_internal[16][4] ,
         \accum_internal[16][3] , \accum_internal[16][2] ,
         \accum_internal[16][1] , \accum_internal[16][0] ,
         \accum_internal[17][11] , \accum_internal[17][10] ,
         \accum_internal[17][9] , \accum_internal[17][8] ,
         \accum_internal[17][7] , \accum_internal[17][6] ,
         \accum_internal[17][5] , \accum_internal[17][4] ,
         \accum_internal[17][3] , \accum_internal[17][2] ,
         \accum_internal[17][1] , \accum_internal[17][0] ,
         \accum_internal[18][11] , \accum_internal[18][10] ,
         \accum_internal[18][9] , \accum_internal[18][8] ,
         \accum_internal[18][7] , \accum_internal[18][6] ,
         \accum_internal[18][5] , \accum_internal[18][4] ,
         \accum_internal[18][3] , \accum_internal[18][2] ,
         \accum_internal[18][1] , \accum_internal[18][0] ,
         \accum_internal[19][11] , \accum_internal[19][10] ,
         \accum_internal[19][9] , \accum_internal[19][8] ,
         \accum_internal[19][7] , \accum_internal[19][6] ,
         \accum_internal[19][5] , \accum_internal[19][4] ,
         \accum_internal[19][3] , \accum_internal[19][2] ,
         \accum_internal[19][1] , \accum_internal[19][0] ,
         \accum_internal[20][11] , \accum_internal[20][10] ,
         \accum_internal[20][9] , \accum_internal[20][8] ,
         \accum_internal[20][7] , \accum_internal[20][6] ,
         \accum_internal[20][5] , \accum_internal[20][4] ,
         \accum_internal[20][3] , \accum_internal[20][2] ,
         \accum_internal[20][1] , \accum_internal[20][0] ,
         \accum_internal[21][11] , \accum_internal[21][10] ,
         \accum_internal[21][9] , \accum_internal[21][8] ,
         \accum_internal[21][7] , \accum_internal[21][6] ,
         \accum_internal[21][5] , \accum_internal[21][4] ,
         \accum_internal[21][3] , \accum_internal[21][2] ,
         \accum_internal[21][1] , \accum_internal[21][0] ,
         \accum_internal[22][11] , \accum_internal[22][10] ,
         \accum_internal[22][9] , \accum_internal[22][8] ,
         \accum_internal[22][7] , \accum_internal[22][6] ,
         \accum_internal[22][5] , \accum_internal[22][4] ,
         \accum_internal[22][3] , \accum_internal[22][2] ,
         \accum_internal[22][1] , \accum_internal[22][0] ,
         \accum_internal[23][11] , \accum_internal[23][10] ,
         \accum_internal[23][9] , \accum_internal[23][8] ,
         \accum_internal[23][7] , \accum_internal[23][6] ,
         \accum_internal[23][5] , \accum_internal[23][4] ,
         \accum_internal[23][3] , \accum_internal[23][2] ,
         \accum_internal[23][1] , \accum_internal[23][0] ,
         \accum_internal[24][11] , \accum_internal[24][10] ,
         \accum_internal[24][9] , \accum_internal[24][8] ,
         \accum_internal[24][7] , \accum_internal[24][6] ,
         \accum_internal[24][5] , \accum_internal[24][4] ,
         \accum_internal[24][3] , \accum_internal[24][2] ,
         \accum_internal[24][1] , \accum_internal[24][0] ,
         \accum_internal[25][11] , \accum_internal[25][10] ,
         \accum_internal[25][9] , \accum_internal[25][8] ,
         \accum_internal[25][7] , \accum_internal[25][6] ,
         \accum_internal[25][5] , \accum_internal[25][4] ,
         \accum_internal[25][3] , \accum_internal[25][2] ,
         \accum_internal[25][1] , \accum_internal[25][0] ,
         \accum_internal[26][11] , \accum_internal[26][10] ,
         \accum_internal[26][9] , \accum_internal[26][8] ,
         \accum_internal[26][7] , \accum_internal[26][6] ,
         \accum_internal[26][5] , \accum_internal[26][4] ,
         \accum_internal[26][3] , \accum_internal[26][2] ,
         \accum_internal[26][1] , \accum_internal[26][0] ,
         \accum_internal[27][11] , \accum_internal[27][10] ,
         \accum_internal[27][9] , \accum_internal[27][8] ,
         \accum_internal[27][7] , \accum_internal[27][6] ,
         \accum_internal[27][5] , \accum_internal[27][4] ,
         \accum_internal[27][3] , \accum_internal[27][2] ,
         \accum_internal[27][1] , \accum_internal[27][0] ,
         \accum_internal[28][11] , \accum_internal[28][10] ,
         \accum_internal[28][9] , \accum_internal[28][8] ,
         \accum_internal[28][7] , \accum_internal[28][6] ,
         \accum_internal[28][5] , \accum_internal[28][4] ,
         \accum_internal[28][3] , \accum_internal[28][2] ,
         \accum_internal[28][1] , \accum_internal[28][0] ,
         \accum_internal[29][11] , \accum_internal[29][10] ,
         \accum_internal[29][9] , \accum_internal[29][8] ,
         \accum_internal[29][7] , \accum_internal[29][6] ,
         \accum_internal[29][5] , \accum_internal[29][4] ,
         \accum_internal[29][3] , \accum_internal[29][2] ,
         \accum_internal[29][1] , \accum_internal[29][0] ,
         \accum_internal[30][11] , \accum_internal[30][10] ,
         \accum_internal[30][9] , \accum_internal[30][8] ,
         \accum_internal[30][7] , \accum_internal[30][6] ,
         \accum_internal[30][5] , \accum_internal[30][4] ,
         \accum_internal[30][3] , \accum_internal[30][2] ,
         \accum_internal[30][1] , \accum_internal[30][0] ,
         \accum_internal[31][11] , \accum_internal[31][10] ,
         \accum_internal[31][9] , \accum_internal[31][8] ,
         \accum_internal[31][7] , \accum_internal[31][6] ,
         \accum_internal[31][5] , \accum_internal[31][4] ,
         \accum_internal[31][3] , \accum_internal[31][2] ,
         \accum_internal[31][1] , \accum_internal[31][0] ,
         \accum_internal[32][11] , \accum_internal[32][10] ,
         \accum_internal[32][9] , \accum_internal[32][8] ,
         \accum_internal[32][7] , \accum_internal[32][6] ,
         \accum_internal[32][5] , \accum_internal[32][4] ,
         \accum_internal[32][3] , \accum_internal[32][2] ,
         \accum_internal[32][1] , \accum_internal[32][0] ,
         \accum_internal[33][11] , \accum_internal[33][10] ,
         \accum_internal[33][9] , \accum_internal[33][8] ,
         \accum_internal[33][7] , \accum_internal[33][6] ,
         \accum_internal[33][5] , \accum_internal[33][4] ,
         \accum_internal[33][3] , \accum_internal[33][2] ,
         \accum_internal[33][1] , \accum_internal[33][0] ,
         \accum_internal[34][11] , \accum_internal[34][10] ,
         \accum_internal[34][9] , \accum_internal[34][8] ,
         \accum_internal[34][7] , \accum_internal[34][6] ,
         \accum_internal[34][5] , \accum_internal[34][4] ,
         \accum_internal[34][3] , \accum_internal[34][2] ,
         \accum_internal[34][1] , \accum_internal[34][0] ,
         \accum_internal[35][11] , \accum_internal[35][10] ,
         \accum_internal[35][9] , \accum_internal[35][8] ,
         \accum_internal[35][7] , \accum_internal[35][6] ,
         \accum_internal[35][5] , \accum_internal[35][4] ,
         \accum_internal[35][3] , \accum_internal[35][2] ,
         \accum_internal[35][1] , \accum_internal[35][0] ,
         \accum_internal[36][11] , \accum_internal[36][10] ,
         \accum_internal[36][9] , \accum_internal[36][8] ,
         \accum_internal[36][7] , \accum_internal[36][6] ,
         \accum_internal[36][5] , \accum_internal[36][4] ,
         \accum_internal[36][3] , \accum_internal[36][2] ,
         \accum_internal[36][1] , \accum_internal[36][0] ,
         \accum_internal[37][11] , \accum_internal[37][10] ,
         \accum_internal[37][9] , \accum_internal[37][8] ,
         \accum_internal[37][7] , \accum_internal[37][6] ,
         \accum_internal[37][5] , \accum_internal[37][4] ,
         \accum_internal[37][3] , \accum_internal[37][2] ,
         \accum_internal[37][1] , \accum_internal[37][0] ,
         \accum_internal[38][11] , \accum_internal[38][10] ,
         \accum_internal[38][9] , \accum_internal[38][8] ,
         \accum_internal[38][7] , \accum_internal[38][6] ,
         \accum_internal[38][5] , \accum_internal[38][4] ,
         \accum_internal[38][3] , \accum_internal[38][2] ,
         \accum_internal[38][1] , \accum_internal[38][0] ,
         \accum_internal[39][11] , \accum_internal[39][10] ,
         \accum_internal[39][9] , \accum_internal[39][8] ,
         \accum_internal[39][7] , \accum_internal[39][6] ,
         \accum_internal[39][5] , \accum_internal[39][4] ,
         \accum_internal[39][3] , \accum_internal[39][2] ,
         \accum_internal[39][1] , \accum_internal[39][0] ,
         \accum_internal[40][11] , \accum_internal[40][10] ,
         \accum_internal[40][9] , \accum_internal[40][8] ,
         \accum_internal[40][7] , \accum_internal[40][6] ,
         \accum_internal[40][5] , \accum_internal[40][4] ,
         \accum_internal[40][3] , \accum_internal[40][2] ,
         \accum_internal[40][1] , \accum_internal[40][0] ,
         \accum_internal[41][11] , \accum_internal[41][10] ,
         \accum_internal[41][9] , \accum_internal[41][8] ,
         \accum_internal[41][7] , \accum_internal[41][6] ,
         \accum_internal[41][5] , \accum_internal[41][4] ,
         \accum_internal[41][3] , \accum_internal[41][2] ,
         \accum_internal[41][1] , \accum_internal[41][0] ,
         \accum_internal[42][11] , \accum_internal[42][10] ,
         \accum_internal[42][9] , \accum_internal[42][8] ,
         \accum_internal[42][7] , \accum_internal[42][6] ,
         \accum_internal[42][5] , \accum_internal[42][4] ,
         \accum_internal[42][3] , \accum_internal[42][2] ,
         \accum_internal[42][1] , \accum_internal[42][0] ,
         \accum_internal[43][11] , \accum_internal[43][10] ,
         \accum_internal[43][9] , \accum_internal[43][8] ,
         \accum_internal[43][7] , \accum_internal[43][6] ,
         \accum_internal[43][5] , \accum_internal[43][4] ,
         \accum_internal[43][3] , \accum_internal[43][2] ,
         \accum_internal[43][1] , \accum_internal[43][0] ,
         \accum_internal[44][11] , \accum_internal[44][10] ,
         \accum_internal[44][9] , \accum_internal[44][8] ,
         \accum_internal[44][7] , \accum_internal[44][6] ,
         \accum_internal[44][5] , \accum_internal[44][4] ,
         \accum_internal[44][3] , \accum_internal[44][2] ,
         \accum_internal[44][1] , \accum_internal[44][0] ,
         \accum_internal[45][11] , \accum_internal[45][10] ,
         \accum_internal[45][9] , \accum_internal[45][8] ,
         \accum_internal[45][7] , \accum_internal[45][6] ,
         \accum_internal[45][5] , \accum_internal[45][4] ,
         \accum_internal[45][3] , \accum_internal[45][2] ,
         \accum_internal[45][1] , \accum_internal[45][0] ,
         \accum_internal[46][11] , \accum_internal[46][10] ,
         \accum_internal[46][9] , \accum_internal[46][8] ,
         \accum_internal[46][7] , \accum_internal[46][6] ,
         \accum_internal[46][5] , \accum_internal[46][4] ,
         \accum_internal[46][3] , \accum_internal[46][2] ,
         \accum_internal[46][1] , \accum_internal[46][0] ,
         \accum_internal[47][11] , \accum_internal[47][10] ,
         \accum_internal[47][9] , \accum_internal[47][8] ,
         \accum_internal[47][7] , \accum_internal[47][6] ,
         \accum_internal[47][5] , \accum_internal[47][4] ,
         \accum_internal[47][3] , \accum_internal[47][2] ,
         \accum_internal[47][1] , \accum_internal[47][0] ,
         \accum_internal[48][11] , \accum_internal[48][10] ,
         \accum_internal[48][9] , \accum_internal[48][8] ,
         \accum_internal[48][7] , \accum_internal[48][6] ,
         \accum_internal[48][5] , \accum_internal[48][4] ,
         \accum_internal[48][3] , \accum_internal[48][2] ,
         \accum_internal[48][1] , \accum_internal[48][0] ,
         \accum_internal[49][11] , \accum_internal[49][10] ,
         \accum_internal[49][9] , \accum_internal[49][8] ,
         \accum_internal[49][7] , \accum_internal[49][6] ,
         \accum_internal[49][5] , \accum_internal[49][4] ,
         \accum_internal[49][3] , \accum_internal[49][2] ,
         \accum_internal[49][1] , \accum_internal[49][0] ,
         \accum_internal[50][11] , \accum_internal[50][10] ,
         \accum_internal[50][9] , \accum_internal[50][8] ,
         \accum_internal[50][7] , \accum_internal[50][6] ,
         \accum_internal[50][5] , \accum_internal[50][4] ,
         \accum_internal[50][3] , \accum_internal[50][2] ,
         \accum_internal[50][1] , \accum_internal[50][0] ,
         \accum_internal[51][11] , \accum_internal[51][10] ,
         \accum_internal[51][9] , \accum_internal[51][8] ,
         \accum_internal[51][7] , \accum_internal[51][6] ,
         \accum_internal[51][5] , \accum_internal[51][4] ,
         \accum_internal[51][3] , \accum_internal[51][2] ,
         \accum_internal[51][1] , \accum_internal[51][0] ,
         \accum_internal[52][11] , \accum_internal[52][10] ,
         \accum_internal[52][9] , \accum_internal[52][8] ,
         \accum_internal[52][7] , \accum_internal[52][6] ,
         \accum_internal[52][5] , \accum_internal[52][4] ,
         \accum_internal[52][3] , \accum_internal[52][2] ,
         \accum_internal[52][1] , \accum_internal[52][0] ,
         \accum_internal[53][11] , \accum_internal[53][10] ,
         \accum_internal[53][9] , \accum_internal[53][8] ,
         \accum_internal[53][7] , \accum_internal[53][6] ,
         \accum_internal[53][5] , \accum_internal[53][4] ,
         \accum_internal[53][3] , \accum_internal[53][2] ,
         \accum_internal[53][1] , \accum_internal[53][0] ,
         \accum_internal[54][11] , \accum_internal[54][10] ,
         \accum_internal[54][9] , \accum_internal[54][8] ,
         \accum_internal[54][7] , \accum_internal[54][6] ,
         \accum_internal[54][5] , \accum_internal[54][4] ,
         \accum_internal[54][3] , \accum_internal[54][2] ,
         \accum_internal[54][1] , \accum_internal[54][0] ,
         \accum_internal[55][11] , \accum_internal[55][10] ,
         \accum_internal[55][9] , \accum_internal[55][8] ,
         \accum_internal[55][7] , \accum_internal[55][6] ,
         \accum_internal[55][5] , \accum_internal[55][4] ,
         \accum_internal[55][3] , \accum_internal[55][2] ,
         \accum_internal[55][1] , \accum_internal[55][0] ,
         \accum_internal[56][11] , \accum_internal[56][10] ,
         \accum_internal[56][9] , \accum_internal[56][8] ,
         \accum_internal[56][7] , \accum_internal[56][6] ,
         \accum_internal[56][5] , \accum_internal[56][4] ,
         \accum_internal[56][3] , \accum_internal[56][2] ,
         \accum_internal[56][1] , \accum_internal[56][0] ,
         \accum_internal[57][11] , \accum_internal[57][10] ,
         \accum_internal[57][9] , \accum_internal[57][8] ,
         \accum_internal[57][7] , \accum_internal[57][6] ,
         \accum_internal[57][5] , \accum_internal[57][4] ,
         \accum_internal[57][3] , \accum_internal[57][2] ,
         \accum_internal[57][1] , \accum_internal[57][0] ,
         \accum_internal[58][11] , \accum_internal[58][10] ,
         \accum_internal[58][9] , \accum_internal[58][8] ,
         \accum_internal[58][7] , \accum_internal[58][6] ,
         \accum_internal[58][5] , \accum_internal[58][4] ,
         \accum_internal[58][3] , \accum_internal[58][2] ,
         \accum_internal[58][1] , \accum_internal[58][0] ,
         \accum_internal[59][11] , \accum_internal[59][10] ,
         \accum_internal[59][9] , \accum_internal[59][8] ,
         \accum_internal[59][7] , \accum_internal[59][6] ,
         \accum_internal[59][5] , \accum_internal[59][4] ,
         \accum_internal[59][3] , \accum_internal[59][2] ,
         \accum_internal[59][1] , \accum_internal[59][0] ,
         \accum_internal[60][11] , \accum_internal[60][10] ,
         \accum_internal[60][9] , \accum_internal[60][8] ,
         \accum_internal[60][7] , \accum_internal[60][6] ,
         \accum_internal[60][5] , \accum_internal[60][4] ,
         \accum_internal[60][3] , \accum_internal[60][2] ,
         \accum_internal[60][1] , \accum_internal[60][0] ,
         \accum_internal[61][11] , \accum_internal[61][10] ,
         \accum_internal[61][9] , \accum_internal[61][8] ,
         \accum_internal[61][7] , \accum_internal[61][6] ,
         \accum_internal[61][5] , \accum_internal[61][4] ,
         \accum_internal[61][3] , \accum_internal[61][2] ,
         \accum_internal[61][1] , \accum_internal[61][0] ,
         \accum_internal[62][11] , \accum_internal[62][10] ,
         \accum_internal[62][9] , \accum_internal[62][8] ,
         \accum_internal[62][7] , \accum_internal[62][6] ,
         \accum_internal[62][5] , \accum_internal[62][4] ,
         \accum_internal[62][3] , \accum_internal[62][2] ,
         \accum_internal[62][1] , \accum_internal[62][0] ,
         \accum_internal[63][11] , \accum_internal[63][10] ,
         \accum_internal[63][9] , \accum_internal[63][8] ,
         \accum_internal[63][7] , \accum_internal[63][6] ,
         \accum_internal[63][5] , \accum_internal[63][4] ,
         \accum_internal[63][3] , \accum_internal[63][2] ,
         \accum_internal[63][1] , \accum_internal[63][0] ,
         \accum_internal[64][11] , \accum_internal[64][10] ,
         \accum_internal[64][9] , \accum_internal[64][8] ,
         \accum_internal[64][7] , \accum_internal[64][6] ,
         \accum_internal[64][5] , \accum_internal[64][4] ,
         \accum_internal[64][3] , \accum_internal[64][2] ,
         \accum_internal[64][1] , \accum_internal[64][0] ,
         \accum_internal[65][11] , \accum_internal[65][10] ,
         \accum_internal[65][9] , \accum_internal[65][8] ,
         \accum_internal[65][7] , \accum_internal[65][6] ,
         \accum_internal[65][5] , \accum_internal[65][4] ,
         \accum_internal[65][3] , \accum_internal[65][2] ,
         \accum_internal[65][1] , \accum_internal[65][0] ,
         \accum_internal[66][11] , \accum_internal[66][10] ,
         \accum_internal[66][9] , \accum_internal[66][8] ,
         \accum_internal[66][7] , \accum_internal[66][6] ,
         \accum_internal[66][5] , \accum_internal[66][4] ,
         \accum_internal[66][3] , \accum_internal[66][2] ,
         \accum_internal[66][1] , \accum_internal[66][0] ,
         \accum_internal[67][11] , \accum_internal[67][10] ,
         \accum_internal[67][9] , \accum_internal[67][8] ,
         \accum_internal[67][7] , \accum_internal[67][6] ,
         \accum_internal[67][5] , \accum_internal[67][4] ,
         \accum_internal[67][3] , \accum_internal[67][2] ,
         \accum_internal[67][1] , \accum_internal[67][0] ,
         \accum_internal[68][11] , \accum_internal[68][10] ,
         \accum_internal[68][9] , \accum_internal[68][8] ,
         \accum_internal[68][7] , \accum_internal[68][6] ,
         \accum_internal[68][5] , \accum_internal[68][4] ,
         \accum_internal[68][3] , \accum_internal[68][2] ,
         \accum_internal[68][1] , \accum_internal[68][0] ,
         \accum_internal[69][11] , \accum_internal[69][10] ,
         \accum_internal[69][9] , \accum_internal[69][8] ,
         \accum_internal[69][7] , \accum_internal[69][6] ,
         \accum_internal[69][5] , \accum_internal[69][4] ,
         \accum_internal[69][3] , \accum_internal[69][2] ,
         \accum_internal[69][1] , \accum_internal[69][0] ,
         \accum_internal[70][11] , \accum_internal[70][10] ,
         \accum_internal[70][9] , \accum_internal[70][8] ,
         \accum_internal[70][7] , \accum_internal[70][6] ,
         \accum_internal[70][5] , \accum_internal[70][4] ,
         \accum_internal[70][3] , \accum_internal[70][2] ,
         \accum_internal[70][1] , \accum_internal[70][0] ;
  tri   clk;
  tri   coeff_read;
  tri   coeff_write;
  tri   [7:0] coeff_in;
  tri   [9:0] coeff_addr;
  tri   [7:0] coeff_read_out;
  tri   \coeff[0][7] ;
  tri   \coeff[0][6] ;
  tri   \coeff[0][5] ;
  tri   \coeff[0][4] ;
  tri   \coeff[0][3] ;
  tri   \coeff[0][2] ;
  tri   \coeff[0][1] ;
  tri   \coeff[0][0] ;
  tri   \coeff[1][7] ;
  tri   \coeff[1][6] ;
  tri   \coeff[1][5] ;
  tri   \coeff[1][4] ;
  tri   \coeff[1][3] ;
  tri   \coeff[1][2] ;
  tri   \coeff[1][1] ;
  tri   \coeff[1][0] ;
  tri   \coeff[2][7] ;
  tri   \coeff[2][6] ;
  tri   \coeff[2][5] ;
  tri   \coeff[2][4] ;
  tri   \coeff[2][3] ;
  tri   \coeff[2][2] ;
  tri   \coeff[2][1] ;
  tri   \coeff[2][0] ;
  tri   \coeff[3][7] ;
  tri   \coeff[3][6] ;
  tri   \coeff[3][5] ;
  tri   \coeff[3][4] ;
  tri   \coeff[3][3] ;
  tri   \coeff[3][2] ;
  tri   \coeff[3][1] ;
  tri   \coeff[3][0] ;
  tri   \coeff[4][7] ;
  tri   \coeff[4][6] ;
  tri   \coeff[4][5] ;
  tri   \coeff[4][4] ;
  tri   \coeff[4][3] ;
  tri   \coeff[4][2] ;
  tri   \coeff[4][1] ;
  tri   \coeff[4][0] ;
  tri   \coeff[5][7] ;
  tri   \coeff[5][6] ;
  tri   \coeff[5][5] ;
  tri   \coeff[5][4] ;
  tri   \coeff[5][3] ;
  tri   \coeff[5][2] ;
  tri   \coeff[5][1] ;
  tri   \coeff[5][0] ;
  tri   \coeff[6][7] ;
  tri   \coeff[6][6] ;
  tri   \coeff[6][5] ;
  tri   \coeff[6][4] ;
  tri   \coeff[6][3] ;
  tri   \coeff[6][2] ;
  tri   \coeff[6][1] ;
  tri   \coeff[6][0] ;
  tri   \coeff[7][7] ;
  tri   \coeff[7][6] ;
  tri   \coeff[7][5] ;
  tri   \coeff[7][4] ;
  tri   \coeff[7][3] ;
  tri   \coeff[7][2] ;
  tri   \coeff[7][1] ;
  tri   \coeff[7][0] ;
  tri   \coeff[8][7] ;
  tri   \coeff[8][6] ;
  tri   \coeff[8][5] ;
  tri   \coeff[8][4] ;
  tri   \coeff[8][3] ;
  tri   \coeff[8][2] ;
  tri   \coeff[8][1] ;
  tri   \coeff[8][0] ;
  tri   \coeff[9][7] ;
  tri   \coeff[9][6] ;
  tri   \coeff[9][5] ;
  tri   \coeff[9][4] ;
  tri   \coeff[9][3] ;
  tri   \coeff[9][2] ;
  tri   \coeff[9][1] ;
  tri   \coeff[9][0] ;
  tri   \coeff[10][7] ;
  tri   \coeff[10][6] ;
  tri   \coeff[10][5] ;
  tri   \coeff[10][4] ;
  tri   \coeff[10][3] ;
  tri   \coeff[10][2] ;
  tri   \coeff[10][1] ;
  tri   \coeff[10][0] ;
  tri   \coeff[11][7] ;
  tri   \coeff[11][6] ;
  tri   \coeff[11][5] ;
  tri   \coeff[11][4] ;
  tri   \coeff[11][3] ;
  tri   \coeff[11][2] ;
  tri   \coeff[11][1] ;
  tri   \coeff[11][0] ;
  tri   \coeff[12][7] ;
  tri   \coeff[12][6] ;
  tri   \coeff[12][5] ;
  tri   \coeff[12][4] ;
  tri   \coeff[12][3] ;
  tri   \coeff[12][2] ;
  tri   \coeff[12][1] ;
  tri   \coeff[12][0] ;
  tri   \coeff[13][7] ;
  tri   \coeff[13][6] ;
  tri   \coeff[13][5] ;
  tri   \coeff[13][4] ;
  tri   \coeff[13][3] ;
  tri   \coeff[13][2] ;
  tri   \coeff[13][1] ;
  tri   \coeff[13][0] ;
  tri   \coeff[14][7] ;
  tri   \coeff[14][6] ;
  tri   \coeff[14][5] ;
  tri   \coeff[14][4] ;
  tri   \coeff[14][3] ;
  tri   \coeff[14][2] ;
  tri   \coeff[14][1] ;
  tri   \coeff[14][0] ;
  tri   \coeff[15][7] ;
  tri   \coeff[15][6] ;
  tri   \coeff[15][5] ;
  tri   \coeff[15][4] ;
  tri   \coeff[15][3] ;
  tri   \coeff[15][2] ;
  tri   \coeff[15][1] ;
  tri   \coeff[15][0] ;
  tri   \coeff[16][7] ;
  tri   \coeff[16][6] ;
  tri   \coeff[16][5] ;
  tri   \coeff[16][4] ;
  tri   \coeff[16][3] ;
  tri   \coeff[16][2] ;
  tri   \coeff[16][1] ;
  tri   \coeff[16][0] ;
  tri   \coeff[17][7] ;
  tri   \coeff[17][6] ;
  tri   \coeff[17][5] ;
  tri   \coeff[17][4] ;
  tri   \coeff[17][3] ;
  tri   \coeff[17][2] ;
  tri   \coeff[17][1] ;
  tri   \coeff[17][0] ;
  tri   \coeff[18][7] ;
  tri   \coeff[18][6] ;
  tri   \coeff[18][5] ;
  tri   \coeff[18][4] ;
  tri   \coeff[18][3] ;
  tri   \coeff[18][2] ;
  tri   \coeff[18][1] ;
  tri   \coeff[18][0] ;
  tri   \coeff[19][7] ;
  tri   \coeff[19][6] ;
  tri   \coeff[19][5] ;
  tri   \coeff[19][4] ;
  tri   \coeff[19][3] ;
  tri   \coeff[19][2] ;
  tri   \coeff[19][1] ;
  tri   \coeff[19][0] ;
  tri   \coeff[20][7] ;
  tri   \coeff[20][6] ;
  tri   \coeff[20][5] ;
  tri   \coeff[20][4] ;
  tri   \coeff[20][3] ;
  tri   \coeff[20][2] ;
  tri   \coeff[20][1] ;
  tri   \coeff[20][0] ;
  tri   \coeff[21][7] ;
  tri   \coeff[21][6] ;
  tri   \coeff[21][5] ;
  tri   \coeff[21][4] ;
  tri   \coeff[21][3] ;
  tri   \coeff[21][2] ;
  tri   \coeff[21][1] ;
  tri   \coeff[21][0] ;
  tri   \coeff[22][7] ;
  tri   \coeff[22][6] ;
  tri   \coeff[22][5] ;
  tri   \coeff[22][4] ;
  tri   \coeff[22][3] ;
  tri   \coeff[22][2] ;
  tri   \coeff[22][1] ;
  tri   \coeff[22][0] ;
  tri   \coeff[23][7] ;
  tri   \coeff[23][6] ;
  tri   \coeff[23][5] ;
  tri   \coeff[23][4] ;
  tri   \coeff[23][3] ;
  tri   \coeff[23][2] ;
  tri   \coeff[23][1] ;
  tri   \coeff[23][0] ;
  tri   \coeff[24][7] ;
  tri   \coeff[24][6] ;
  tri   \coeff[24][5] ;
  tri   \coeff[24][4] ;
  tri   \coeff[24][3] ;
  tri   \coeff[24][2] ;
  tri   \coeff[24][1] ;
  tri   \coeff[24][0] ;
  tri   \coeff[25][7] ;
  tri   \coeff[25][6] ;
  tri   \coeff[25][5] ;
  tri   \coeff[25][4] ;
  tri   \coeff[25][3] ;
  tri   \coeff[25][2] ;
  tri   \coeff[25][1] ;
  tri   \coeff[25][0] ;
  tri   \coeff[26][7] ;
  tri   \coeff[26][6] ;
  tri   \coeff[26][5] ;
  tri   \coeff[26][4] ;
  tri   \coeff[26][3] ;
  tri   \coeff[26][2] ;
  tri   \coeff[26][1] ;
  tri   \coeff[26][0] ;
  tri   \coeff[27][7] ;
  tri   \coeff[27][6] ;
  tri   \coeff[27][5] ;
  tri   \coeff[27][4] ;
  tri   \coeff[27][3] ;
  tri   \coeff[27][2] ;
  tri   \coeff[27][1] ;
  tri   \coeff[27][0] ;
  tri   \coeff[28][7] ;
  tri   \coeff[28][6] ;
  tri   \coeff[28][5] ;
  tri   \coeff[28][4] ;
  tri   \coeff[28][3] ;
  tri   \coeff[28][2] ;
  tri   \coeff[28][1] ;
  tri   \coeff[28][0] ;
  tri   \coeff[29][7] ;
  tri   \coeff[29][6] ;
  tri   \coeff[29][5] ;
  tri   \coeff[29][4] ;
  tri   \coeff[29][3] ;
  tri   \coeff[29][2] ;
  tri   \coeff[29][1] ;
  tri   \coeff[29][0] ;
  tri   \coeff[30][7] ;
  tri   \coeff[30][6] ;
  tri   \coeff[30][5] ;
  tri   \coeff[30][4] ;
  tri   \coeff[30][3] ;
  tri   \coeff[30][2] ;
  tri   \coeff[30][1] ;
  tri   \coeff[30][0] ;
  tri   \coeff[31][7] ;
  tri   \coeff[31][6] ;
  tri   \coeff[31][5] ;
  tri   \coeff[31][4] ;
  tri   \coeff[31][3] ;
  tri   \coeff[31][2] ;
  tri   \coeff[31][1] ;
  tri   \coeff[31][0] ;
  tri   \coeff[32][7] ;
  tri   \coeff[32][6] ;
  tri   \coeff[32][5] ;
  tri   \coeff[32][4] ;
  tri   \coeff[32][3] ;
  tri   \coeff[32][2] ;
  tri   \coeff[32][1] ;
  tri   \coeff[32][0] ;
  tri   \coeff[33][7] ;
  tri   \coeff[33][6] ;
  tri   \coeff[33][5] ;
  tri   \coeff[33][4] ;
  tri   \coeff[33][3] ;
  tri   \coeff[33][2] ;
  tri   \coeff[33][1] ;
  tri   \coeff[33][0] ;
  tri   \coeff[34][7] ;
  tri   \coeff[34][6] ;
  tri   \coeff[34][5] ;
  tri   \coeff[34][4] ;
  tri   \coeff[34][3] ;
  tri   \coeff[34][2] ;
  tri   \coeff[34][1] ;
  tri   \coeff[34][0] ;
  tri   \coeff[35][7] ;
  tri   \coeff[35][6] ;
  tri   \coeff[35][5] ;
  tri   \coeff[35][4] ;
  tri   \coeff[35][3] ;
  tri   \coeff[35][2] ;
  tri   \coeff[35][1] ;
  tri   \coeff[35][0] ;
  tri   \coeff[36][7] ;
  tri   \coeff[36][6] ;
  tri   \coeff[36][5] ;
  tri   \coeff[36][4] ;
  tri   \coeff[36][3] ;
  tri   \coeff[36][2] ;
  tri   \coeff[36][1] ;
  tri   \coeff[36][0] ;
  tri   \coeff[37][7] ;
  tri   \coeff[37][6] ;
  tri   \coeff[37][5] ;
  tri   \coeff[37][4] ;
  tri   \coeff[37][3] ;
  tri   \coeff[37][2] ;
  tri   \coeff[37][1] ;
  tri   \coeff[37][0] ;
  tri   \coeff[38][7] ;
  tri   \coeff[38][6] ;
  tri   \coeff[38][5] ;
  tri   \coeff[38][4] ;
  tri   \coeff[38][3] ;
  tri   \coeff[38][2] ;
  tri   \coeff[38][1] ;
  tri   \coeff[38][0] ;
  tri   \coeff[39][7] ;
  tri   \coeff[39][6] ;
  tri   \coeff[39][5] ;
  tri   \coeff[39][4] ;
  tri   \coeff[39][3] ;
  tri   \coeff[39][2] ;
  tri   \coeff[39][1] ;
  tri   \coeff[39][0] ;
  tri   \coeff[40][7] ;
  tri   \coeff[40][6] ;
  tri   \coeff[40][5] ;
  tri   \coeff[40][4] ;
  tri   \coeff[40][3] ;
  tri   \coeff[40][2] ;
  tri   \coeff[40][1] ;
  tri   \coeff[40][0] ;
  tri   \coeff[41][7] ;
  tri   \coeff[41][6] ;
  tri   \coeff[41][5] ;
  tri   \coeff[41][4] ;
  tri   \coeff[41][3] ;
  tri   \coeff[41][2] ;
  tri   \coeff[41][1] ;
  tri   \coeff[41][0] ;
  tri   \coeff[42][7] ;
  tri   \coeff[42][6] ;
  tri   \coeff[42][5] ;
  tri   \coeff[42][4] ;
  tri   \coeff[42][3] ;
  tri   \coeff[42][2] ;
  tri   \coeff[42][1] ;
  tri   \coeff[42][0] ;
  tri   \coeff[43][7] ;
  tri   \coeff[43][6] ;
  tri   \coeff[43][5] ;
  tri   \coeff[43][4] ;
  tri   \coeff[43][3] ;
  tri   \coeff[43][2] ;
  tri   \coeff[43][1] ;
  tri   \coeff[43][0] ;
  tri   \coeff[44][7] ;
  tri   \coeff[44][6] ;
  tri   \coeff[44][5] ;
  tri   \coeff[44][4] ;
  tri   \coeff[44][3] ;
  tri   \coeff[44][2] ;
  tri   \coeff[44][1] ;
  tri   \coeff[44][0] ;
  tri   \coeff[45][7] ;
  tri   \coeff[45][6] ;
  tri   \coeff[45][5] ;
  tri   \coeff[45][4] ;
  tri   \coeff[45][3] ;
  tri   \coeff[45][2] ;
  tri   \coeff[45][1] ;
  tri   \coeff[45][0] ;
  tri   \coeff[46][7] ;
  tri   \coeff[46][6] ;
  tri   \coeff[46][5] ;
  tri   \coeff[46][4] ;
  tri   \coeff[46][3] ;
  tri   \coeff[46][2] ;
  tri   \coeff[46][1] ;
  tri   \coeff[46][0] ;
  tri   \coeff[47][7] ;
  tri   \coeff[47][6] ;
  tri   \coeff[47][5] ;
  tri   \coeff[47][4] ;
  tri   \coeff[47][3] ;
  tri   \coeff[47][2] ;
  tri   \coeff[47][1] ;
  tri   \coeff[47][0] ;
  tri   \coeff[48][7] ;
  tri   \coeff[48][6] ;
  tri   \coeff[48][5] ;
  tri   \coeff[48][4] ;
  tri   \coeff[48][3] ;
  tri   \coeff[48][2] ;
  tri   \coeff[48][1] ;
  tri   \coeff[48][0] ;
  tri   \coeff[49][7] ;
  tri   \coeff[49][6] ;
  tri   \coeff[49][5] ;
  tri   \coeff[49][4] ;
  tri   \coeff[49][3] ;
  tri   \coeff[49][2] ;
  tri   \coeff[49][1] ;
  tri   \coeff[49][0] ;
  tri   \coeff[50][7] ;
  tri   \coeff[50][6] ;
  tri   \coeff[50][5] ;
  tri   \coeff[50][4] ;
  tri   \coeff[50][3] ;
  tri   \coeff[50][2] ;
  tri   \coeff[50][1] ;
  tri   \coeff[50][0] ;
  tri   \coeff[51][7] ;
  tri   \coeff[51][6] ;
  tri   \coeff[51][5] ;
  tri   \coeff[51][4] ;
  tri   \coeff[51][3] ;
  tri   \coeff[51][2] ;
  tri   \coeff[51][1] ;
  tri   \coeff[51][0] ;
  tri   \coeff[52][7] ;
  tri   \coeff[52][6] ;
  tri   \coeff[52][5] ;
  tri   \coeff[52][4] ;
  tri   \coeff[52][3] ;
  tri   \coeff[52][2] ;
  tri   \coeff[52][1] ;
  tri   \coeff[52][0] ;
  tri   \coeff[53][7] ;
  tri   \coeff[53][6] ;
  tri   \coeff[53][5] ;
  tri   \coeff[53][4] ;
  tri   \coeff[53][3] ;
  tri   \coeff[53][2] ;
  tri   \coeff[53][1] ;
  tri   \coeff[53][0] ;
  tri   \coeff[54][7] ;
  tri   \coeff[54][6] ;
  tri   \coeff[54][5] ;
  tri   \coeff[54][4] ;
  tri   \coeff[54][3] ;
  tri   \coeff[54][2] ;
  tri   \coeff[54][1] ;
  tri   \coeff[54][0] ;
  tri   \coeff[55][7] ;
  tri   \coeff[55][6] ;
  tri   \coeff[55][5] ;
  tri   \coeff[55][4] ;
  tri   \coeff[55][3] ;
  tri   \coeff[55][2] ;
  tri   \coeff[55][1] ;
  tri   \coeff[55][0] ;
  tri   \coeff[56][7] ;
  tri   \coeff[56][6] ;
  tri   \coeff[56][5] ;
  tri   \coeff[56][4] ;
  tri   \coeff[56][3] ;
  tri   \coeff[56][2] ;
  tri   \coeff[56][1] ;
  tri   \coeff[56][0] ;
  tri   \coeff[57][7] ;
  tri   \coeff[57][6] ;
  tri   \coeff[57][5] ;
  tri   \coeff[57][4] ;
  tri   \coeff[57][3] ;
  tri   \coeff[57][2] ;
  tri   \coeff[57][1] ;
  tri   \coeff[57][0] ;
  tri   \coeff[58][7] ;
  tri   \coeff[58][6] ;
  tri   \coeff[58][5] ;
  tri   \coeff[58][4] ;
  tri   \coeff[58][3] ;
  tri   \coeff[58][2] ;
  tri   \coeff[58][1] ;
  tri   \coeff[58][0] ;
  tri   \coeff[59][7] ;
  tri   \coeff[59][6] ;
  tri   \coeff[59][5] ;
  tri   \coeff[59][4] ;
  tri   \coeff[59][3] ;
  tri   \coeff[59][2] ;
  tri   \coeff[59][1] ;
  tri   \coeff[59][0] ;
  tri   \coeff[60][7] ;
  tri   \coeff[60][6] ;
  tri   \coeff[60][5] ;
  tri   \coeff[60][4] ;
  tri   \coeff[60][3] ;
  tri   \coeff[60][2] ;
  tri   \coeff[60][1] ;
  tri   \coeff[60][0] ;
  tri   \coeff[61][7] ;
  tri   \coeff[61][6] ;
  tri   \coeff[61][5] ;
  tri   \coeff[61][4] ;
  tri   \coeff[61][3] ;
  tri   \coeff[61][2] ;
  tri   \coeff[61][1] ;
  tri   \coeff[61][0] ;
  tri   \coeff[62][7] ;
  tri   \coeff[62][6] ;
  tri   \coeff[62][5] ;
  tri   \coeff[62][4] ;
  tri   \coeff[62][3] ;
  tri   \coeff[62][2] ;
  tri   \coeff[62][1] ;
  tri   \coeff[62][0] ;
  tri   \coeff[63][7] ;
  tri   \coeff[63][6] ;
  tri   \coeff[63][5] ;
  tri   \coeff[63][4] ;
  tri   \coeff[63][3] ;
  tri   \coeff[63][2] ;
  tri   \coeff[63][1] ;
  tri   \coeff[63][0] ;
  tri   \coeff[64][7] ;
  tri   \coeff[64][6] ;
  tri   \coeff[64][5] ;
  tri   \coeff[64][4] ;
  tri   \coeff[64][3] ;
  tri   \coeff[64][2] ;
  tri   \coeff[64][1] ;
  tri   \coeff[64][0] ;
  tri   \coeff[65][7] ;
  tri   \coeff[65][6] ;
  tri   \coeff[65][5] ;
  tri   \coeff[65][4] ;
  tri   \coeff[65][3] ;
  tri   \coeff[65][2] ;
  tri   \coeff[65][1] ;
  tri   \coeff[65][0] ;
  tri   \coeff[66][7] ;
  tri   \coeff[66][6] ;
  tri   \coeff[66][5] ;
  tri   \coeff[66][4] ;
  tri   \coeff[66][3] ;
  tri   \coeff[66][2] ;
  tri   \coeff[66][1] ;
  tri   \coeff[66][0] ;
  tri   \coeff[67][7] ;
  tri   \coeff[67][6] ;
  tri   \coeff[67][5] ;
  tri   \coeff[67][4] ;
  tri   \coeff[67][3] ;
  tri   \coeff[67][2] ;
  tri   \coeff[67][1] ;
  tri   \coeff[67][0] ;
  tri   \coeff[68][7] ;
  tri   \coeff[68][6] ;
  tri   \coeff[68][5] ;
  tri   \coeff[68][4] ;
  tri   \coeff[68][3] ;
  tri   \coeff[68][2] ;
  tri   \coeff[68][1] ;
  tri   \coeff[68][0] ;
  tri   \coeff[69][7] ;
  tri   \coeff[69][6] ;
  tri   \coeff[69][5] ;
  tri   \coeff[69][4] ;
  tri   \coeff[69][3] ;
  tri   \coeff[69][2] ;
  tri   \coeff[69][1] ;
  tri   \coeff[69][0] ;
  tri   \coeff[70][7] ;
  tri   \coeff[70][6] ;
  tri   \coeff[70][5] ;
  tri   \coeff[70][4] ;
  tri   \coeff[70][3] ;
  tri   \coeff[70][2] ;
  tri   \coeff[70][1] ;
  tri   \coeff[70][0] ;

  dsp_slice_70 \GEN_SLICE[0].u_fir_slice  ( .clk(clk), .sample_in(sample_in), 
        .accum_in({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0}), .coeff_in({\coeff[0][7] , \coeff[0][6] , \coeff[0][5] , 
        \coeff[0][4] , \coeff[0][3] , \coeff[0][2] , \coeff[0][1] , 
        \coeff[0][0] }), .sample_out({\sample_internal[1][3] , 
        \sample_internal[1][2] , \sample_internal[1][1] , 
        \sample_internal[1][0] }), .accum_out({\accum_internal[1][11] , 
        \accum_internal[1][10] , \accum_internal[1][9] , 
        \accum_internal[1][8] , \accum_internal[1][7] , \accum_internal[1][6] , 
        \accum_internal[1][5] , \accum_internal[1][4] , \accum_internal[1][3] , 
        \accum_internal[1][2] , \accum_internal[1][1] , \accum_internal[1][0] }) );
  dsp_slice_69 \GEN_SLICE[1].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[1][3] , \sample_internal[1][2] , 
        \sample_internal[1][1] , \sample_internal[1][0] }), .accum_in({
        \accum_internal[1][11] , \accum_internal[1][10] , 
        \accum_internal[1][9] , \accum_internal[1][8] , \accum_internal[1][7] , 
        \accum_internal[1][6] , \accum_internal[1][5] , \accum_internal[1][4] , 
        \accum_internal[1][3] , \accum_internal[1][2] , \accum_internal[1][1] , 
        \accum_internal[1][0] }), .coeff_in({\coeff[1][7] , \coeff[1][6] , 
        \coeff[1][5] , \coeff[1][4] , \coeff[1][3] , \coeff[1][2] , 
        \coeff[1][1] , \coeff[1][0] }), .sample_out({\sample_internal[2][3] , 
        \sample_internal[2][2] , \sample_internal[2][1] , 
        \sample_internal[2][0] }), .accum_out({\accum_internal[2][11] , 
        \accum_internal[2][10] , \accum_internal[2][9] , 
        \accum_internal[2][8] , \accum_internal[2][7] , \accum_internal[2][6] , 
        \accum_internal[2][5] , \accum_internal[2][4] , \accum_internal[2][3] , 
        \accum_internal[2][2] , \accum_internal[2][1] , \accum_internal[2][0] }) );
  dsp_slice_68 \GEN_SLICE[2].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[2][3] , \sample_internal[2][2] , 
        \sample_internal[2][1] , \sample_internal[2][0] }), .accum_in({
        \accum_internal[2][11] , \accum_internal[2][10] , 
        \accum_internal[2][9] , \accum_internal[2][8] , \accum_internal[2][7] , 
        \accum_internal[2][6] , \accum_internal[2][5] , \accum_internal[2][4] , 
        \accum_internal[2][3] , \accum_internal[2][2] , \accum_internal[2][1] , 
        \accum_internal[2][0] }), .coeff_in({\coeff[2][7] , \coeff[2][6] , 
        \coeff[2][5] , \coeff[2][4] , \coeff[2][3] , \coeff[2][2] , 
        \coeff[2][1] , \coeff[2][0] }), .sample_out({\sample_internal[3][3] , 
        \sample_internal[3][2] , \sample_internal[3][1] , 
        \sample_internal[3][0] }), .accum_out({\accum_internal[3][11] , 
        \accum_internal[3][10] , \accum_internal[3][9] , 
        \accum_internal[3][8] , \accum_internal[3][7] , \accum_internal[3][6] , 
        \accum_internal[3][5] , \accum_internal[3][4] , \accum_internal[3][3] , 
        \accum_internal[3][2] , \accum_internal[3][1] , \accum_internal[3][0] }) );
  dsp_slice_67 \GEN_SLICE[3].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[3][3] , \sample_internal[3][2] , 
        \sample_internal[3][1] , \sample_internal[3][0] }), .accum_in({
        \accum_internal[3][11] , \accum_internal[3][10] , 
        \accum_internal[3][9] , \accum_internal[3][8] , \accum_internal[3][7] , 
        \accum_internal[3][6] , \accum_internal[3][5] , \accum_internal[3][4] , 
        \accum_internal[3][3] , \accum_internal[3][2] , \accum_internal[3][1] , 
        \accum_internal[3][0] }), .coeff_in({\coeff[3][7] , \coeff[3][6] , 
        \coeff[3][5] , \coeff[3][4] , \coeff[3][3] , \coeff[3][2] , 
        \coeff[3][1] , \coeff[3][0] }), .sample_out({\sample_internal[4][3] , 
        \sample_internal[4][2] , \sample_internal[4][1] , 
        \sample_internal[4][0] }), .accum_out({\accum_internal[4][11] , 
        \accum_internal[4][10] , \accum_internal[4][9] , 
        \accum_internal[4][8] , \accum_internal[4][7] , \accum_internal[4][6] , 
        \accum_internal[4][5] , \accum_internal[4][4] , \accum_internal[4][3] , 
        \accum_internal[4][2] , \accum_internal[4][1] , \accum_internal[4][0] }) );
  dsp_slice_66 \GEN_SLICE[4].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[4][3] , \sample_internal[4][2] , 
        \sample_internal[4][1] , \sample_internal[4][0] }), .accum_in({
        \accum_internal[4][11] , \accum_internal[4][10] , 
        \accum_internal[4][9] , \accum_internal[4][8] , \accum_internal[4][7] , 
        \accum_internal[4][6] , \accum_internal[4][5] , \accum_internal[4][4] , 
        \accum_internal[4][3] , \accum_internal[4][2] , \accum_internal[4][1] , 
        \accum_internal[4][0] }), .coeff_in({\coeff[4][7] , \coeff[4][6] , 
        \coeff[4][5] , \coeff[4][4] , \coeff[4][3] , \coeff[4][2] , 
        \coeff[4][1] , \coeff[4][0] }), .sample_out({\sample_internal[5][3] , 
        \sample_internal[5][2] , \sample_internal[5][1] , 
        \sample_internal[5][0] }), .accum_out({\accum_internal[5][11] , 
        \accum_internal[5][10] , \accum_internal[5][9] , 
        \accum_internal[5][8] , \accum_internal[5][7] , \accum_internal[5][6] , 
        \accum_internal[5][5] , \accum_internal[5][4] , \accum_internal[5][3] , 
        \accum_internal[5][2] , \accum_internal[5][1] , \accum_internal[5][0] }) );
  dsp_slice_65 \GEN_SLICE[5].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[5][3] , \sample_internal[5][2] , 
        \sample_internal[5][1] , \sample_internal[5][0] }), .accum_in({
        \accum_internal[5][11] , \accum_internal[5][10] , 
        \accum_internal[5][9] , \accum_internal[5][8] , \accum_internal[5][7] , 
        \accum_internal[5][6] , \accum_internal[5][5] , \accum_internal[5][4] , 
        \accum_internal[5][3] , \accum_internal[5][2] , \accum_internal[5][1] , 
        \accum_internal[5][0] }), .coeff_in({\coeff[5][7] , \coeff[5][6] , 
        \coeff[5][5] , \coeff[5][4] , \coeff[5][3] , \coeff[5][2] , 
        \coeff[5][1] , \coeff[5][0] }), .sample_out({\sample_internal[6][3] , 
        \sample_internal[6][2] , \sample_internal[6][1] , 
        \sample_internal[6][0] }), .accum_out({\accum_internal[6][11] , 
        \accum_internal[6][10] , \accum_internal[6][9] , 
        \accum_internal[6][8] , \accum_internal[6][7] , \accum_internal[6][6] , 
        \accum_internal[6][5] , \accum_internal[6][4] , \accum_internal[6][3] , 
        \accum_internal[6][2] , \accum_internal[6][1] , \accum_internal[6][0] }) );
  dsp_slice_64 \GEN_SLICE[6].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[6][3] , \sample_internal[6][2] , 
        \sample_internal[6][1] , \sample_internal[6][0] }), .accum_in({
        \accum_internal[6][11] , \accum_internal[6][10] , 
        \accum_internal[6][9] , \accum_internal[6][8] , \accum_internal[6][7] , 
        \accum_internal[6][6] , \accum_internal[6][5] , \accum_internal[6][4] , 
        \accum_internal[6][3] , \accum_internal[6][2] , \accum_internal[6][1] , 
        \accum_internal[6][0] }), .coeff_in({\coeff[6][7] , \coeff[6][6] , 
        \coeff[6][5] , \coeff[6][4] , \coeff[6][3] , \coeff[6][2] , 
        \coeff[6][1] , \coeff[6][0] }), .sample_out({\sample_internal[7][3] , 
        \sample_internal[7][2] , \sample_internal[7][1] , 
        \sample_internal[7][0] }), .accum_out({\accum_internal[7][11] , 
        \accum_internal[7][10] , \accum_internal[7][9] , 
        \accum_internal[7][8] , \accum_internal[7][7] , \accum_internal[7][6] , 
        \accum_internal[7][5] , \accum_internal[7][4] , \accum_internal[7][3] , 
        \accum_internal[7][2] , \accum_internal[7][1] , \accum_internal[7][0] }) );
  dsp_slice_63 \GEN_SLICE[7].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[7][3] , \sample_internal[7][2] , 
        \sample_internal[7][1] , \sample_internal[7][0] }), .accum_in({
        \accum_internal[7][11] , \accum_internal[7][10] , 
        \accum_internal[7][9] , \accum_internal[7][8] , \accum_internal[7][7] , 
        \accum_internal[7][6] , \accum_internal[7][5] , \accum_internal[7][4] , 
        \accum_internal[7][3] , \accum_internal[7][2] , \accum_internal[7][1] , 
        \accum_internal[7][0] }), .coeff_in({\coeff[7][7] , \coeff[7][6] , 
        \coeff[7][5] , \coeff[7][4] , \coeff[7][3] , \coeff[7][2] , 
        \coeff[7][1] , \coeff[7][0] }), .sample_out({\sample_internal[8][3] , 
        \sample_internal[8][2] , \sample_internal[8][1] , 
        \sample_internal[8][0] }), .accum_out({\accum_internal[8][11] , 
        \accum_internal[8][10] , \accum_internal[8][9] , 
        \accum_internal[8][8] , \accum_internal[8][7] , \accum_internal[8][6] , 
        \accum_internal[8][5] , \accum_internal[8][4] , \accum_internal[8][3] , 
        \accum_internal[8][2] , \accum_internal[8][1] , \accum_internal[8][0] }) );
  dsp_slice_62 \GEN_SLICE[8].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[8][3] , \sample_internal[8][2] , 
        \sample_internal[8][1] , \sample_internal[8][0] }), .accum_in({
        \accum_internal[8][11] , \accum_internal[8][10] , 
        \accum_internal[8][9] , \accum_internal[8][8] , \accum_internal[8][7] , 
        \accum_internal[8][6] , \accum_internal[8][5] , \accum_internal[8][4] , 
        \accum_internal[8][3] , \accum_internal[8][2] , \accum_internal[8][1] , 
        \accum_internal[8][0] }), .coeff_in({\coeff[8][7] , \coeff[8][6] , 
        \coeff[8][5] , \coeff[8][4] , \coeff[8][3] , \coeff[8][2] , 
        \coeff[8][1] , \coeff[8][0] }), .sample_out({\sample_internal[9][3] , 
        \sample_internal[9][2] , \sample_internal[9][1] , 
        \sample_internal[9][0] }), .accum_out({\accum_internal[9][11] , 
        \accum_internal[9][10] , \accum_internal[9][9] , 
        \accum_internal[9][8] , \accum_internal[9][7] , \accum_internal[9][6] , 
        \accum_internal[9][5] , \accum_internal[9][4] , \accum_internal[9][3] , 
        \accum_internal[9][2] , \accum_internal[9][1] , \accum_internal[9][0] }) );
  dsp_slice_61 \GEN_SLICE[9].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[9][3] , \sample_internal[9][2] , 
        \sample_internal[9][1] , \sample_internal[9][0] }), .accum_in({
        \accum_internal[9][11] , \accum_internal[9][10] , 
        \accum_internal[9][9] , \accum_internal[9][8] , \accum_internal[9][7] , 
        \accum_internal[9][6] , \accum_internal[9][5] , \accum_internal[9][4] , 
        \accum_internal[9][3] , \accum_internal[9][2] , \accum_internal[9][1] , 
        \accum_internal[9][0] }), .coeff_in({\coeff[9][7] , \coeff[9][6] , 
        \coeff[9][5] , \coeff[9][4] , \coeff[9][3] , \coeff[9][2] , 
        \coeff[9][1] , \coeff[9][0] }), .sample_out({\sample_internal[10][3] , 
        \sample_internal[10][2] , \sample_internal[10][1] , 
        \sample_internal[10][0] }), .accum_out({\accum_internal[10][11] , 
        \accum_internal[10][10] , \accum_internal[10][9] , 
        \accum_internal[10][8] , \accum_internal[10][7] , 
        \accum_internal[10][6] , \accum_internal[10][5] , 
        \accum_internal[10][4] , \accum_internal[10][3] , 
        \accum_internal[10][2] , \accum_internal[10][1] , 
        \accum_internal[10][0] }) );
  dsp_slice_60 \GEN_SLICE[10].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[10][3] , \sample_internal[10][2] , 
        \sample_internal[10][1] , \sample_internal[10][0] }), .accum_in({
        \accum_internal[10][11] , \accum_internal[10][10] , 
        \accum_internal[10][9] , \accum_internal[10][8] , 
        \accum_internal[10][7] , \accum_internal[10][6] , 
        \accum_internal[10][5] , \accum_internal[10][4] , 
        \accum_internal[10][3] , \accum_internal[10][2] , 
        \accum_internal[10][1] , \accum_internal[10][0] }), .coeff_in({
        \coeff[10][7] , \coeff[10][6] , \coeff[10][5] , \coeff[10][4] , 
        \coeff[10][3] , \coeff[10][2] , \coeff[10][1] , \coeff[10][0] }), 
        .sample_out({\sample_internal[11][3] , \sample_internal[11][2] , 
        \sample_internal[11][1] , \sample_internal[11][0] }), .accum_out({
        \accum_internal[11][11] , \accum_internal[11][10] , 
        \accum_internal[11][9] , \accum_internal[11][8] , 
        \accum_internal[11][7] , \accum_internal[11][6] , 
        \accum_internal[11][5] , \accum_internal[11][4] , 
        \accum_internal[11][3] , \accum_internal[11][2] , 
        \accum_internal[11][1] , \accum_internal[11][0] }) );
  dsp_slice_59 \GEN_SLICE[11].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[11][3] , \sample_internal[11][2] , 
        \sample_internal[11][1] , \sample_internal[11][0] }), .accum_in({
        \accum_internal[11][11] , \accum_internal[11][10] , 
        \accum_internal[11][9] , \accum_internal[11][8] , 
        \accum_internal[11][7] , \accum_internal[11][6] , 
        \accum_internal[11][5] , \accum_internal[11][4] , 
        \accum_internal[11][3] , \accum_internal[11][2] , 
        \accum_internal[11][1] , \accum_internal[11][0] }), .coeff_in({
        \coeff[11][7] , \coeff[11][6] , \coeff[11][5] , \coeff[11][4] , 
        \coeff[11][3] , \coeff[11][2] , \coeff[11][1] , \coeff[11][0] }), 
        .sample_out({\sample_internal[12][3] , \sample_internal[12][2] , 
        \sample_internal[12][1] , \sample_internal[12][0] }), .accum_out({
        \accum_internal[12][11] , \accum_internal[12][10] , 
        \accum_internal[12][9] , \accum_internal[12][8] , 
        \accum_internal[12][7] , \accum_internal[12][6] , 
        \accum_internal[12][5] , \accum_internal[12][4] , 
        \accum_internal[12][3] , \accum_internal[12][2] , 
        \accum_internal[12][1] , \accum_internal[12][0] }) );
  dsp_slice_58 \GEN_SLICE[12].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[12][3] , \sample_internal[12][2] , 
        \sample_internal[12][1] , \sample_internal[12][0] }), .accum_in({
        \accum_internal[12][11] , \accum_internal[12][10] , 
        \accum_internal[12][9] , \accum_internal[12][8] , 
        \accum_internal[12][7] , \accum_internal[12][6] , 
        \accum_internal[12][5] , \accum_internal[12][4] , 
        \accum_internal[12][3] , \accum_internal[12][2] , 
        \accum_internal[12][1] , \accum_internal[12][0] }), .coeff_in({
        \coeff[12][7] , \coeff[12][6] , \coeff[12][5] , \coeff[12][4] , 
        \coeff[12][3] , \coeff[12][2] , \coeff[12][1] , \coeff[12][0] }), 
        .sample_out({\sample_internal[13][3] , \sample_internal[13][2] , 
        \sample_internal[13][1] , \sample_internal[13][0] }), .accum_out({
        \accum_internal[13][11] , \accum_internal[13][10] , 
        \accum_internal[13][9] , \accum_internal[13][8] , 
        \accum_internal[13][7] , \accum_internal[13][6] , 
        \accum_internal[13][5] , \accum_internal[13][4] , 
        \accum_internal[13][3] , \accum_internal[13][2] , 
        \accum_internal[13][1] , \accum_internal[13][0] }) );
  dsp_slice_57 \GEN_SLICE[13].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[13][3] , \sample_internal[13][2] , 
        \sample_internal[13][1] , \sample_internal[13][0] }), .accum_in({
        \accum_internal[13][11] , \accum_internal[13][10] , 
        \accum_internal[13][9] , \accum_internal[13][8] , 
        \accum_internal[13][7] , \accum_internal[13][6] , 
        \accum_internal[13][5] , \accum_internal[13][4] , 
        \accum_internal[13][3] , \accum_internal[13][2] , 
        \accum_internal[13][1] , \accum_internal[13][0] }), .coeff_in({
        \coeff[13][7] , \coeff[13][6] , \coeff[13][5] , \coeff[13][4] , 
        \coeff[13][3] , \coeff[13][2] , \coeff[13][1] , \coeff[13][0] }), 
        .sample_out({\sample_internal[14][3] , \sample_internal[14][2] , 
        \sample_internal[14][1] , \sample_internal[14][0] }), .accum_out({
        \accum_internal[14][11] , \accum_internal[14][10] , 
        \accum_internal[14][9] , \accum_internal[14][8] , 
        \accum_internal[14][7] , \accum_internal[14][6] , 
        \accum_internal[14][5] , \accum_internal[14][4] , 
        \accum_internal[14][3] , \accum_internal[14][2] , 
        \accum_internal[14][1] , \accum_internal[14][0] }) );
  dsp_slice_56 \GEN_SLICE[14].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[14][3] , \sample_internal[14][2] , 
        \sample_internal[14][1] , \sample_internal[14][0] }), .accum_in({
        \accum_internal[14][11] , \accum_internal[14][10] , 
        \accum_internal[14][9] , \accum_internal[14][8] , 
        \accum_internal[14][7] , \accum_internal[14][6] , 
        \accum_internal[14][5] , \accum_internal[14][4] , 
        \accum_internal[14][3] , \accum_internal[14][2] , 
        \accum_internal[14][1] , \accum_internal[14][0] }), .coeff_in({
        \coeff[14][7] , \coeff[14][6] , \coeff[14][5] , \coeff[14][4] , 
        \coeff[14][3] , \coeff[14][2] , \coeff[14][1] , \coeff[14][0] }), 
        .sample_out({\sample_internal[15][3] , \sample_internal[15][2] , 
        \sample_internal[15][1] , \sample_internal[15][0] }), .accum_out({
        \accum_internal[15][11] , \accum_internal[15][10] , 
        \accum_internal[15][9] , \accum_internal[15][8] , 
        \accum_internal[15][7] , \accum_internal[15][6] , 
        \accum_internal[15][5] , \accum_internal[15][4] , 
        \accum_internal[15][3] , \accum_internal[15][2] , 
        \accum_internal[15][1] , \accum_internal[15][0] }) );
  dsp_slice_55 \GEN_SLICE[15].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[15][3] , \sample_internal[15][2] , 
        \sample_internal[15][1] , \sample_internal[15][0] }), .accum_in({
        \accum_internal[15][11] , \accum_internal[15][10] , 
        \accum_internal[15][9] , \accum_internal[15][8] , 
        \accum_internal[15][7] , \accum_internal[15][6] , 
        \accum_internal[15][5] , \accum_internal[15][4] , 
        \accum_internal[15][3] , \accum_internal[15][2] , 
        \accum_internal[15][1] , \accum_internal[15][0] }), .coeff_in({
        \coeff[15][7] , \coeff[15][6] , \coeff[15][5] , \coeff[15][4] , 
        \coeff[15][3] , \coeff[15][2] , \coeff[15][1] , \coeff[15][0] }), 
        .sample_out({\sample_internal[16][3] , \sample_internal[16][2] , 
        \sample_internal[16][1] , \sample_internal[16][0] }), .accum_out({
        \accum_internal[16][11] , \accum_internal[16][10] , 
        \accum_internal[16][9] , \accum_internal[16][8] , 
        \accum_internal[16][7] , \accum_internal[16][6] , 
        \accum_internal[16][5] , \accum_internal[16][4] , 
        \accum_internal[16][3] , \accum_internal[16][2] , 
        \accum_internal[16][1] , \accum_internal[16][0] }) );
  dsp_slice_54 \GEN_SLICE[16].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[16][3] , \sample_internal[16][2] , 
        \sample_internal[16][1] , \sample_internal[16][0] }), .accum_in({
        \accum_internal[16][11] , \accum_internal[16][10] , 
        \accum_internal[16][9] , \accum_internal[16][8] , 
        \accum_internal[16][7] , \accum_internal[16][6] , 
        \accum_internal[16][5] , \accum_internal[16][4] , 
        \accum_internal[16][3] , \accum_internal[16][2] , 
        \accum_internal[16][1] , \accum_internal[16][0] }), .coeff_in({
        \coeff[16][7] , \coeff[16][6] , \coeff[16][5] , \coeff[16][4] , 
        \coeff[16][3] , \coeff[16][2] , \coeff[16][1] , \coeff[16][0] }), 
        .sample_out({\sample_internal[17][3] , \sample_internal[17][2] , 
        \sample_internal[17][1] , \sample_internal[17][0] }), .accum_out({
        \accum_internal[17][11] , \accum_internal[17][10] , 
        \accum_internal[17][9] , \accum_internal[17][8] , 
        \accum_internal[17][7] , \accum_internal[17][6] , 
        \accum_internal[17][5] , \accum_internal[17][4] , 
        \accum_internal[17][3] , \accum_internal[17][2] , 
        \accum_internal[17][1] , \accum_internal[17][0] }) );
  dsp_slice_53 \GEN_SLICE[17].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[17][3] , \sample_internal[17][2] , 
        \sample_internal[17][1] , \sample_internal[17][0] }), .accum_in({
        \accum_internal[17][11] , \accum_internal[17][10] , 
        \accum_internal[17][9] , \accum_internal[17][8] , 
        \accum_internal[17][7] , \accum_internal[17][6] , 
        \accum_internal[17][5] , \accum_internal[17][4] , 
        \accum_internal[17][3] , \accum_internal[17][2] , 
        \accum_internal[17][1] , \accum_internal[17][0] }), .coeff_in({
        \coeff[17][7] , \coeff[17][6] , \coeff[17][5] , \coeff[17][4] , 
        \coeff[17][3] , \coeff[17][2] , \coeff[17][1] , \coeff[17][0] }), 
        .sample_out({\sample_internal[18][3] , \sample_internal[18][2] , 
        \sample_internal[18][1] , \sample_internal[18][0] }), .accum_out({
        \accum_internal[18][11] , \accum_internal[18][10] , 
        \accum_internal[18][9] , \accum_internal[18][8] , 
        \accum_internal[18][7] , \accum_internal[18][6] , 
        \accum_internal[18][5] , \accum_internal[18][4] , 
        \accum_internal[18][3] , \accum_internal[18][2] , 
        \accum_internal[18][1] , \accum_internal[18][0] }) );
  dsp_slice_52 \GEN_SLICE[18].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[18][3] , \sample_internal[18][2] , 
        \sample_internal[18][1] , \sample_internal[18][0] }), .accum_in({
        \accum_internal[18][11] , \accum_internal[18][10] , 
        \accum_internal[18][9] , \accum_internal[18][8] , 
        \accum_internal[18][7] , \accum_internal[18][6] , 
        \accum_internal[18][5] , \accum_internal[18][4] , 
        \accum_internal[18][3] , \accum_internal[18][2] , 
        \accum_internal[18][1] , \accum_internal[18][0] }), .coeff_in({
        \coeff[18][7] , \coeff[18][6] , \coeff[18][5] , \coeff[18][4] , 
        \coeff[18][3] , \coeff[18][2] , \coeff[18][1] , \coeff[18][0] }), 
        .sample_out({\sample_internal[19][3] , \sample_internal[19][2] , 
        \sample_internal[19][1] , \sample_internal[19][0] }), .accum_out({
        \accum_internal[19][11] , \accum_internal[19][10] , 
        \accum_internal[19][9] , \accum_internal[19][8] , 
        \accum_internal[19][7] , \accum_internal[19][6] , 
        \accum_internal[19][5] , \accum_internal[19][4] , 
        \accum_internal[19][3] , \accum_internal[19][2] , 
        \accum_internal[19][1] , \accum_internal[19][0] }) );
  dsp_slice_51 \GEN_SLICE[19].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[19][3] , \sample_internal[19][2] , 
        \sample_internal[19][1] , \sample_internal[19][0] }), .accum_in({
        \accum_internal[19][11] , \accum_internal[19][10] , 
        \accum_internal[19][9] , \accum_internal[19][8] , 
        \accum_internal[19][7] , \accum_internal[19][6] , 
        \accum_internal[19][5] , \accum_internal[19][4] , 
        \accum_internal[19][3] , \accum_internal[19][2] , 
        \accum_internal[19][1] , \accum_internal[19][0] }), .coeff_in({
        \coeff[19][7] , \coeff[19][6] , \coeff[19][5] , \coeff[19][4] , 
        \coeff[19][3] , \coeff[19][2] , \coeff[19][1] , \coeff[19][0] }), 
        .sample_out({\sample_internal[20][3] , \sample_internal[20][2] , 
        \sample_internal[20][1] , \sample_internal[20][0] }), .accum_out({
        \accum_internal[20][11] , \accum_internal[20][10] , 
        \accum_internal[20][9] , \accum_internal[20][8] , 
        \accum_internal[20][7] , \accum_internal[20][6] , 
        \accum_internal[20][5] , \accum_internal[20][4] , 
        \accum_internal[20][3] , \accum_internal[20][2] , 
        \accum_internal[20][1] , \accum_internal[20][0] }) );
  dsp_slice_50 \GEN_SLICE[20].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[20][3] , \sample_internal[20][2] , 
        \sample_internal[20][1] , \sample_internal[20][0] }), .accum_in({
        \accum_internal[20][11] , \accum_internal[20][10] , 
        \accum_internal[20][9] , \accum_internal[20][8] , 
        \accum_internal[20][7] , \accum_internal[20][6] , 
        \accum_internal[20][5] , \accum_internal[20][4] , 
        \accum_internal[20][3] , \accum_internal[20][2] , 
        \accum_internal[20][1] , \accum_internal[20][0] }), .coeff_in({
        \coeff[20][7] , \coeff[20][6] , \coeff[20][5] , \coeff[20][4] , 
        \coeff[20][3] , \coeff[20][2] , \coeff[20][1] , \coeff[20][0] }), 
        .sample_out({\sample_internal[21][3] , \sample_internal[21][2] , 
        \sample_internal[21][1] , \sample_internal[21][0] }), .accum_out({
        \accum_internal[21][11] , \accum_internal[21][10] , 
        \accum_internal[21][9] , \accum_internal[21][8] , 
        \accum_internal[21][7] , \accum_internal[21][6] , 
        \accum_internal[21][5] , \accum_internal[21][4] , 
        \accum_internal[21][3] , \accum_internal[21][2] , 
        \accum_internal[21][1] , \accum_internal[21][0] }) );
  dsp_slice_49 \GEN_SLICE[21].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[21][3] , \sample_internal[21][2] , 
        \sample_internal[21][1] , \sample_internal[21][0] }), .accum_in({
        \accum_internal[21][11] , \accum_internal[21][10] , 
        \accum_internal[21][9] , \accum_internal[21][8] , 
        \accum_internal[21][7] , \accum_internal[21][6] , 
        \accum_internal[21][5] , \accum_internal[21][4] , 
        \accum_internal[21][3] , \accum_internal[21][2] , 
        \accum_internal[21][1] , \accum_internal[21][0] }), .coeff_in({
        \coeff[21][7] , \coeff[21][6] , \coeff[21][5] , \coeff[21][4] , 
        \coeff[21][3] , \coeff[21][2] , \coeff[21][1] , \coeff[21][0] }), 
        .sample_out({\sample_internal[22][3] , \sample_internal[22][2] , 
        \sample_internal[22][1] , \sample_internal[22][0] }), .accum_out({
        \accum_internal[22][11] , \accum_internal[22][10] , 
        \accum_internal[22][9] , \accum_internal[22][8] , 
        \accum_internal[22][7] , \accum_internal[22][6] , 
        \accum_internal[22][5] , \accum_internal[22][4] , 
        \accum_internal[22][3] , \accum_internal[22][2] , 
        \accum_internal[22][1] , \accum_internal[22][0] }) );
  dsp_slice_48 \GEN_SLICE[22].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[22][3] , \sample_internal[22][2] , 
        \sample_internal[22][1] , \sample_internal[22][0] }), .accum_in({
        \accum_internal[22][11] , \accum_internal[22][10] , 
        \accum_internal[22][9] , \accum_internal[22][8] , 
        \accum_internal[22][7] , \accum_internal[22][6] , 
        \accum_internal[22][5] , \accum_internal[22][4] , 
        \accum_internal[22][3] , \accum_internal[22][2] , 
        \accum_internal[22][1] , \accum_internal[22][0] }), .coeff_in({
        \coeff[22][7] , \coeff[22][6] , \coeff[22][5] , \coeff[22][4] , 
        \coeff[22][3] , \coeff[22][2] , \coeff[22][1] , \coeff[22][0] }), 
        .sample_out({\sample_internal[23][3] , \sample_internal[23][2] , 
        \sample_internal[23][1] , \sample_internal[23][0] }), .accum_out({
        \accum_internal[23][11] , \accum_internal[23][10] , 
        \accum_internal[23][9] , \accum_internal[23][8] , 
        \accum_internal[23][7] , \accum_internal[23][6] , 
        \accum_internal[23][5] , \accum_internal[23][4] , 
        \accum_internal[23][3] , \accum_internal[23][2] , 
        \accum_internal[23][1] , \accum_internal[23][0] }) );
  dsp_slice_47 \GEN_SLICE[23].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[23][3] , \sample_internal[23][2] , 
        \sample_internal[23][1] , \sample_internal[23][0] }), .accum_in({
        \accum_internal[23][11] , \accum_internal[23][10] , 
        \accum_internal[23][9] , \accum_internal[23][8] , 
        \accum_internal[23][7] , \accum_internal[23][6] , 
        \accum_internal[23][5] , \accum_internal[23][4] , 
        \accum_internal[23][3] , \accum_internal[23][2] , 
        \accum_internal[23][1] , \accum_internal[23][0] }), .coeff_in({
        \coeff[23][7] , \coeff[23][6] , \coeff[23][5] , \coeff[23][4] , 
        \coeff[23][3] , \coeff[23][2] , \coeff[23][1] , \coeff[23][0] }), 
        .sample_out({\sample_internal[24][3] , \sample_internal[24][2] , 
        \sample_internal[24][1] , \sample_internal[24][0] }), .accum_out({
        \accum_internal[24][11] , \accum_internal[24][10] , 
        \accum_internal[24][9] , \accum_internal[24][8] , 
        \accum_internal[24][7] , \accum_internal[24][6] , 
        \accum_internal[24][5] , \accum_internal[24][4] , 
        \accum_internal[24][3] , \accum_internal[24][2] , 
        \accum_internal[24][1] , \accum_internal[24][0] }) );
  dsp_slice_46 \GEN_SLICE[24].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[24][3] , \sample_internal[24][2] , 
        \sample_internal[24][1] , \sample_internal[24][0] }), .accum_in({
        \accum_internal[24][11] , \accum_internal[24][10] , 
        \accum_internal[24][9] , \accum_internal[24][8] , 
        \accum_internal[24][7] , \accum_internal[24][6] , 
        \accum_internal[24][5] , \accum_internal[24][4] , 
        \accum_internal[24][3] , \accum_internal[24][2] , 
        \accum_internal[24][1] , \accum_internal[24][0] }), .coeff_in({
        \coeff[24][7] , \coeff[24][6] , \coeff[24][5] , \coeff[24][4] , 
        \coeff[24][3] , \coeff[24][2] , \coeff[24][1] , \coeff[24][0] }), 
        .sample_out({\sample_internal[25][3] , \sample_internal[25][2] , 
        \sample_internal[25][1] , \sample_internal[25][0] }), .accum_out({
        \accum_internal[25][11] , \accum_internal[25][10] , 
        \accum_internal[25][9] , \accum_internal[25][8] , 
        \accum_internal[25][7] , \accum_internal[25][6] , 
        \accum_internal[25][5] , \accum_internal[25][4] , 
        \accum_internal[25][3] , \accum_internal[25][2] , 
        \accum_internal[25][1] , \accum_internal[25][0] }) );
  dsp_slice_45 \GEN_SLICE[25].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[25][3] , \sample_internal[25][2] , 
        \sample_internal[25][1] , \sample_internal[25][0] }), .accum_in({
        \accum_internal[25][11] , \accum_internal[25][10] , 
        \accum_internal[25][9] , \accum_internal[25][8] , 
        \accum_internal[25][7] , \accum_internal[25][6] , 
        \accum_internal[25][5] , \accum_internal[25][4] , 
        \accum_internal[25][3] , \accum_internal[25][2] , 
        \accum_internal[25][1] , \accum_internal[25][0] }), .coeff_in({
        \coeff[25][7] , \coeff[25][6] , \coeff[25][5] , \coeff[25][4] , 
        \coeff[25][3] , \coeff[25][2] , \coeff[25][1] , \coeff[25][0] }), 
        .sample_out({\sample_internal[26][3] , \sample_internal[26][2] , 
        \sample_internal[26][1] , \sample_internal[26][0] }), .accum_out({
        \accum_internal[26][11] , \accum_internal[26][10] , 
        \accum_internal[26][9] , \accum_internal[26][8] , 
        \accum_internal[26][7] , \accum_internal[26][6] , 
        \accum_internal[26][5] , \accum_internal[26][4] , 
        \accum_internal[26][3] , \accum_internal[26][2] , 
        \accum_internal[26][1] , \accum_internal[26][0] }) );
  dsp_slice_44 \GEN_SLICE[26].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[26][3] , \sample_internal[26][2] , 
        \sample_internal[26][1] , \sample_internal[26][0] }), .accum_in({
        \accum_internal[26][11] , \accum_internal[26][10] , 
        \accum_internal[26][9] , \accum_internal[26][8] , 
        \accum_internal[26][7] , \accum_internal[26][6] , 
        \accum_internal[26][5] , \accum_internal[26][4] , 
        \accum_internal[26][3] , \accum_internal[26][2] , 
        \accum_internal[26][1] , \accum_internal[26][0] }), .coeff_in({
        \coeff[26][7] , \coeff[26][6] , \coeff[26][5] , \coeff[26][4] , 
        \coeff[26][3] , \coeff[26][2] , \coeff[26][1] , \coeff[26][0] }), 
        .sample_out({\sample_internal[27][3] , \sample_internal[27][2] , 
        \sample_internal[27][1] , \sample_internal[27][0] }), .accum_out({
        \accum_internal[27][11] , \accum_internal[27][10] , 
        \accum_internal[27][9] , \accum_internal[27][8] , 
        \accum_internal[27][7] , \accum_internal[27][6] , 
        \accum_internal[27][5] , \accum_internal[27][4] , 
        \accum_internal[27][3] , \accum_internal[27][2] , 
        \accum_internal[27][1] , \accum_internal[27][0] }) );
  dsp_slice_43 \GEN_SLICE[27].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[27][3] , \sample_internal[27][2] , 
        \sample_internal[27][1] , \sample_internal[27][0] }), .accum_in({
        \accum_internal[27][11] , \accum_internal[27][10] , 
        \accum_internal[27][9] , \accum_internal[27][8] , 
        \accum_internal[27][7] , \accum_internal[27][6] , 
        \accum_internal[27][5] , \accum_internal[27][4] , 
        \accum_internal[27][3] , \accum_internal[27][2] , 
        \accum_internal[27][1] , \accum_internal[27][0] }), .coeff_in({
        \coeff[27][7] , \coeff[27][6] , \coeff[27][5] , \coeff[27][4] , 
        \coeff[27][3] , \coeff[27][2] , \coeff[27][1] , \coeff[27][0] }), 
        .sample_out({\sample_internal[28][3] , \sample_internal[28][2] , 
        \sample_internal[28][1] , \sample_internal[28][0] }), .accum_out({
        \accum_internal[28][11] , \accum_internal[28][10] , 
        \accum_internal[28][9] , \accum_internal[28][8] , 
        \accum_internal[28][7] , \accum_internal[28][6] , 
        \accum_internal[28][5] , \accum_internal[28][4] , 
        \accum_internal[28][3] , \accum_internal[28][2] , 
        \accum_internal[28][1] , \accum_internal[28][0] }) );
  dsp_slice_42 \GEN_SLICE[28].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[28][3] , \sample_internal[28][2] , 
        \sample_internal[28][1] , \sample_internal[28][0] }), .accum_in({
        \accum_internal[28][11] , \accum_internal[28][10] , 
        \accum_internal[28][9] , \accum_internal[28][8] , 
        \accum_internal[28][7] , \accum_internal[28][6] , 
        \accum_internal[28][5] , \accum_internal[28][4] , 
        \accum_internal[28][3] , \accum_internal[28][2] , 
        \accum_internal[28][1] , \accum_internal[28][0] }), .coeff_in({
        \coeff[28][7] , \coeff[28][6] , \coeff[28][5] , \coeff[28][4] , 
        \coeff[28][3] , \coeff[28][2] , \coeff[28][1] , \coeff[28][0] }), 
        .sample_out({\sample_internal[29][3] , \sample_internal[29][2] , 
        \sample_internal[29][1] , \sample_internal[29][0] }), .accum_out({
        \accum_internal[29][11] , \accum_internal[29][10] , 
        \accum_internal[29][9] , \accum_internal[29][8] , 
        \accum_internal[29][7] , \accum_internal[29][6] , 
        \accum_internal[29][5] , \accum_internal[29][4] , 
        \accum_internal[29][3] , \accum_internal[29][2] , 
        \accum_internal[29][1] , \accum_internal[29][0] }) );
  dsp_slice_41 \GEN_SLICE[29].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[29][3] , \sample_internal[29][2] , 
        \sample_internal[29][1] , \sample_internal[29][0] }), .accum_in({
        \accum_internal[29][11] , \accum_internal[29][10] , 
        \accum_internal[29][9] , \accum_internal[29][8] , 
        \accum_internal[29][7] , \accum_internal[29][6] , 
        \accum_internal[29][5] , \accum_internal[29][4] , 
        \accum_internal[29][3] , \accum_internal[29][2] , 
        \accum_internal[29][1] , \accum_internal[29][0] }), .coeff_in({
        \coeff[29][7] , \coeff[29][6] , \coeff[29][5] , \coeff[29][4] , 
        \coeff[29][3] , \coeff[29][2] , \coeff[29][1] , \coeff[29][0] }), 
        .sample_out({\sample_internal[30][3] , \sample_internal[30][2] , 
        \sample_internal[30][1] , \sample_internal[30][0] }), .accum_out({
        \accum_internal[30][11] , \accum_internal[30][10] , 
        \accum_internal[30][9] , \accum_internal[30][8] , 
        \accum_internal[30][7] , \accum_internal[30][6] , 
        \accum_internal[30][5] , \accum_internal[30][4] , 
        \accum_internal[30][3] , \accum_internal[30][2] , 
        \accum_internal[30][1] , \accum_internal[30][0] }) );
  dsp_slice_40 \GEN_SLICE[30].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[30][3] , \sample_internal[30][2] , 
        \sample_internal[30][1] , \sample_internal[30][0] }), .accum_in({
        \accum_internal[30][11] , \accum_internal[30][10] , 
        \accum_internal[30][9] , \accum_internal[30][8] , 
        \accum_internal[30][7] , \accum_internal[30][6] , 
        \accum_internal[30][5] , \accum_internal[30][4] , 
        \accum_internal[30][3] , \accum_internal[30][2] , 
        \accum_internal[30][1] , \accum_internal[30][0] }), .coeff_in({
        \coeff[30][7] , \coeff[30][6] , \coeff[30][5] , \coeff[30][4] , 
        \coeff[30][3] , \coeff[30][2] , \coeff[30][1] , \coeff[30][0] }), 
        .sample_out({\sample_internal[31][3] , \sample_internal[31][2] , 
        \sample_internal[31][1] , \sample_internal[31][0] }), .accum_out({
        \accum_internal[31][11] , \accum_internal[31][10] , 
        \accum_internal[31][9] , \accum_internal[31][8] , 
        \accum_internal[31][7] , \accum_internal[31][6] , 
        \accum_internal[31][5] , \accum_internal[31][4] , 
        \accum_internal[31][3] , \accum_internal[31][2] , 
        \accum_internal[31][1] , \accum_internal[31][0] }) );
  dsp_slice_39 \GEN_SLICE[31].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[31][3] , \sample_internal[31][2] , 
        \sample_internal[31][1] , \sample_internal[31][0] }), .accum_in({
        \accum_internal[31][11] , \accum_internal[31][10] , 
        \accum_internal[31][9] , \accum_internal[31][8] , 
        \accum_internal[31][7] , \accum_internal[31][6] , 
        \accum_internal[31][5] , \accum_internal[31][4] , 
        \accum_internal[31][3] , \accum_internal[31][2] , 
        \accum_internal[31][1] , \accum_internal[31][0] }), .coeff_in({
        \coeff[31][7] , \coeff[31][6] , \coeff[31][5] , \coeff[31][4] , 
        \coeff[31][3] , \coeff[31][2] , \coeff[31][1] , \coeff[31][0] }), 
        .sample_out({\sample_internal[32][3] , \sample_internal[32][2] , 
        \sample_internal[32][1] , \sample_internal[32][0] }), .accum_out({
        \accum_internal[32][11] , \accum_internal[32][10] , 
        \accum_internal[32][9] , \accum_internal[32][8] , 
        \accum_internal[32][7] , \accum_internal[32][6] , 
        \accum_internal[32][5] , \accum_internal[32][4] , 
        \accum_internal[32][3] , \accum_internal[32][2] , 
        \accum_internal[32][1] , \accum_internal[32][0] }) );
  dsp_slice_38 \GEN_SLICE[32].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[32][3] , \sample_internal[32][2] , 
        \sample_internal[32][1] , \sample_internal[32][0] }), .accum_in({
        \accum_internal[32][11] , \accum_internal[32][10] , 
        \accum_internal[32][9] , \accum_internal[32][8] , 
        \accum_internal[32][7] , \accum_internal[32][6] , 
        \accum_internal[32][5] , \accum_internal[32][4] , 
        \accum_internal[32][3] , \accum_internal[32][2] , 
        \accum_internal[32][1] , \accum_internal[32][0] }), .coeff_in({
        \coeff[32][7] , \coeff[32][6] , \coeff[32][5] , \coeff[32][4] , 
        \coeff[32][3] , \coeff[32][2] , \coeff[32][1] , \coeff[32][0] }), 
        .sample_out({\sample_internal[33][3] , \sample_internal[33][2] , 
        \sample_internal[33][1] , \sample_internal[33][0] }), .accum_out({
        \accum_internal[33][11] , \accum_internal[33][10] , 
        \accum_internal[33][9] , \accum_internal[33][8] , 
        \accum_internal[33][7] , \accum_internal[33][6] , 
        \accum_internal[33][5] , \accum_internal[33][4] , 
        \accum_internal[33][3] , \accum_internal[33][2] , 
        \accum_internal[33][1] , \accum_internal[33][0] }) );
  dsp_slice_37 \GEN_SLICE[33].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[33][3] , \sample_internal[33][2] , 
        \sample_internal[33][1] , \sample_internal[33][0] }), .accum_in({
        \accum_internal[33][11] , \accum_internal[33][10] , 
        \accum_internal[33][9] , \accum_internal[33][8] , 
        \accum_internal[33][7] , \accum_internal[33][6] , 
        \accum_internal[33][5] , \accum_internal[33][4] , 
        \accum_internal[33][3] , \accum_internal[33][2] , 
        \accum_internal[33][1] , \accum_internal[33][0] }), .coeff_in({
        \coeff[33][7] , \coeff[33][6] , \coeff[33][5] , \coeff[33][4] , 
        \coeff[33][3] , \coeff[33][2] , \coeff[33][1] , \coeff[33][0] }), 
        .sample_out({\sample_internal[34][3] , \sample_internal[34][2] , 
        \sample_internal[34][1] , \sample_internal[34][0] }), .accum_out({
        \accum_internal[34][11] , \accum_internal[34][10] , 
        \accum_internal[34][9] , \accum_internal[34][8] , 
        \accum_internal[34][7] , \accum_internal[34][6] , 
        \accum_internal[34][5] , \accum_internal[34][4] , 
        \accum_internal[34][3] , \accum_internal[34][2] , 
        \accum_internal[34][1] , \accum_internal[34][0] }) );
  dsp_slice_36 \GEN_SLICE[34].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[34][3] , \sample_internal[34][2] , 
        \sample_internal[34][1] , \sample_internal[34][0] }), .accum_in({
        \accum_internal[34][11] , \accum_internal[34][10] , 
        \accum_internal[34][9] , \accum_internal[34][8] , 
        \accum_internal[34][7] , \accum_internal[34][6] , 
        \accum_internal[34][5] , \accum_internal[34][4] , 
        \accum_internal[34][3] , \accum_internal[34][2] , 
        \accum_internal[34][1] , \accum_internal[34][0] }), .coeff_in({
        \coeff[34][7] , \coeff[34][6] , \coeff[34][5] , \coeff[34][4] , 
        \coeff[34][3] , \coeff[34][2] , \coeff[34][1] , \coeff[34][0] }), 
        .sample_out({\sample_internal[35][3] , \sample_internal[35][2] , 
        \sample_internal[35][1] , \sample_internal[35][0] }), .accum_out({
        \accum_internal[35][11] , \accum_internal[35][10] , 
        \accum_internal[35][9] , \accum_internal[35][8] , 
        \accum_internal[35][7] , \accum_internal[35][6] , 
        \accum_internal[35][5] , \accum_internal[35][4] , 
        \accum_internal[35][3] , \accum_internal[35][2] , 
        \accum_internal[35][1] , \accum_internal[35][0] }) );
  dsp_slice_35 \GEN_SLICE[35].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[35][3] , \sample_internal[35][2] , 
        \sample_internal[35][1] , \sample_internal[35][0] }), .accum_in({
        \accum_internal[35][11] , \accum_internal[35][10] , 
        \accum_internal[35][9] , \accum_internal[35][8] , 
        \accum_internal[35][7] , \accum_internal[35][6] , 
        \accum_internal[35][5] , \accum_internal[35][4] , 
        \accum_internal[35][3] , \accum_internal[35][2] , 
        \accum_internal[35][1] , \accum_internal[35][0] }), .coeff_in({
        \coeff[35][7] , \coeff[35][6] , \coeff[35][5] , \coeff[35][4] , 
        \coeff[35][3] , \coeff[35][2] , \coeff[35][1] , \coeff[35][0] }), 
        .sample_out({\sample_internal[36][3] , \sample_internal[36][2] , 
        \sample_internal[36][1] , \sample_internal[36][0] }), .accum_out({
        \accum_internal[36][11] , \accum_internal[36][10] , 
        \accum_internal[36][9] , \accum_internal[36][8] , 
        \accum_internal[36][7] , \accum_internal[36][6] , 
        \accum_internal[36][5] , \accum_internal[36][4] , 
        \accum_internal[36][3] , \accum_internal[36][2] , 
        \accum_internal[36][1] , \accum_internal[36][0] }) );
  dsp_slice_34 \GEN_SLICE[36].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[36][3] , \sample_internal[36][2] , 
        \sample_internal[36][1] , \sample_internal[36][0] }), .accum_in({
        \accum_internal[36][11] , \accum_internal[36][10] , 
        \accum_internal[36][9] , \accum_internal[36][8] , 
        \accum_internal[36][7] , \accum_internal[36][6] , 
        \accum_internal[36][5] , \accum_internal[36][4] , 
        \accum_internal[36][3] , \accum_internal[36][2] , 
        \accum_internal[36][1] , \accum_internal[36][0] }), .coeff_in({
        \coeff[36][7] , \coeff[36][6] , \coeff[36][5] , \coeff[36][4] , 
        \coeff[36][3] , \coeff[36][2] , \coeff[36][1] , \coeff[36][0] }), 
        .sample_out({\sample_internal[37][3] , \sample_internal[37][2] , 
        \sample_internal[37][1] , \sample_internal[37][0] }), .accum_out({
        \accum_internal[37][11] , \accum_internal[37][10] , 
        \accum_internal[37][9] , \accum_internal[37][8] , 
        \accum_internal[37][7] , \accum_internal[37][6] , 
        \accum_internal[37][5] , \accum_internal[37][4] , 
        \accum_internal[37][3] , \accum_internal[37][2] , 
        \accum_internal[37][1] , \accum_internal[37][0] }) );
  dsp_slice_33 \GEN_SLICE[37].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[37][3] , \sample_internal[37][2] , 
        \sample_internal[37][1] , \sample_internal[37][0] }), .accum_in({
        \accum_internal[37][11] , \accum_internal[37][10] , 
        \accum_internal[37][9] , \accum_internal[37][8] , 
        \accum_internal[37][7] , \accum_internal[37][6] , 
        \accum_internal[37][5] , \accum_internal[37][4] , 
        \accum_internal[37][3] , \accum_internal[37][2] , 
        \accum_internal[37][1] , \accum_internal[37][0] }), .coeff_in({
        \coeff[37][7] , \coeff[37][6] , \coeff[37][5] , \coeff[37][4] , 
        \coeff[37][3] , \coeff[37][2] , \coeff[37][1] , \coeff[37][0] }), 
        .sample_out({\sample_internal[38][3] , \sample_internal[38][2] , 
        \sample_internal[38][1] , \sample_internal[38][0] }), .accum_out({
        \accum_internal[38][11] , \accum_internal[38][10] , 
        \accum_internal[38][9] , \accum_internal[38][8] , 
        \accum_internal[38][7] , \accum_internal[38][6] , 
        \accum_internal[38][5] , \accum_internal[38][4] , 
        \accum_internal[38][3] , \accum_internal[38][2] , 
        \accum_internal[38][1] , \accum_internal[38][0] }) );
  dsp_slice_32 \GEN_SLICE[38].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[38][3] , \sample_internal[38][2] , 
        \sample_internal[38][1] , \sample_internal[38][0] }), .accum_in({
        \accum_internal[38][11] , \accum_internal[38][10] , 
        \accum_internal[38][9] , \accum_internal[38][8] , 
        \accum_internal[38][7] , \accum_internal[38][6] , 
        \accum_internal[38][5] , \accum_internal[38][4] , 
        \accum_internal[38][3] , \accum_internal[38][2] , 
        \accum_internal[38][1] , \accum_internal[38][0] }), .coeff_in({
        \coeff[38][7] , \coeff[38][6] , \coeff[38][5] , \coeff[38][4] , 
        \coeff[38][3] , \coeff[38][2] , \coeff[38][1] , \coeff[38][0] }), 
        .sample_out({\sample_internal[39][3] , \sample_internal[39][2] , 
        \sample_internal[39][1] , \sample_internal[39][0] }), .accum_out({
        \accum_internal[39][11] , \accum_internal[39][10] , 
        \accum_internal[39][9] , \accum_internal[39][8] , 
        \accum_internal[39][7] , \accum_internal[39][6] , 
        \accum_internal[39][5] , \accum_internal[39][4] , 
        \accum_internal[39][3] , \accum_internal[39][2] , 
        \accum_internal[39][1] , \accum_internal[39][0] }) );
  dsp_slice_31 \GEN_SLICE[39].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[39][3] , \sample_internal[39][2] , 
        \sample_internal[39][1] , \sample_internal[39][0] }), .accum_in({
        \accum_internal[39][11] , \accum_internal[39][10] , 
        \accum_internal[39][9] , \accum_internal[39][8] , 
        \accum_internal[39][7] , \accum_internal[39][6] , 
        \accum_internal[39][5] , \accum_internal[39][4] , 
        \accum_internal[39][3] , \accum_internal[39][2] , 
        \accum_internal[39][1] , \accum_internal[39][0] }), .coeff_in({
        \coeff[39][7] , \coeff[39][6] , \coeff[39][5] , \coeff[39][4] , 
        \coeff[39][3] , \coeff[39][2] , \coeff[39][1] , \coeff[39][0] }), 
        .sample_out({\sample_internal[40][3] , \sample_internal[40][2] , 
        \sample_internal[40][1] , \sample_internal[40][0] }), .accum_out({
        \accum_internal[40][11] , \accum_internal[40][10] , 
        \accum_internal[40][9] , \accum_internal[40][8] , 
        \accum_internal[40][7] , \accum_internal[40][6] , 
        \accum_internal[40][5] , \accum_internal[40][4] , 
        \accum_internal[40][3] , \accum_internal[40][2] , 
        \accum_internal[40][1] , \accum_internal[40][0] }) );
  dsp_slice_30 \GEN_SLICE[40].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[40][3] , \sample_internal[40][2] , 
        \sample_internal[40][1] , \sample_internal[40][0] }), .accum_in({
        \accum_internal[40][11] , \accum_internal[40][10] , 
        \accum_internal[40][9] , \accum_internal[40][8] , 
        \accum_internal[40][7] , \accum_internal[40][6] , 
        \accum_internal[40][5] , \accum_internal[40][4] , 
        \accum_internal[40][3] , \accum_internal[40][2] , 
        \accum_internal[40][1] , \accum_internal[40][0] }), .coeff_in({
        \coeff[40][7] , \coeff[40][6] , \coeff[40][5] , \coeff[40][4] , 
        \coeff[40][3] , \coeff[40][2] , \coeff[40][1] , \coeff[40][0] }), 
        .sample_out({\sample_internal[41][3] , \sample_internal[41][2] , 
        \sample_internal[41][1] , \sample_internal[41][0] }), .accum_out({
        \accum_internal[41][11] , \accum_internal[41][10] , 
        \accum_internal[41][9] , \accum_internal[41][8] , 
        \accum_internal[41][7] , \accum_internal[41][6] , 
        \accum_internal[41][5] , \accum_internal[41][4] , 
        \accum_internal[41][3] , \accum_internal[41][2] , 
        \accum_internal[41][1] , \accum_internal[41][0] }) );
  dsp_slice_29 \GEN_SLICE[41].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[41][3] , \sample_internal[41][2] , 
        \sample_internal[41][1] , \sample_internal[41][0] }), .accum_in({
        \accum_internal[41][11] , \accum_internal[41][10] , 
        \accum_internal[41][9] , \accum_internal[41][8] , 
        \accum_internal[41][7] , \accum_internal[41][6] , 
        \accum_internal[41][5] , \accum_internal[41][4] , 
        \accum_internal[41][3] , \accum_internal[41][2] , 
        \accum_internal[41][1] , \accum_internal[41][0] }), .coeff_in({
        \coeff[41][7] , \coeff[41][6] , \coeff[41][5] , \coeff[41][4] , 
        \coeff[41][3] , \coeff[41][2] , \coeff[41][1] , \coeff[41][0] }), 
        .sample_out({\sample_internal[42][3] , \sample_internal[42][2] , 
        \sample_internal[42][1] , \sample_internal[42][0] }), .accum_out({
        \accum_internal[42][11] , \accum_internal[42][10] , 
        \accum_internal[42][9] , \accum_internal[42][8] , 
        \accum_internal[42][7] , \accum_internal[42][6] , 
        \accum_internal[42][5] , \accum_internal[42][4] , 
        \accum_internal[42][3] , \accum_internal[42][2] , 
        \accum_internal[42][1] , \accum_internal[42][0] }) );
  dsp_slice_28 \GEN_SLICE[42].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[42][3] , \sample_internal[42][2] , 
        \sample_internal[42][1] , \sample_internal[42][0] }), .accum_in({
        \accum_internal[42][11] , \accum_internal[42][10] , 
        \accum_internal[42][9] , \accum_internal[42][8] , 
        \accum_internal[42][7] , \accum_internal[42][6] , 
        \accum_internal[42][5] , \accum_internal[42][4] , 
        \accum_internal[42][3] , \accum_internal[42][2] , 
        \accum_internal[42][1] , \accum_internal[42][0] }), .coeff_in({
        \coeff[42][7] , \coeff[42][6] , \coeff[42][5] , \coeff[42][4] , 
        \coeff[42][3] , \coeff[42][2] , \coeff[42][1] , \coeff[42][0] }), 
        .sample_out({\sample_internal[43][3] , \sample_internal[43][2] , 
        \sample_internal[43][1] , \sample_internal[43][0] }), .accum_out({
        \accum_internal[43][11] , \accum_internal[43][10] , 
        \accum_internal[43][9] , \accum_internal[43][8] , 
        \accum_internal[43][7] , \accum_internal[43][6] , 
        \accum_internal[43][5] , \accum_internal[43][4] , 
        \accum_internal[43][3] , \accum_internal[43][2] , 
        \accum_internal[43][1] , \accum_internal[43][0] }) );
  dsp_slice_27 \GEN_SLICE[43].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[43][3] , \sample_internal[43][2] , 
        \sample_internal[43][1] , \sample_internal[43][0] }), .accum_in({
        \accum_internal[43][11] , \accum_internal[43][10] , 
        \accum_internal[43][9] , \accum_internal[43][8] , 
        \accum_internal[43][7] , \accum_internal[43][6] , 
        \accum_internal[43][5] , \accum_internal[43][4] , 
        \accum_internal[43][3] , \accum_internal[43][2] , 
        \accum_internal[43][1] , \accum_internal[43][0] }), .coeff_in({
        \coeff[43][7] , \coeff[43][6] , \coeff[43][5] , \coeff[43][4] , 
        \coeff[43][3] , \coeff[43][2] , \coeff[43][1] , \coeff[43][0] }), 
        .sample_out({\sample_internal[44][3] , \sample_internal[44][2] , 
        \sample_internal[44][1] , \sample_internal[44][0] }), .accum_out({
        \accum_internal[44][11] , \accum_internal[44][10] , 
        \accum_internal[44][9] , \accum_internal[44][8] , 
        \accum_internal[44][7] , \accum_internal[44][6] , 
        \accum_internal[44][5] , \accum_internal[44][4] , 
        \accum_internal[44][3] , \accum_internal[44][2] , 
        \accum_internal[44][1] , \accum_internal[44][0] }) );
  dsp_slice_26 \GEN_SLICE[44].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[44][3] , \sample_internal[44][2] , 
        \sample_internal[44][1] , \sample_internal[44][0] }), .accum_in({
        \accum_internal[44][11] , \accum_internal[44][10] , 
        \accum_internal[44][9] , \accum_internal[44][8] , 
        \accum_internal[44][7] , \accum_internal[44][6] , 
        \accum_internal[44][5] , \accum_internal[44][4] , 
        \accum_internal[44][3] , \accum_internal[44][2] , 
        \accum_internal[44][1] , \accum_internal[44][0] }), .coeff_in({
        \coeff[44][7] , \coeff[44][6] , \coeff[44][5] , \coeff[44][4] , 
        \coeff[44][3] , \coeff[44][2] , \coeff[44][1] , \coeff[44][0] }), 
        .sample_out({\sample_internal[45][3] , \sample_internal[45][2] , 
        \sample_internal[45][1] , \sample_internal[45][0] }), .accum_out({
        \accum_internal[45][11] , \accum_internal[45][10] , 
        \accum_internal[45][9] , \accum_internal[45][8] , 
        \accum_internal[45][7] , \accum_internal[45][6] , 
        \accum_internal[45][5] , \accum_internal[45][4] , 
        \accum_internal[45][3] , \accum_internal[45][2] , 
        \accum_internal[45][1] , \accum_internal[45][0] }) );
  dsp_slice_25 \GEN_SLICE[45].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[45][3] , \sample_internal[45][2] , 
        \sample_internal[45][1] , \sample_internal[45][0] }), .accum_in({
        \accum_internal[45][11] , \accum_internal[45][10] , 
        \accum_internal[45][9] , \accum_internal[45][8] , 
        \accum_internal[45][7] , \accum_internal[45][6] , 
        \accum_internal[45][5] , \accum_internal[45][4] , 
        \accum_internal[45][3] , \accum_internal[45][2] , 
        \accum_internal[45][1] , \accum_internal[45][0] }), .coeff_in({
        \coeff[45][7] , \coeff[45][6] , \coeff[45][5] , \coeff[45][4] , 
        \coeff[45][3] , \coeff[45][2] , \coeff[45][1] , \coeff[45][0] }), 
        .sample_out({\sample_internal[46][3] , \sample_internal[46][2] , 
        \sample_internal[46][1] , \sample_internal[46][0] }), .accum_out({
        \accum_internal[46][11] , \accum_internal[46][10] , 
        \accum_internal[46][9] , \accum_internal[46][8] , 
        \accum_internal[46][7] , \accum_internal[46][6] , 
        \accum_internal[46][5] , \accum_internal[46][4] , 
        \accum_internal[46][3] , \accum_internal[46][2] , 
        \accum_internal[46][1] , \accum_internal[46][0] }) );
  dsp_slice_24 \GEN_SLICE[46].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[46][3] , \sample_internal[46][2] , 
        \sample_internal[46][1] , \sample_internal[46][0] }), .accum_in({
        \accum_internal[46][11] , \accum_internal[46][10] , 
        \accum_internal[46][9] , \accum_internal[46][8] , 
        \accum_internal[46][7] , \accum_internal[46][6] , 
        \accum_internal[46][5] , \accum_internal[46][4] , 
        \accum_internal[46][3] , \accum_internal[46][2] , 
        \accum_internal[46][1] , \accum_internal[46][0] }), .coeff_in({
        \coeff[46][7] , \coeff[46][6] , \coeff[46][5] , \coeff[46][4] , 
        \coeff[46][3] , \coeff[46][2] , \coeff[46][1] , \coeff[46][0] }), 
        .sample_out({\sample_internal[47][3] , \sample_internal[47][2] , 
        \sample_internal[47][1] , \sample_internal[47][0] }), .accum_out({
        \accum_internal[47][11] , \accum_internal[47][10] , 
        \accum_internal[47][9] , \accum_internal[47][8] , 
        \accum_internal[47][7] , \accum_internal[47][6] , 
        \accum_internal[47][5] , \accum_internal[47][4] , 
        \accum_internal[47][3] , \accum_internal[47][2] , 
        \accum_internal[47][1] , \accum_internal[47][0] }) );
  dsp_slice_23 \GEN_SLICE[47].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[47][3] , \sample_internal[47][2] , 
        \sample_internal[47][1] , \sample_internal[47][0] }), .accum_in({
        \accum_internal[47][11] , \accum_internal[47][10] , 
        \accum_internal[47][9] , \accum_internal[47][8] , 
        \accum_internal[47][7] , \accum_internal[47][6] , 
        \accum_internal[47][5] , \accum_internal[47][4] , 
        \accum_internal[47][3] , \accum_internal[47][2] , 
        \accum_internal[47][1] , \accum_internal[47][0] }), .coeff_in({
        \coeff[47][7] , \coeff[47][6] , \coeff[47][5] , \coeff[47][4] , 
        \coeff[47][3] , \coeff[47][2] , \coeff[47][1] , \coeff[47][0] }), 
        .sample_out({\sample_internal[48][3] , \sample_internal[48][2] , 
        \sample_internal[48][1] , \sample_internal[48][0] }), .accum_out({
        \accum_internal[48][11] , \accum_internal[48][10] , 
        \accum_internal[48][9] , \accum_internal[48][8] , 
        \accum_internal[48][7] , \accum_internal[48][6] , 
        \accum_internal[48][5] , \accum_internal[48][4] , 
        \accum_internal[48][3] , \accum_internal[48][2] , 
        \accum_internal[48][1] , \accum_internal[48][0] }) );
  dsp_slice_22 \GEN_SLICE[48].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[48][3] , \sample_internal[48][2] , 
        \sample_internal[48][1] , \sample_internal[48][0] }), .accum_in({
        \accum_internal[48][11] , \accum_internal[48][10] , 
        \accum_internal[48][9] , \accum_internal[48][8] , 
        \accum_internal[48][7] , \accum_internal[48][6] , 
        \accum_internal[48][5] , \accum_internal[48][4] , 
        \accum_internal[48][3] , \accum_internal[48][2] , 
        \accum_internal[48][1] , \accum_internal[48][0] }), .coeff_in({
        \coeff[48][7] , \coeff[48][6] , \coeff[48][5] , \coeff[48][4] , 
        \coeff[48][3] , \coeff[48][2] , \coeff[48][1] , \coeff[48][0] }), 
        .sample_out({\sample_internal[49][3] , \sample_internal[49][2] , 
        \sample_internal[49][1] , \sample_internal[49][0] }), .accum_out({
        \accum_internal[49][11] , \accum_internal[49][10] , 
        \accum_internal[49][9] , \accum_internal[49][8] , 
        \accum_internal[49][7] , \accum_internal[49][6] , 
        \accum_internal[49][5] , \accum_internal[49][4] , 
        \accum_internal[49][3] , \accum_internal[49][2] , 
        \accum_internal[49][1] , \accum_internal[49][0] }) );
  dsp_slice_21 \GEN_SLICE[49].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[49][3] , \sample_internal[49][2] , 
        \sample_internal[49][1] , \sample_internal[49][0] }), .accum_in({
        \accum_internal[49][11] , \accum_internal[49][10] , 
        \accum_internal[49][9] , \accum_internal[49][8] , 
        \accum_internal[49][7] , \accum_internal[49][6] , 
        \accum_internal[49][5] , \accum_internal[49][4] , 
        \accum_internal[49][3] , \accum_internal[49][2] , 
        \accum_internal[49][1] , \accum_internal[49][0] }), .coeff_in({
        \coeff[49][7] , \coeff[49][6] , \coeff[49][5] , \coeff[49][4] , 
        \coeff[49][3] , \coeff[49][2] , \coeff[49][1] , \coeff[49][0] }), 
        .sample_out({\sample_internal[50][3] , \sample_internal[50][2] , 
        \sample_internal[50][1] , \sample_internal[50][0] }), .accum_out({
        \accum_internal[50][11] , \accum_internal[50][10] , 
        \accum_internal[50][9] , \accum_internal[50][8] , 
        \accum_internal[50][7] , \accum_internal[50][6] , 
        \accum_internal[50][5] , \accum_internal[50][4] , 
        \accum_internal[50][3] , \accum_internal[50][2] , 
        \accum_internal[50][1] , \accum_internal[50][0] }) );
  dsp_slice_20 \GEN_SLICE[50].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[50][3] , \sample_internal[50][2] , 
        \sample_internal[50][1] , \sample_internal[50][0] }), .accum_in({
        \accum_internal[50][11] , \accum_internal[50][10] , 
        \accum_internal[50][9] , \accum_internal[50][8] , 
        \accum_internal[50][7] , \accum_internal[50][6] , 
        \accum_internal[50][5] , \accum_internal[50][4] , 
        \accum_internal[50][3] , \accum_internal[50][2] , 
        \accum_internal[50][1] , \accum_internal[50][0] }), .coeff_in({
        \coeff[50][7] , \coeff[50][6] , \coeff[50][5] , \coeff[50][4] , 
        \coeff[50][3] , \coeff[50][2] , \coeff[50][1] , \coeff[50][0] }), 
        .sample_out({\sample_internal[51][3] , \sample_internal[51][2] , 
        \sample_internal[51][1] , \sample_internal[51][0] }), .accum_out({
        \accum_internal[51][11] , \accum_internal[51][10] , 
        \accum_internal[51][9] , \accum_internal[51][8] , 
        \accum_internal[51][7] , \accum_internal[51][6] , 
        \accum_internal[51][5] , \accum_internal[51][4] , 
        \accum_internal[51][3] , \accum_internal[51][2] , 
        \accum_internal[51][1] , \accum_internal[51][0] }) );
  dsp_slice_19 \GEN_SLICE[51].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[51][3] , \sample_internal[51][2] , 
        \sample_internal[51][1] , \sample_internal[51][0] }), .accum_in({
        \accum_internal[51][11] , \accum_internal[51][10] , 
        \accum_internal[51][9] , \accum_internal[51][8] , 
        \accum_internal[51][7] , \accum_internal[51][6] , 
        \accum_internal[51][5] , \accum_internal[51][4] , 
        \accum_internal[51][3] , \accum_internal[51][2] , 
        \accum_internal[51][1] , \accum_internal[51][0] }), .coeff_in({
        \coeff[51][7] , \coeff[51][6] , \coeff[51][5] , \coeff[51][4] , 
        \coeff[51][3] , \coeff[51][2] , \coeff[51][1] , \coeff[51][0] }), 
        .sample_out({\sample_internal[52][3] , \sample_internal[52][2] , 
        \sample_internal[52][1] , \sample_internal[52][0] }), .accum_out({
        \accum_internal[52][11] , \accum_internal[52][10] , 
        \accum_internal[52][9] , \accum_internal[52][8] , 
        \accum_internal[52][7] , \accum_internal[52][6] , 
        \accum_internal[52][5] , \accum_internal[52][4] , 
        \accum_internal[52][3] , \accum_internal[52][2] , 
        \accum_internal[52][1] , \accum_internal[52][0] }) );
  dsp_slice_18 \GEN_SLICE[52].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[52][3] , \sample_internal[52][2] , 
        \sample_internal[52][1] , \sample_internal[52][0] }), .accum_in({
        \accum_internal[52][11] , \accum_internal[52][10] , 
        \accum_internal[52][9] , \accum_internal[52][8] , 
        \accum_internal[52][7] , \accum_internal[52][6] , 
        \accum_internal[52][5] , \accum_internal[52][4] , 
        \accum_internal[52][3] , \accum_internal[52][2] , 
        \accum_internal[52][1] , \accum_internal[52][0] }), .coeff_in({
        \coeff[52][7] , \coeff[52][6] , \coeff[52][5] , \coeff[52][4] , 
        \coeff[52][3] , \coeff[52][2] , \coeff[52][1] , \coeff[52][0] }), 
        .sample_out({\sample_internal[53][3] , \sample_internal[53][2] , 
        \sample_internal[53][1] , \sample_internal[53][0] }), .accum_out({
        \accum_internal[53][11] , \accum_internal[53][10] , 
        \accum_internal[53][9] , \accum_internal[53][8] , 
        \accum_internal[53][7] , \accum_internal[53][6] , 
        \accum_internal[53][5] , \accum_internal[53][4] , 
        \accum_internal[53][3] , \accum_internal[53][2] , 
        \accum_internal[53][1] , \accum_internal[53][0] }) );
  dsp_slice_17 \GEN_SLICE[53].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[53][3] , \sample_internal[53][2] , 
        \sample_internal[53][1] , \sample_internal[53][0] }), .accum_in({
        \accum_internal[53][11] , \accum_internal[53][10] , 
        \accum_internal[53][9] , \accum_internal[53][8] , 
        \accum_internal[53][7] , \accum_internal[53][6] , 
        \accum_internal[53][5] , \accum_internal[53][4] , 
        \accum_internal[53][3] , \accum_internal[53][2] , 
        \accum_internal[53][1] , \accum_internal[53][0] }), .coeff_in({
        \coeff[53][7] , \coeff[53][6] , \coeff[53][5] , \coeff[53][4] , 
        \coeff[53][3] , \coeff[53][2] , \coeff[53][1] , \coeff[53][0] }), 
        .sample_out({\sample_internal[54][3] , \sample_internal[54][2] , 
        \sample_internal[54][1] , \sample_internal[54][0] }), .accum_out({
        \accum_internal[54][11] , \accum_internal[54][10] , 
        \accum_internal[54][9] , \accum_internal[54][8] , 
        \accum_internal[54][7] , \accum_internal[54][6] , 
        \accum_internal[54][5] , \accum_internal[54][4] , 
        \accum_internal[54][3] , \accum_internal[54][2] , 
        \accum_internal[54][1] , \accum_internal[54][0] }) );
  dsp_slice_16 \GEN_SLICE[54].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[54][3] , \sample_internal[54][2] , 
        \sample_internal[54][1] , \sample_internal[54][0] }), .accum_in({
        \accum_internal[54][11] , \accum_internal[54][10] , 
        \accum_internal[54][9] , \accum_internal[54][8] , 
        \accum_internal[54][7] , \accum_internal[54][6] , 
        \accum_internal[54][5] , \accum_internal[54][4] , 
        \accum_internal[54][3] , \accum_internal[54][2] , 
        \accum_internal[54][1] , \accum_internal[54][0] }), .coeff_in({
        \coeff[54][7] , \coeff[54][6] , \coeff[54][5] , \coeff[54][4] , 
        \coeff[54][3] , \coeff[54][2] , \coeff[54][1] , \coeff[54][0] }), 
        .sample_out({\sample_internal[55][3] , \sample_internal[55][2] , 
        \sample_internal[55][1] , \sample_internal[55][0] }), .accum_out({
        \accum_internal[55][11] , \accum_internal[55][10] , 
        \accum_internal[55][9] , \accum_internal[55][8] , 
        \accum_internal[55][7] , \accum_internal[55][6] , 
        \accum_internal[55][5] , \accum_internal[55][4] , 
        \accum_internal[55][3] , \accum_internal[55][2] , 
        \accum_internal[55][1] , \accum_internal[55][0] }) );
  dsp_slice_15 \GEN_SLICE[55].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[55][3] , \sample_internal[55][2] , 
        \sample_internal[55][1] , \sample_internal[55][0] }), .accum_in({
        \accum_internal[55][11] , \accum_internal[55][10] , 
        \accum_internal[55][9] , \accum_internal[55][8] , 
        \accum_internal[55][7] , \accum_internal[55][6] , 
        \accum_internal[55][5] , \accum_internal[55][4] , 
        \accum_internal[55][3] , \accum_internal[55][2] , 
        \accum_internal[55][1] , \accum_internal[55][0] }), .coeff_in({
        \coeff[55][7] , \coeff[55][6] , \coeff[55][5] , \coeff[55][4] , 
        \coeff[55][3] , \coeff[55][2] , \coeff[55][1] , \coeff[55][0] }), 
        .sample_out({\sample_internal[56][3] , \sample_internal[56][2] , 
        \sample_internal[56][1] , \sample_internal[56][0] }), .accum_out({
        \accum_internal[56][11] , \accum_internal[56][10] , 
        \accum_internal[56][9] , \accum_internal[56][8] , 
        \accum_internal[56][7] , \accum_internal[56][6] , 
        \accum_internal[56][5] , \accum_internal[56][4] , 
        \accum_internal[56][3] , \accum_internal[56][2] , 
        \accum_internal[56][1] , \accum_internal[56][0] }) );
  dsp_slice_14 \GEN_SLICE[56].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[56][3] , \sample_internal[56][2] , 
        \sample_internal[56][1] , \sample_internal[56][0] }), .accum_in({
        \accum_internal[56][11] , \accum_internal[56][10] , 
        \accum_internal[56][9] , \accum_internal[56][8] , 
        \accum_internal[56][7] , \accum_internal[56][6] , 
        \accum_internal[56][5] , \accum_internal[56][4] , 
        \accum_internal[56][3] , \accum_internal[56][2] , 
        \accum_internal[56][1] , \accum_internal[56][0] }), .coeff_in({
        \coeff[56][7] , \coeff[56][6] , \coeff[56][5] , \coeff[56][4] , 
        \coeff[56][3] , \coeff[56][2] , \coeff[56][1] , \coeff[56][0] }), 
        .sample_out({\sample_internal[57][3] , \sample_internal[57][2] , 
        \sample_internal[57][1] , \sample_internal[57][0] }), .accum_out({
        \accum_internal[57][11] , \accum_internal[57][10] , 
        \accum_internal[57][9] , \accum_internal[57][8] , 
        \accum_internal[57][7] , \accum_internal[57][6] , 
        \accum_internal[57][5] , \accum_internal[57][4] , 
        \accum_internal[57][3] , \accum_internal[57][2] , 
        \accum_internal[57][1] , \accum_internal[57][0] }) );
  dsp_slice_13 \GEN_SLICE[57].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[57][3] , \sample_internal[57][2] , 
        \sample_internal[57][1] , \sample_internal[57][0] }), .accum_in({
        \accum_internal[57][11] , \accum_internal[57][10] , 
        \accum_internal[57][9] , \accum_internal[57][8] , 
        \accum_internal[57][7] , \accum_internal[57][6] , 
        \accum_internal[57][5] , \accum_internal[57][4] , 
        \accum_internal[57][3] , \accum_internal[57][2] , 
        \accum_internal[57][1] , \accum_internal[57][0] }), .coeff_in({
        \coeff[57][7] , \coeff[57][6] , \coeff[57][5] , \coeff[57][4] , 
        \coeff[57][3] , \coeff[57][2] , \coeff[57][1] , \coeff[57][0] }), 
        .sample_out({\sample_internal[58][3] , \sample_internal[58][2] , 
        \sample_internal[58][1] , \sample_internal[58][0] }), .accum_out({
        \accum_internal[58][11] , \accum_internal[58][10] , 
        \accum_internal[58][9] , \accum_internal[58][8] , 
        \accum_internal[58][7] , \accum_internal[58][6] , 
        \accum_internal[58][5] , \accum_internal[58][4] , 
        \accum_internal[58][3] , \accum_internal[58][2] , 
        \accum_internal[58][1] , \accum_internal[58][0] }) );
  dsp_slice_12 \GEN_SLICE[58].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[58][3] , \sample_internal[58][2] , 
        \sample_internal[58][1] , \sample_internal[58][0] }), .accum_in({
        \accum_internal[58][11] , \accum_internal[58][10] , 
        \accum_internal[58][9] , \accum_internal[58][8] , 
        \accum_internal[58][7] , \accum_internal[58][6] , 
        \accum_internal[58][5] , \accum_internal[58][4] , 
        \accum_internal[58][3] , \accum_internal[58][2] , 
        \accum_internal[58][1] , \accum_internal[58][0] }), .coeff_in({
        \coeff[58][7] , \coeff[58][6] , \coeff[58][5] , \coeff[58][4] , 
        \coeff[58][3] , \coeff[58][2] , \coeff[58][1] , \coeff[58][0] }), 
        .sample_out({\sample_internal[59][3] , \sample_internal[59][2] , 
        \sample_internal[59][1] , \sample_internal[59][0] }), .accum_out({
        \accum_internal[59][11] , \accum_internal[59][10] , 
        \accum_internal[59][9] , \accum_internal[59][8] , 
        \accum_internal[59][7] , \accum_internal[59][6] , 
        \accum_internal[59][5] , \accum_internal[59][4] , 
        \accum_internal[59][3] , \accum_internal[59][2] , 
        \accum_internal[59][1] , \accum_internal[59][0] }) );
  dsp_slice_11 \GEN_SLICE[59].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[59][3] , \sample_internal[59][2] , 
        \sample_internal[59][1] , \sample_internal[59][0] }), .accum_in({
        \accum_internal[59][11] , \accum_internal[59][10] , 
        \accum_internal[59][9] , \accum_internal[59][8] , 
        \accum_internal[59][7] , \accum_internal[59][6] , 
        \accum_internal[59][5] , \accum_internal[59][4] , 
        \accum_internal[59][3] , \accum_internal[59][2] , 
        \accum_internal[59][1] , \accum_internal[59][0] }), .coeff_in({
        \coeff[59][7] , \coeff[59][6] , \coeff[59][5] , \coeff[59][4] , 
        \coeff[59][3] , \coeff[59][2] , \coeff[59][1] , \coeff[59][0] }), 
        .sample_out({\sample_internal[60][3] , \sample_internal[60][2] , 
        \sample_internal[60][1] , \sample_internal[60][0] }), .accum_out({
        \accum_internal[60][11] , \accum_internal[60][10] , 
        \accum_internal[60][9] , \accum_internal[60][8] , 
        \accum_internal[60][7] , \accum_internal[60][6] , 
        \accum_internal[60][5] , \accum_internal[60][4] , 
        \accum_internal[60][3] , \accum_internal[60][2] , 
        \accum_internal[60][1] , \accum_internal[60][0] }) );
  dsp_slice_10 \GEN_SLICE[60].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[60][3] , \sample_internal[60][2] , 
        \sample_internal[60][1] , \sample_internal[60][0] }), .accum_in({
        \accum_internal[60][11] , \accum_internal[60][10] , 
        \accum_internal[60][9] , \accum_internal[60][8] , 
        \accum_internal[60][7] , \accum_internal[60][6] , 
        \accum_internal[60][5] , \accum_internal[60][4] , 
        \accum_internal[60][3] , \accum_internal[60][2] , 
        \accum_internal[60][1] , \accum_internal[60][0] }), .coeff_in({
        \coeff[60][7] , \coeff[60][6] , \coeff[60][5] , \coeff[60][4] , 
        \coeff[60][3] , \coeff[60][2] , \coeff[60][1] , \coeff[60][0] }), 
        .sample_out({\sample_internal[61][3] , \sample_internal[61][2] , 
        \sample_internal[61][1] , \sample_internal[61][0] }), .accum_out({
        \accum_internal[61][11] , \accum_internal[61][10] , 
        \accum_internal[61][9] , \accum_internal[61][8] , 
        \accum_internal[61][7] , \accum_internal[61][6] , 
        \accum_internal[61][5] , \accum_internal[61][4] , 
        \accum_internal[61][3] , \accum_internal[61][2] , 
        \accum_internal[61][1] , \accum_internal[61][0] }) );
  dsp_slice_9 \GEN_SLICE[61].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[61][3] , \sample_internal[61][2] , 
        \sample_internal[61][1] , \sample_internal[61][0] }), .accum_in({
        \accum_internal[61][11] , \accum_internal[61][10] , 
        \accum_internal[61][9] , \accum_internal[61][8] , 
        \accum_internal[61][7] , \accum_internal[61][6] , 
        \accum_internal[61][5] , \accum_internal[61][4] , 
        \accum_internal[61][3] , \accum_internal[61][2] , 
        \accum_internal[61][1] , \accum_internal[61][0] }), .coeff_in({
        \coeff[61][7] , \coeff[61][6] , \coeff[61][5] , \coeff[61][4] , 
        \coeff[61][3] , \coeff[61][2] , \coeff[61][1] , \coeff[61][0] }), 
        .sample_out({\sample_internal[62][3] , \sample_internal[62][2] , 
        \sample_internal[62][1] , \sample_internal[62][0] }), .accum_out({
        \accum_internal[62][11] , \accum_internal[62][10] , 
        \accum_internal[62][9] , \accum_internal[62][8] , 
        \accum_internal[62][7] , \accum_internal[62][6] , 
        \accum_internal[62][5] , \accum_internal[62][4] , 
        \accum_internal[62][3] , \accum_internal[62][2] , 
        \accum_internal[62][1] , \accum_internal[62][0] }) );
  dsp_slice_8 \GEN_SLICE[62].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[62][3] , \sample_internal[62][2] , 
        \sample_internal[62][1] , \sample_internal[62][0] }), .accum_in({
        \accum_internal[62][11] , \accum_internal[62][10] , 
        \accum_internal[62][9] , \accum_internal[62][8] , 
        \accum_internal[62][7] , \accum_internal[62][6] , 
        \accum_internal[62][5] , \accum_internal[62][4] , 
        \accum_internal[62][3] , \accum_internal[62][2] , 
        \accum_internal[62][1] , \accum_internal[62][0] }), .coeff_in({
        \coeff[62][7] , \coeff[62][6] , \coeff[62][5] , \coeff[62][4] , 
        \coeff[62][3] , \coeff[62][2] , \coeff[62][1] , \coeff[62][0] }), 
        .sample_out({\sample_internal[63][3] , \sample_internal[63][2] , 
        \sample_internal[63][1] , \sample_internal[63][0] }), .accum_out({
        \accum_internal[63][11] , \accum_internal[63][10] , 
        \accum_internal[63][9] , \accum_internal[63][8] , 
        \accum_internal[63][7] , \accum_internal[63][6] , 
        \accum_internal[63][5] , \accum_internal[63][4] , 
        \accum_internal[63][3] , \accum_internal[63][2] , 
        \accum_internal[63][1] , \accum_internal[63][0] }) );
  dsp_slice_7 \GEN_SLICE[63].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[63][3] , \sample_internal[63][2] , 
        \sample_internal[63][1] , \sample_internal[63][0] }), .accum_in({
        \accum_internal[63][11] , \accum_internal[63][10] , 
        \accum_internal[63][9] , \accum_internal[63][8] , 
        \accum_internal[63][7] , \accum_internal[63][6] , 
        \accum_internal[63][5] , \accum_internal[63][4] , 
        \accum_internal[63][3] , \accum_internal[63][2] , 
        \accum_internal[63][1] , \accum_internal[63][0] }), .coeff_in({
        \coeff[63][7] , \coeff[63][6] , \coeff[63][5] , \coeff[63][4] , 
        \coeff[63][3] , \coeff[63][2] , \coeff[63][1] , \coeff[63][0] }), 
        .sample_out({\sample_internal[64][3] , \sample_internal[64][2] , 
        \sample_internal[64][1] , \sample_internal[64][0] }), .accum_out({
        \accum_internal[64][11] , \accum_internal[64][10] , 
        \accum_internal[64][9] , \accum_internal[64][8] , 
        \accum_internal[64][7] , \accum_internal[64][6] , 
        \accum_internal[64][5] , \accum_internal[64][4] , 
        \accum_internal[64][3] , \accum_internal[64][2] , 
        \accum_internal[64][1] , \accum_internal[64][0] }) );
  dsp_slice_6 \GEN_SLICE[64].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[64][3] , \sample_internal[64][2] , 
        \sample_internal[64][1] , \sample_internal[64][0] }), .accum_in({
        \accum_internal[64][11] , \accum_internal[64][10] , 
        \accum_internal[64][9] , \accum_internal[64][8] , 
        \accum_internal[64][7] , \accum_internal[64][6] , 
        \accum_internal[64][5] , \accum_internal[64][4] , 
        \accum_internal[64][3] , \accum_internal[64][2] , 
        \accum_internal[64][1] , \accum_internal[64][0] }), .coeff_in({
        \coeff[64][7] , \coeff[64][6] , \coeff[64][5] , \coeff[64][4] , 
        \coeff[64][3] , \coeff[64][2] , \coeff[64][1] , \coeff[64][0] }), 
        .sample_out({\sample_internal[65][3] , \sample_internal[65][2] , 
        \sample_internal[65][1] , \sample_internal[65][0] }), .accum_out({
        \accum_internal[65][11] , \accum_internal[65][10] , 
        \accum_internal[65][9] , \accum_internal[65][8] , 
        \accum_internal[65][7] , \accum_internal[65][6] , 
        \accum_internal[65][5] , \accum_internal[65][4] , 
        \accum_internal[65][3] , \accum_internal[65][2] , 
        \accum_internal[65][1] , \accum_internal[65][0] }) );
  dsp_slice_5 \GEN_SLICE[65].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[65][3] , \sample_internal[65][2] , 
        \sample_internal[65][1] , \sample_internal[65][0] }), .accum_in({
        \accum_internal[65][11] , \accum_internal[65][10] , 
        \accum_internal[65][9] , \accum_internal[65][8] , 
        \accum_internal[65][7] , \accum_internal[65][6] , 
        \accum_internal[65][5] , \accum_internal[65][4] , 
        \accum_internal[65][3] , \accum_internal[65][2] , 
        \accum_internal[65][1] , \accum_internal[65][0] }), .coeff_in({
        \coeff[65][7] , \coeff[65][6] , \coeff[65][5] , \coeff[65][4] , 
        \coeff[65][3] , \coeff[65][2] , \coeff[65][1] , \coeff[65][0] }), 
        .sample_out({\sample_internal[66][3] , \sample_internal[66][2] , 
        \sample_internal[66][1] , \sample_internal[66][0] }), .accum_out({
        \accum_internal[66][11] , \accum_internal[66][10] , 
        \accum_internal[66][9] , \accum_internal[66][8] , 
        \accum_internal[66][7] , \accum_internal[66][6] , 
        \accum_internal[66][5] , \accum_internal[66][4] , 
        \accum_internal[66][3] , \accum_internal[66][2] , 
        \accum_internal[66][1] , \accum_internal[66][0] }) );
  dsp_slice_4 \GEN_SLICE[66].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[66][3] , \sample_internal[66][2] , 
        \sample_internal[66][1] , \sample_internal[66][0] }), .accum_in({
        \accum_internal[66][11] , \accum_internal[66][10] , 
        \accum_internal[66][9] , \accum_internal[66][8] , 
        \accum_internal[66][7] , \accum_internal[66][6] , 
        \accum_internal[66][5] , \accum_internal[66][4] , 
        \accum_internal[66][3] , \accum_internal[66][2] , 
        \accum_internal[66][1] , \accum_internal[66][0] }), .coeff_in({
        \coeff[66][7] , \coeff[66][6] , \coeff[66][5] , \coeff[66][4] , 
        \coeff[66][3] , \coeff[66][2] , \coeff[66][1] , \coeff[66][0] }), 
        .sample_out({\sample_internal[67][3] , \sample_internal[67][2] , 
        \sample_internal[67][1] , \sample_internal[67][0] }), .accum_out({
        \accum_internal[67][11] , \accum_internal[67][10] , 
        \accum_internal[67][9] , \accum_internal[67][8] , 
        \accum_internal[67][7] , \accum_internal[67][6] , 
        \accum_internal[67][5] , \accum_internal[67][4] , 
        \accum_internal[67][3] , \accum_internal[67][2] , 
        \accum_internal[67][1] , \accum_internal[67][0] }) );
  dsp_slice_3 \GEN_SLICE[67].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[67][3] , \sample_internal[67][2] , 
        \sample_internal[67][1] , \sample_internal[67][0] }), .accum_in({
        \accum_internal[67][11] , \accum_internal[67][10] , 
        \accum_internal[67][9] , \accum_internal[67][8] , 
        \accum_internal[67][7] , \accum_internal[67][6] , 
        \accum_internal[67][5] , \accum_internal[67][4] , 
        \accum_internal[67][3] , \accum_internal[67][2] , 
        \accum_internal[67][1] , \accum_internal[67][0] }), .coeff_in({
        \coeff[67][7] , \coeff[67][6] , \coeff[67][5] , \coeff[67][4] , 
        \coeff[67][3] , \coeff[67][2] , \coeff[67][1] , \coeff[67][0] }), 
        .sample_out({\sample_internal[68][3] , \sample_internal[68][2] , 
        \sample_internal[68][1] , \sample_internal[68][0] }), .accum_out({
        \accum_internal[68][11] , \accum_internal[68][10] , 
        \accum_internal[68][9] , \accum_internal[68][8] , 
        \accum_internal[68][7] , \accum_internal[68][6] , 
        \accum_internal[68][5] , \accum_internal[68][4] , 
        \accum_internal[68][3] , \accum_internal[68][2] , 
        \accum_internal[68][1] , \accum_internal[68][0] }) );
  dsp_slice_2 \GEN_SLICE[68].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[68][3] , \sample_internal[68][2] , 
        \sample_internal[68][1] , \sample_internal[68][0] }), .accum_in({
        \accum_internal[68][11] , \accum_internal[68][10] , 
        \accum_internal[68][9] , \accum_internal[68][8] , 
        \accum_internal[68][7] , \accum_internal[68][6] , 
        \accum_internal[68][5] , \accum_internal[68][4] , 
        \accum_internal[68][3] , \accum_internal[68][2] , 
        \accum_internal[68][1] , \accum_internal[68][0] }), .coeff_in({
        \coeff[68][7] , \coeff[68][6] , \coeff[68][5] , \coeff[68][4] , 
        \coeff[68][3] , \coeff[68][2] , \coeff[68][1] , \coeff[68][0] }), 
        .sample_out({\sample_internal[69][3] , \sample_internal[69][2] , 
        \sample_internal[69][1] , \sample_internal[69][0] }), .accum_out({
        \accum_internal[69][11] , \accum_internal[69][10] , 
        \accum_internal[69][9] , \accum_internal[69][8] , 
        \accum_internal[69][7] , \accum_internal[69][6] , 
        \accum_internal[69][5] , \accum_internal[69][4] , 
        \accum_internal[69][3] , \accum_internal[69][2] , 
        \accum_internal[69][1] , \accum_internal[69][0] }) );
  dsp_slice_1 \GEN_SLICE[69].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[69][3] , \sample_internal[69][2] , 
        \sample_internal[69][1] , \sample_internal[69][0] }), .accum_in({
        \accum_internal[69][11] , \accum_internal[69][10] , 
        \accum_internal[69][9] , \accum_internal[69][8] , 
        \accum_internal[69][7] , \accum_internal[69][6] , 
        \accum_internal[69][5] , \accum_internal[69][4] , 
        \accum_internal[69][3] , \accum_internal[69][2] , 
        \accum_internal[69][1] , \accum_internal[69][0] }), .coeff_in({
        \coeff[69][7] , \coeff[69][6] , \coeff[69][5] , \coeff[69][4] , 
        \coeff[69][3] , \coeff[69][2] , \coeff[69][1] , \coeff[69][0] }), 
        .sample_out({\sample_internal[70][3] , \sample_internal[70][2] , 
        \sample_internal[70][1] , \sample_internal[70][0] }), .accum_out({
        \accum_internal[70][11] , \accum_internal[70][10] , 
        \accum_internal[70][9] , \accum_internal[70][8] , 
        \accum_internal[70][7] , \accum_internal[70][6] , 
        \accum_internal[70][5] , \accum_internal[70][4] , 
        \accum_internal[70][3] , \accum_internal[70][2] , 
        \accum_internal[70][1] , \accum_internal[70][0] }) );
  dsp_slice_0 \GEN_SLICE[70].u_fir_slice  ( .clk(clk), .sample_in({
        \sample_internal[70][3] , \sample_internal[70][2] , 
        \sample_internal[70][1] , \sample_internal[70][0] }), .accum_in({
        \accum_internal[70][11] , \accum_internal[70][10] , 
        \accum_internal[70][9] , \accum_internal[70][8] , 
        \accum_internal[70][7] , \accum_internal[70][6] , 
        \accum_internal[70][5] , \accum_internal[70][4] , 
        \accum_internal[70][3] , \accum_internal[70][2] , 
        \accum_internal[70][1] , \accum_internal[70][0] }), .coeff_in({
        \coeff[70][7] , \coeff[70][6] , \coeff[70][5] , \coeff[70][4] , 
        \coeff[70][3] , \coeff[70][2] , \coeff[70][1] , \coeff[70][0] }), 
        .accum_out(fir_out) );
  coeff_memory u_coeff_memory ( .clk(clk), .coeff_in(coeff_in), .coeff_addr(
        coeff_addr), .coeff_write(coeff_write), .coeff_read(coeff_read), 
        .coeff_out0({\coeff[0][7] , \coeff[0][6] , \coeff[0][5] , 
        \coeff[0][4] , \coeff[0][3] , \coeff[0][2] , \coeff[0][1] , 
        \coeff[0][0] }), .coeff_out1({\coeff[1][7] , \coeff[1][6] , 
        \coeff[1][5] , \coeff[1][4] , \coeff[1][3] , \coeff[1][2] , 
        \coeff[1][1] , \coeff[1][0] }), .coeff_out2({\coeff[2][7] , 
        \coeff[2][6] , \coeff[2][5] , \coeff[2][4] , \coeff[2][3] , 
        \coeff[2][2] , \coeff[2][1] , \coeff[2][0] }), .coeff_out3({
        \coeff[3][7] , \coeff[3][6] , \coeff[3][5] , \coeff[3][4] , 
        \coeff[3][3] , \coeff[3][2] , \coeff[3][1] , \coeff[3][0] }), 
        .coeff_out4({\coeff[4][7] , \coeff[4][6] , \coeff[4][5] , 
        \coeff[4][4] , \coeff[4][3] , \coeff[4][2] , \coeff[4][1] , 
        \coeff[4][0] }), .coeff_out5({\coeff[5][7] , \coeff[5][6] , 
        \coeff[5][5] , \coeff[5][4] , \coeff[5][3] , \coeff[5][2] , 
        \coeff[5][1] , \coeff[5][0] }), .coeff_out6({\coeff[6][7] , 
        \coeff[6][6] , \coeff[6][5] , \coeff[6][4] , \coeff[6][3] , 
        \coeff[6][2] , \coeff[6][1] , \coeff[6][0] }), .coeff_out7({
        \coeff[7][7] , \coeff[7][6] , \coeff[7][5] , \coeff[7][4] , 
        \coeff[7][3] , \coeff[7][2] , \coeff[7][1] , \coeff[7][0] }), 
        .coeff_out8({\coeff[8][7] , \coeff[8][6] , \coeff[8][5] , 
        \coeff[8][4] , \coeff[8][3] , \coeff[8][2] , \coeff[8][1] , 
        \coeff[8][0] }), .coeff_out9({\coeff[9][7] , \coeff[9][6] , 
        \coeff[9][5] , \coeff[9][4] , \coeff[9][3] , \coeff[9][2] , 
        \coeff[9][1] , \coeff[9][0] }), .coeff_out10({\coeff[10][7] , 
        \coeff[10][6] , \coeff[10][5] , \coeff[10][4] , \coeff[10][3] , 
        \coeff[10][2] , \coeff[10][1] , \coeff[10][0] }), .coeff_out11({
        \coeff[11][7] , \coeff[11][6] , \coeff[11][5] , \coeff[11][4] , 
        \coeff[11][3] , \coeff[11][2] , \coeff[11][1] , \coeff[11][0] }), 
        .coeff_out12({\coeff[12][7] , \coeff[12][6] , \coeff[12][5] , 
        \coeff[12][4] , \coeff[12][3] , \coeff[12][2] , \coeff[12][1] , 
        \coeff[12][0] }), .coeff_out13({\coeff[13][7] , \coeff[13][6] , 
        \coeff[13][5] , \coeff[13][4] , \coeff[13][3] , \coeff[13][2] , 
        \coeff[13][1] , \coeff[13][0] }), .coeff_out14({\coeff[14][7] , 
        \coeff[14][6] , \coeff[14][5] , \coeff[14][4] , \coeff[14][3] , 
        \coeff[14][2] , \coeff[14][1] , \coeff[14][0] }), .coeff_out15({
        \coeff[15][7] , \coeff[15][6] , \coeff[15][5] , \coeff[15][4] , 
        \coeff[15][3] , \coeff[15][2] , \coeff[15][1] , \coeff[15][0] }), 
        .coeff_out16({\coeff[16][7] , \coeff[16][6] , \coeff[16][5] , 
        \coeff[16][4] , \coeff[16][3] , \coeff[16][2] , \coeff[16][1] , 
        \coeff[16][0] }), .coeff_out17({\coeff[17][7] , \coeff[17][6] , 
        \coeff[17][5] , \coeff[17][4] , \coeff[17][3] , \coeff[17][2] , 
        \coeff[17][1] , \coeff[17][0] }), .coeff_out18({\coeff[18][7] , 
        \coeff[18][6] , \coeff[18][5] , \coeff[18][4] , \coeff[18][3] , 
        \coeff[18][2] , \coeff[18][1] , \coeff[18][0] }), .coeff_out19({
        \coeff[19][7] , \coeff[19][6] , \coeff[19][5] , \coeff[19][4] , 
        \coeff[19][3] , \coeff[19][2] , \coeff[19][1] , \coeff[19][0] }), 
        .coeff_out20({\coeff[20][7] , \coeff[20][6] , \coeff[20][5] , 
        \coeff[20][4] , \coeff[20][3] , \coeff[20][2] , \coeff[20][1] , 
        \coeff[20][0] }), .coeff_out21({\coeff[21][7] , \coeff[21][6] , 
        \coeff[21][5] , \coeff[21][4] , \coeff[21][3] , \coeff[21][2] , 
        \coeff[21][1] , \coeff[21][0] }), .coeff_out22({\coeff[22][7] , 
        \coeff[22][6] , \coeff[22][5] , \coeff[22][4] , \coeff[22][3] , 
        \coeff[22][2] , \coeff[22][1] , \coeff[22][0] }), .coeff_out23({
        \coeff[23][7] , \coeff[23][6] , \coeff[23][5] , \coeff[23][4] , 
        \coeff[23][3] , \coeff[23][2] , \coeff[23][1] , \coeff[23][0] }), 
        .coeff_out24({\coeff[24][7] , \coeff[24][6] , \coeff[24][5] , 
        \coeff[24][4] , \coeff[24][3] , \coeff[24][2] , \coeff[24][1] , 
        \coeff[24][0] }), .coeff_out25({\coeff[25][7] , \coeff[25][6] , 
        \coeff[25][5] , \coeff[25][4] , \coeff[25][3] , \coeff[25][2] , 
        \coeff[25][1] , \coeff[25][0] }), .coeff_out26({\coeff[26][7] , 
        \coeff[26][6] , \coeff[26][5] , \coeff[26][4] , \coeff[26][3] , 
        \coeff[26][2] , \coeff[26][1] , \coeff[26][0] }), .coeff_out27({
        \coeff[27][7] , \coeff[27][6] , \coeff[27][5] , \coeff[27][4] , 
        \coeff[27][3] , \coeff[27][2] , \coeff[27][1] , \coeff[27][0] }), 
        .coeff_out28({\coeff[28][7] , \coeff[28][6] , \coeff[28][5] , 
        \coeff[28][4] , \coeff[28][3] , \coeff[28][2] , \coeff[28][1] , 
        \coeff[28][0] }), .coeff_out29({\coeff[29][7] , \coeff[29][6] , 
        \coeff[29][5] , \coeff[29][4] , \coeff[29][3] , \coeff[29][2] , 
        \coeff[29][1] , \coeff[29][0] }), .coeff_out30({\coeff[30][7] , 
        \coeff[30][6] , \coeff[30][5] , \coeff[30][4] , \coeff[30][3] , 
        \coeff[30][2] , \coeff[30][1] , \coeff[30][0] }), .coeff_out31({
        \coeff[31][7] , \coeff[31][6] , \coeff[31][5] , \coeff[31][4] , 
        \coeff[31][3] , \coeff[31][2] , \coeff[31][1] , \coeff[31][0] }), 
        .coeff_out32({\coeff[32][7] , \coeff[32][6] , \coeff[32][5] , 
        \coeff[32][4] , \coeff[32][3] , \coeff[32][2] , \coeff[32][1] , 
        \coeff[32][0] }), .coeff_out33({\coeff[33][7] , \coeff[33][6] , 
        \coeff[33][5] , \coeff[33][4] , \coeff[33][3] , \coeff[33][2] , 
        \coeff[33][1] , \coeff[33][0] }), .coeff_out34({\coeff[34][7] , 
        \coeff[34][6] , \coeff[34][5] , \coeff[34][4] , \coeff[34][3] , 
        \coeff[34][2] , \coeff[34][1] , \coeff[34][0] }), .coeff_out35({
        \coeff[35][7] , \coeff[35][6] , \coeff[35][5] , \coeff[35][4] , 
        \coeff[35][3] , \coeff[35][2] , \coeff[35][1] , \coeff[35][0] }), 
        .coeff_out36({\coeff[36][7] , \coeff[36][6] , \coeff[36][5] , 
        \coeff[36][4] , \coeff[36][3] , \coeff[36][2] , \coeff[36][1] , 
        \coeff[36][0] }), .coeff_out37({\coeff[37][7] , \coeff[37][6] , 
        \coeff[37][5] , \coeff[37][4] , \coeff[37][3] , \coeff[37][2] , 
        \coeff[37][1] , \coeff[37][0] }), .coeff_out38({\coeff[38][7] , 
        \coeff[38][6] , \coeff[38][5] , \coeff[38][4] , \coeff[38][3] , 
        \coeff[38][2] , \coeff[38][1] , \coeff[38][0] }), .coeff_out39({
        \coeff[39][7] , \coeff[39][6] , \coeff[39][5] , \coeff[39][4] , 
        \coeff[39][3] , \coeff[39][2] , \coeff[39][1] , \coeff[39][0] }), 
        .coeff_out40({\coeff[40][7] , \coeff[40][6] , \coeff[40][5] , 
        \coeff[40][4] , \coeff[40][3] , \coeff[40][2] , \coeff[40][1] , 
        \coeff[40][0] }), .coeff_out41({\coeff[41][7] , \coeff[41][6] , 
        \coeff[41][5] , \coeff[41][4] , \coeff[41][3] , \coeff[41][2] , 
        \coeff[41][1] , \coeff[41][0] }), .coeff_out42({\coeff[42][7] , 
        \coeff[42][6] , \coeff[42][5] , \coeff[42][4] , \coeff[42][3] , 
        \coeff[42][2] , \coeff[42][1] , \coeff[42][0] }), .coeff_out43({
        \coeff[43][7] , \coeff[43][6] , \coeff[43][5] , \coeff[43][4] , 
        \coeff[43][3] , \coeff[43][2] , \coeff[43][1] , \coeff[43][0] }), 
        .coeff_out44({\coeff[44][7] , \coeff[44][6] , \coeff[44][5] , 
        \coeff[44][4] , \coeff[44][3] , \coeff[44][2] , \coeff[44][1] , 
        \coeff[44][0] }), .coeff_out45({\coeff[45][7] , \coeff[45][6] , 
        \coeff[45][5] , \coeff[45][4] , \coeff[45][3] , \coeff[45][2] , 
        \coeff[45][1] , \coeff[45][0] }), .coeff_out46({\coeff[46][7] , 
        \coeff[46][6] , \coeff[46][5] , \coeff[46][4] , \coeff[46][3] , 
        \coeff[46][2] , \coeff[46][1] , \coeff[46][0] }), .coeff_out47({
        \coeff[47][7] , \coeff[47][6] , \coeff[47][5] , \coeff[47][4] , 
        \coeff[47][3] , \coeff[47][2] , \coeff[47][1] , \coeff[47][0] }), 
        .coeff_out48({\coeff[48][7] , \coeff[48][6] , \coeff[48][5] , 
        \coeff[48][4] , \coeff[48][3] , \coeff[48][2] , \coeff[48][1] , 
        \coeff[48][0] }), .coeff_out49({\coeff[49][7] , \coeff[49][6] , 
        \coeff[49][5] , \coeff[49][4] , \coeff[49][3] , \coeff[49][2] , 
        \coeff[49][1] , \coeff[49][0] }), .coeff_out50({\coeff[50][7] , 
        \coeff[50][6] , \coeff[50][5] , \coeff[50][4] , \coeff[50][3] , 
        \coeff[50][2] , \coeff[50][1] , \coeff[50][0] }), .coeff_out51({
        \coeff[51][7] , \coeff[51][6] , \coeff[51][5] , \coeff[51][4] , 
        \coeff[51][3] , \coeff[51][2] , \coeff[51][1] , \coeff[51][0] }), 
        .coeff_out52({\coeff[52][7] , \coeff[52][6] , \coeff[52][5] , 
        \coeff[52][4] , \coeff[52][3] , \coeff[52][2] , \coeff[52][1] , 
        \coeff[52][0] }), .coeff_out53({\coeff[53][7] , \coeff[53][6] , 
        \coeff[53][5] , \coeff[53][4] , \coeff[53][3] , \coeff[53][2] , 
        \coeff[53][1] , \coeff[53][0] }), .coeff_out54({\coeff[54][7] , 
        \coeff[54][6] , \coeff[54][5] , \coeff[54][4] , \coeff[54][3] , 
        \coeff[54][2] , \coeff[54][1] , \coeff[54][0] }), .coeff_out55({
        \coeff[55][7] , \coeff[55][6] , \coeff[55][5] , \coeff[55][4] , 
        \coeff[55][3] , \coeff[55][2] , \coeff[55][1] , \coeff[55][0] }), 
        .coeff_out56({\coeff[56][7] , \coeff[56][6] , \coeff[56][5] , 
        \coeff[56][4] , \coeff[56][3] , \coeff[56][2] , \coeff[56][1] , 
        \coeff[56][0] }), .coeff_out57({\coeff[57][7] , \coeff[57][6] , 
        \coeff[57][5] , \coeff[57][4] , \coeff[57][3] , \coeff[57][2] , 
        \coeff[57][1] , \coeff[57][0] }), .coeff_out58({\coeff[58][7] , 
        \coeff[58][6] , \coeff[58][5] , \coeff[58][4] , \coeff[58][3] , 
        \coeff[58][2] , \coeff[58][1] , \coeff[58][0] }), .coeff_out59({
        \coeff[59][7] , \coeff[59][6] , \coeff[59][5] , \coeff[59][4] , 
        \coeff[59][3] , \coeff[59][2] , \coeff[59][1] , \coeff[59][0] }), 
        .coeff_out60({\coeff[60][7] , \coeff[60][6] , \coeff[60][5] , 
        \coeff[60][4] , \coeff[60][3] , \coeff[60][2] , \coeff[60][1] , 
        \coeff[60][0] }), .coeff_out61({\coeff[61][7] , \coeff[61][6] , 
        \coeff[61][5] , \coeff[61][4] , \coeff[61][3] , \coeff[61][2] , 
        \coeff[61][1] , \coeff[61][0] }), .coeff_out62({\coeff[62][7] , 
        \coeff[62][6] , \coeff[62][5] , \coeff[62][4] , \coeff[62][3] , 
        \coeff[62][2] , \coeff[62][1] , \coeff[62][0] }), .coeff_out63({
        \coeff[63][7] , \coeff[63][6] , \coeff[63][5] , \coeff[63][4] , 
        \coeff[63][3] , \coeff[63][2] , \coeff[63][1] , \coeff[63][0] }), 
        .coeff_out64({\coeff[64][7] , \coeff[64][6] , \coeff[64][5] , 
        \coeff[64][4] , \coeff[64][3] , \coeff[64][2] , \coeff[64][1] , 
        \coeff[64][0] }), .coeff_out65({\coeff[65][7] , \coeff[65][6] , 
        \coeff[65][5] , \coeff[65][4] , \coeff[65][3] , \coeff[65][2] , 
        \coeff[65][1] , \coeff[65][0] }), .coeff_out66({\coeff[66][7] , 
        \coeff[66][6] , \coeff[66][5] , \coeff[66][4] , \coeff[66][3] , 
        \coeff[66][2] , \coeff[66][1] , \coeff[66][0] }), .coeff_out67({
        \coeff[67][7] , \coeff[67][6] , \coeff[67][5] , \coeff[67][4] , 
        \coeff[67][3] , \coeff[67][2] , \coeff[67][1] , \coeff[67][0] }), 
        .coeff_out68({\coeff[68][7] , \coeff[68][6] , \coeff[68][5] , 
        \coeff[68][4] , \coeff[68][3] , \coeff[68][2] , \coeff[68][1] , 
        \coeff[68][0] }), .coeff_out69({\coeff[69][7] , \coeff[69][6] , 
        \coeff[69][5] , \coeff[69][4] , \coeff[69][3] , \coeff[69][2] , 
        \coeff[69][1] , \coeff[69][0] }), .coeff_out70({\coeff[70][7] , 
        \coeff[70][6] , \coeff[70][5] , \coeff[70][4] , \coeff[70][3] , 
        \coeff[70][2] , \coeff[70][1] , \coeff[70][0] }), .coeff_read_out(
        coeff_read_out) );
endmodule

